### YamlMime:ManagedReference
items:
- uid: DebugDrawUtils.DebugDrawMesh
  commentId: T:DebugDrawUtils.DebugDrawMesh
  id: DebugDrawMesh
  parent: DebugDrawUtils
  children:
  - DebugDrawUtils.DebugDrawMesh.#ctor(UnityEngine.MeshTopology)
  - DebugDrawUtils.DebugDrawMesh.AddColor(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColor(UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColorX2(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColorX2(UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColorX3(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColorX3(UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColorX4(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColorX4(UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddIndex
  - DebugDrawUtils.DebugDrawMesh.AddIndex(System.Int32)
  - DebugDrawUtils.DebugDrawMesh.AddIndexX2
  - DebugDrawUtils.DebugDrawMesh.AddIndexX3
  - DebugDrawUtils.DebugDrawMesh.AddIndexX4
  - DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32)
  - DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32)
  - DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32,System.Int32)
  - DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@)
  - DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color)
  - DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  - DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color)
  - DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@)
  - DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  - DebugDrawUtils.DebugDrawMesh.AddLines(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  - DebugDrawUtils.DebugDrawMesh.AddPoints(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  - DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex(System.Int32)
  - DebugDrawUtils.DebugDrawMesh.AddQuadLineIndices
  - DebugDrawUtils.DebugDrawMesh.AddTriangleLineIndices
  - DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,System.Single,System.Single)
  - DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,System.Single,System.Single,System.Single)
  - DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@)
  - DebugDrawUtils.DebugDrawMesh.AddVertex(System.Single,System.Single)
  - DebugDrawUtils.DebugDrawMesh.AddVertex(System.Single,System.Single,System.Single)
  - DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4@,System.Single,System.Single)
  - DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4@,System.Single,System.Single,System.Single)
  - DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4@,UnityEngine.Vector3@)
  - DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Vector3@)
  - DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  - DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  - DebugDrawUtils.DebugDrawMesh.Add``1(``0)
  - DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawArcSegments,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawArcSegments,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,DebugDrawUtils.DebugDrawItems.ArrowShape,DebugDrawUtils.DebugDrawItems.ArrowShape,System.Boolean,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,System.Single,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Build
  - DebugDrawUtils.DebugDrawMesh.Capsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.ChangeGroup``1(``0,System.String)
  - DebugDrawUtils.DebugDrawMesh.Clear
  - DebugDrawUtils.DebugDrawMesh.ClearAll
  - DebugDrawUtils.DebugDrawMesh.ClearGroup(System.String)
  - DebugDrawUtils.DebugDrawMesh.ClearMesh
  - DebugDrawUtils.DebugDrawMesh.Color
  - DebugDrawUtils.DebugDrawMesh.Cone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.CreateMesh
  - DebugDrawUtils.DebugDrawMesh.Cull
  - DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Vector3,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},UnityEngine.Vector3,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.DstBlend
  - DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Lines(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  - DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  - DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  - DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Collections.Generic.List{System.Int32},System.Single)
  - DebugDrawUtils.DebugDrawMesh.Mesh(UnityEngine.Mesh,System.Nullable{UnityEngine.Color},System.Single)
  - DebugDrawUtils.DebugDrawMesh.Point(UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Points(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  - DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Remove(DebugDrawUtils.DebugDrawItems.BaseItem)
  - DebugDrawUtils.DebugDrawMesh.SetCulling(UnityEngine.Rendering.CullMode)
  - DebugDrawUtils.DebugDrawMesh.SetDepthTesting(System.Boolean)
  - DebugDrawUtils.DebugDrawMesh.SetDepthTesting(System.Boolean,System.Boolean)
  - DebugDrawUtils.DebugDrawMesh.SetInvertColours(System.Boolean)
  - DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.SrcBlend
  - DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3,System.String,UnityEngine.Color,UnityEngine.TextAnchor,System.Single,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3,System.String,UnityEngine.TextAnchor,System.Single,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  - DebugDrawUtils.DebugDrawMesh.Update
  - DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  - DebugDrawUtils.DebugDrawMesh.WireCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.WireCone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  - DebugDrawUtils.DebugDrawMesh.ZTest
  - DebugDrawUtils.DebugDrawMesh.ZWrite
  - DebugDrawUtils.DebugDrawMesh.colours
  - DebugDrawUtils.DebugDrawMesh.groups
  - DebugDrawUtils.DebugDrawMesh.indices
  - DebugDrawUtils.DebugDrawMesh.items
  - DebugDrawUtils.DebugDrawMesh.vertexIndex
  - DebugDrawUtils.DebugDrawMesh.vertices
  langs:
  - csharp
  - vb
  name: DebugDrawMesh
  nameWithType: DebugDrawMesh
  fullName: DebugDrawUtils.DebugDrawMesh
  type: Class
  source:
    id: DebugDrawMesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1469
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Direct access to a debug mesh.

    Normally this class won't be used directly - instead it will automatically be created and managed by <xref href="DebugDrawUtils.DebugDraw" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class DebugDrawMesh
    content.vb: Public Class DebugDrawMesh
  inheritance:
  - System.Object
  derivedClasses:
  - DebugDrawUtils.DebugDrawTextMesh
- uid: DebugDrawUtils.DebugDrawMesh.Color
  commentId: F:DebugDrawUtils.DebugDrawMesh.Color
  id: Color
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: DebugDrawMesh.Color
  fullName: DebugDrawUtils.DebugDrawMesh.Color
  type: Field
  source:
    id: Color
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 21
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static readonly int Color
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Color As Integer
- uid: DebugDrawUtils.DebugDrawMesh.SrcBlend
  commentId: F:DebugDrawUtils.DebugDrawMesh.SrcBlend
  id: SrcBlend
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: SrcBlend
  nameWithType: DebugDrawMesh.SrcBlend
  fullName: DebugDrawUtils.DebugDrawMesh.SrcBlend
  type: Field
  source:
    id: SrcBlend
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 22
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static readonly int SrcBlend
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SrcBlend As Integer
- uid: DebugDrawUtils.DebugDrawMesh.DstBlend
  commentId: F:DebugDrawUtils.DebugDrawMesh.DstBlend
  id: DstBlend
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: DstBlend
  nameWithType: DebugDrawMesh.DstBlend
  fullName: DebugDrawUtils.DebugDrawMesh.DstBlend
  type: Field
  source:
    id: DstBlend
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 23
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static readonly int DstBlend
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly DstBlend As Integer
- uid: DebugDrawUtils.DebugDrawMesh.Cull
  commentId: F:DebugDrawUtils.DebugDrawMesh.Cull
  id: Cull
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Cull
  nameWithType: DebugDrawMesh.Cull
  fullName: DebugDrawUtils.DebugDrawMesh.Cull
  type: Field
  source:
    id: Cull
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 24
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static readonly int Cull
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Cull As Integer
- uid: DebugDrawUtils.DebugDrawMesh.ZWrite
  commentId: F:DebugDrawUtils.DebugDrawMesh.ZWrite
  id: ZWrite
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: ZWrite
  nameWithType: DebugDrawMesh.ZWrite
  fullName: DebugDrawUtils.DebugDrawMesh.ZWrite
  type: Field
  source:
    id: ZWrite
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 25
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static readonly int ZWrite
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly ZWrite As Integer
- uid: DebugDrawUtils.DebugDrawMesh.ZTest
  commentId: F:DebugDrawUtils.DebugDrawMesh.ZTest
  id: ZTest
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: ZTest
  nameWithType: DebugDrawMesh.ZTest
  fullName: DebugDrawUtils.DebugDrawMesh.ZTest
  type: Field
  source:
    id: ZTest
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 26
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static readonly int ZTest
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly ZTest As Integer
- uid: DebugDrawUtils.DebugDrawMesh.vertices
  commentId: F:DebugDrawUtils.DebugDrawMesh.vertices
  id: vertices
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: vertices
  nameWithType: DebugDrawMesh.vertices
  fullName: DebugDrawUtils.DebugDrawMesh.vertices
  type: Field
  source:
    id: vertices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 34
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: The mesh vertices populated during <xref href="DebugDrawUtils.DebugDrawMesh.Build" data-throw-if-not-resolved="false"></xref>. Generally don't access directly.
  example: []
  syntax:
    content: public readonly List<Vector3> vertices
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    content.vb: Public ReadOnly vertices As List(Of Vector3)
- uid: DebugDrawUtils.DebugDrawMesh.colours
  commentId: F:DebugDrawUtils.DebugDrawMesh.colours
  id: colours
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: colours
  nameWithType: DebugDrawMesh.colours
  fullName: DebugDrawUtils.DebugDrawMesh.colours
  type: Field
  source:
    id: colours
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 38
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: The mesh vertex colours populated during <xref href="DebugDrawUtils.DebugDrawMesh.Build" data-throw-if-not-resolved="false"></xref>. Generally don't access directly.
  example: []
  syntax:
    content: public readonly List<Color> colours
    return:
      type: System.Collections.Generic.List{UnityEngine.Color}
    content.vb: Public ReadOnly colours As List(Of Color)
- uid: DebugDrawUtils.DebugDrawMesh.indices
  commentId: F:DebugDrawUtils.DebugDrawMesh.indices
  id: indices
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: indices
  nameWithType: DebugDrawMesh.indices
  fullName: DebugDrawUtils.DebugDrawMesh.indices
  type: Field
  source:
    id: indices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 42
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: The mesh indices populated during <xref href="DebugDrawUtils.DebugDrawMesh.Build" data-throw-if-not-resolved="false"></xref>. Generally don't access directly.
  example: []
  syntax:
    content: public readonly List<int> indices
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public ReadOnly indices As List(Of Integer)
- uid: DebugDrawUtils.DebugDrawMesh.items
  commentId: F:DebugDrawUtils.DebugDrawMesh.items
  id: items
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: items
  nameWithType: DebugDrawMesh.items
  fullName: DebugDrawUtils.DebugDrawMesh.items
  type: Field
  source:
    id: items
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 55
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: protected readonly List<BaseItem> items
    return:
      type: System.Collections.Generic.List{DebugDrawUtils.DebugDrawItems.BaseItem}
    content.vb: Protected ReadOnly items As List(Of BaseItem)
- uid: DebugDrawUtils.DebugDrawMesh.groups
  commentId: F:DebugDrawUtils.DebugDrawMesh.groups
  id: groups
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: groups
  nameWithType: DebugDrawMesh.groups
  fullName: DebugDrawUtils.DebugDrawMesh.groups
  type: Field
  source:
    id: groups
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 58
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: protected readonly Dictionary<string, List<BaseItem>> groups
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{DebugDrawUtils.DebugDrawItems.BaseItem}}
    content.vb: Protected ReadOnly groups As Dictionary(Of String, List(Of BaseItem))
- uid: DebugDrawUtils.DebugDrawMesh.vertexIndex
  commentId: F:DebugDrawUtils.DebugDrawMesh.vertexIndex
  id: vertexIndex
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: vertexIndex
  nameWithType: DebugDrawMesh.vertexIndex
  fullName: DebugDrawUtils.DebugDrawMesh.vertexIndex
  type: Field
  source:
    id: vertexIndex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 63
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Tracks the current vertex index during <xref href="DebugDrawUtils.DebugDrawMesh.Build" data-throw-if-not-resolved="false"></xref>. Generally don't access directly.
  example: []
  syntax:
    content: public int vertexIndex
    return:
      type: System.Int32
    content.vb: Public vertexIndex As Integer
- uid: DebugDrawUtils.DebugDrawMesh.#ctor(UnityEngine.MeshTopology)
  commentId: M:DebugDrawUtils.DebugDrawMesh.#ctor(UnityEngine.MeshTopology)
  id: '#ctor(UnityEngine.MeshTopology)'
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: DebugDrawMesh(MeshTopology)
  nameWithType: DebugDrawMesh.DebugDrawMesh(MeshTopology)
  fullName: DebugDrawUtils.DebugDrawMesh.DebugDrawMesh(UnityEngine.MeshTopology)
  type: Constructor
  source:
    id: .ctor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 72
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Creates a mesh with the specified topology
  example: []
  syntax:
    content: public DebugDrawMesh(MeshTopology type)
    parameters:
    - id: type
      type: UnityEngine.MeshTopology
      description: The kind of mesh topology.
    content.vb: Public Sub New(type As MeshTopology)
  overload: DebugDrawUtils.DebugDrawMesh.#ctor*
  nameWithType.vb: DebugDrawMesh.New(MeshTopology)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.New(UnityEngine.MeshTopology)
  name.vb: New(MeshTopology)
- uid: DebugDrawUtils.DebugDrawMesh.CreateMesh
  commentId: M:DebugDrawUtils.DebugDrawMesh.CreateMesh
  id: CreateMesh
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: CreateMesh()
  nameWithType: DebugDrawMesh.CreateMesh()
  fullName: DebugDrawUtils.DebugDrawMesh.CreateMesh()
  type: Method
  source:
    id: CreateMesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 85
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Creates the Unity Mesh used by this instance if it does not exist.
  example: []
  syntax:
    content: public void CreateMesh()
    content.vb: Public Sub CreateMesh()
  overload: DebugDrawUtils.DebugDrawMesh.CreateMesh*
- uid: DebugDrawUtils.DebugDrawMesh.SetInvertColours(System.Boolean)
  commentId: M:DebugDrawUtils.DebugDrawMesh.SetInvertColours(System.Boolean)
  id: SetInvertColours(System.Boolean)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: SetInvertColours(bool)
  nameWithType: DebugDrawMesh.SetInvertColours(bool)
  fullName: DebugDrawUtils.DebugDrawMesh.SetInvertColours(bool)
  type: Method
  source:
    id: SetInvertColours
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 121
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Sets this mesh's material (if it has one) blend mode to invert destination colors.
  example: []
  syntax:
    content: public DebugDrawMesh SetInvertColours(bool invert = true)
    parameters:
    - id: invert
      type: System.Boolean
      description: True to invert colours.
    return:
      type: DebugDrawUtils.DebugDrawMesh
    content.vb: Public Function SetInvertColours(invert As Boolean = True) As DebugDrawMesh
  overload: DebugDrawUtils.DebugDrawMesh.SetInvertColours*
  nameWithType.vb: DebugDrawMesh.SetInvertColours(Boolean)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.SetInvertColours(Boolean)
  name.vb: SetInvertColours(Boolean)
- uid: DebugDrawUtils.DebugDrawMesh.SetCulling(UnityEngine.Rendering.CullMode)
  commentId: M:DebugDrawUtils.DebugDrawMesh.SetCulling(UnityEngine.Rendering.CullMode)
  id: SetCulling(UnityEngine.Rendering.CullMode)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: SetCulling(CullMode)
  nameWithType: DebugDrawMesh.SetCulling(CullMode)
  fullName: DebugDrawUtils.DebugDrawMesh.SetCulling(UnityEngine.Rendering.CullMode)
  type: Method
  source:
    id: SetCulling
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 144
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Sets this mesh's material (if it has one) culling mode.
  example: []
  syntax:
    content: public DebugDrawMesh SetCulling(CullMode mode)
    parameters:
    - id: mode
      type: UnityEngine.Rendering.CullMode
      description: The cull mode.
    return:
      type: DebugDrawUtils.DebugDrawMesh
    content.vb: Public Function SetCulling(mode As CullMode) As DebugDrawMesh
  overload: DebugDrawUtils.DebugDrawMesh.SetCulling*
- uid: DebugDrawUtils.DebugDrawMesh.SetDepthTesting(System.Boolean)
  commentId: M:DebugDrawUtils.DebugDrawMesh.SetDepthTesting(System.Boolean)
  id: SetDepthTesting(System.Boolean)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: SetDepthTesting(bool)
  nameWithType: DebugDrawMesh.SetDepthTesting(bool)
  fullName: DebugDrawUtils.DebugDrawMesh.SetDepthTesting(bool)
  type: Method
  source:
    id: SetDepthTesting
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 158
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Sets this mesh's material (if it has one) depth testing.
  example: []
  syntax:
    content: public DebugDrawMesh SetDepthTesting(bool enabled = true)
    parameters:
    - id: enabled
      type: System.Boolean
      description: Is depth testing enabled.
    return:
      type: DebugDrawUtils.DebugDrawMesh
    content.vb: Public Function SetDepthTesting(enabled As Boolean = True) As DebugDrawMesh
  overload: DebugDrawUtils.DebugDrawMesh.SetDepthTesting*
  nameWithType.vb: DebugDrawMesh.SetDepthTesting(Boolean)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.SetDepthTesting(Boolean)
  name.vb: SetDepthTesting(Boolean)
- uid: DebugDrawUtils.DebugDrawMesh.SetDepthTesting(System.Boolean,System.Boolean)
  commentId: M:DebugDrawUtils.DebugDrawMesh.SetDepthTesting(System.Boolean,System.Boolean)
  id: SetDepthTesting(System.Boolean,System.Boolean)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: SetDepthTesting(bool, bool)
  nameWithType: DebugDrawMesh.SetDepthTesting(bool, bool)
  fullName: DebugDrawUtils.DebugDrawMesh.SetDepthTesting(bool, bool)
  type: Method
  source:
    id: SetDepthTesting
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 173
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Sets this mesh's material (if it has one) depth testing.
  example: []
  syntax:
    content: public DebugDrawMesh SetDepthTesting(bool write, bool test)
    parameters:
    - id: write
      type: System.Boolean
      description: Enable depth writes.
    - id: test
      type: System.Boolean
      description: Enable depth tests.
    return:
      type: DebugDrawUtils.DebugDrawMesh
    content.vb: Public Function SetDepthTesting(write As Boolean, test As Boolean) As DebugDrawMesh
  overload: DebugDrawUtils.DebugDrawMesh.SetDepthTesting*
  nameWithType.vb: DebugDrawMesh.SetDepthTesting(Boolean, Boolean)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.SetDepthTesting(Boolean, Boolean)
  name.vb: SetDepthTesting(Boolean, Boolean)
- uid: DebugDrawUtils.DebugDrawMesh.Add``1(``0)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Add``1(``0)
  id: Add``1(``0)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Add<T>(T)
  nameWithType: DebugDrawMesh.Add<T>(T)
  fullName: DebugDrawUtils.DebugDrawMesh.Add<T>(T)
  type: Method
  source:
    id: Add
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 194
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Add an item to this mesh. Items are only "rendered" when <xref href="DebugDrawUtils.DebugDrawMesh.Build" data-throw-if-not-resolved="false"></xref> is called.

    Normally this method won't be used directly - instead use the specific debug methods (e.g. <xref href="DebugDrawUtils.DebugDrawItems.Line" data-throw-if-not-resolved="false"></xref>)

    or the similar static methods in <xref href="DebugDrawUtils.DebugDraw" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'public T Add<T>(T item) where T : BaseItem'
    parameters:
    - id: item
      type: '{T}'
      description: .
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function Add(Of T As BaseItem)(item As T) As T
  overload: DebugDrawUtils.DebugDrawMesh.Add*
  nameWithType.vb: DebugDrawMesh.Add(Of T)(T)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Add(Of T)(T)
  name.vb: Add(Of T)(T)
- uid: DebugDrawUtils.DebugDrawMesh.ChangeGroup``1(``0,System.String)
  commentId: M:DebugDrawUtils.DebugDrawMesh.ChangeGroup``1(``0,System.String)
  id: ChangeGroup``1(``0,System.String)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: ChangeGroup<T>(T, string)
  nameWithType: DebugDrawMesh.ChangeGroup<T>(T, string)
  fullName: DebugDrawUtils.DebugDrawMesh.ChangeGroup<T>(T, string)
  type: Method
  source:
    id: ChangeGroup
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 236
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: 'public T ChangeGroup<T>(T item, string newGroup) where T : BaseItem'
    parameters:
    - id: item
      type: '{T}'
    - id: newGroup
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function ChangeGroup(Of T As BaseItem)(item As T, newGroup As String) As T
  overload: DebugDrawUtils.DebugDrawMesh.ChangeGroup*
  nameWithType.vb: DebugDrawMesh.ChangeGroup(Of T)(T, String)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.ChangeGroup(Of T)(T, String)
  name.vb: ChangeGroup(Of T)(T, String)
- uid: DebugDrawUtils.DebugDrawMesh.Remove(DebugDrawUtils.DebugDrawItems.BaseItem)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Remove(DebugDrawUtils.DebugDrawItems.BaseItem)
  id: Remove(DebugDrawUtils.DebugDrawItems.BaseItem)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Remove(BaseItem)
  nameWithType: DebugDrawMesh.Remove(BaseItem)
  fullName: DebugDrawUtils.DebugDrawMesh.Remove(DebugDrawUtils.DebugDrawItems.BaseItem)
  type: Method
  source:
    id: Remove
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 271
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Immediately removes the item from this mesh.
  example: []
  syntax:
    content: public void Remove(BaseItem item)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item to remove.
    content.vb: Public Sub Remove(item As BaseItem)
  overload: DebugDrawUtils.DebugDrawMesh.Remove*
- uid: DebugDrawUtils.DebugDrawMesh.Clear
  commentId: M:DebugDrawUtils.DebugDrawMesh.Clear
  id: Clear
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: DebugDrawMesh.Clear()
  fullName: DebugDrawUtils.DebugDrawMesh.Clear()
  type: Method
  source:
    id: Clear
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 300
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Removes all debug items added to this mesh.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: DebugDrawUtils.DebugDrawMesh.Clear*
- uid: DebugDrawUtils.DebugDrawMesh.ClearMesh
  commentId: M:DebugDrawUtils.DebugDrawMesh.ClearMesh
  id: ClearMesh
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: ClearMesh()
  nameWithType: DebugDrawMesh.ClearMesh()
  fullName: DebugDrawUtils.DebugDrawMesh.ClearMesh()
  type: Method
  source:
    id: ClearMesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 313
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Clears the this DebugDrawMesh's Unity Mesh if it has been created.
  example: []
  syntax:
    content: public void ClearMesh()
    content.vb: Public Sub ClearMesh()
  overload: DebugDrawUtils.DebugDrawMesh.ClearMesh*
- uid: DebugDrawUtils.DebugDrawMesh.ClearAll
  commentId: M:DebugDrawUtils.DebugDrawMesh.ClearAll
  id: ClearAll
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: ClearAll()
  nameWithType: DebugDrawMesh.ClearAll()
  fullName: DebugDrawUtils.DebugDrawMesh.ClearAll()
  type: Method
  source:
    id: ClearAll
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 327
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Clears all the items as well as this DebugDrawMesh's Unity Mesh.
  example: []
  syntax:
    content: public void ClearAll()
    content.vb: Public Sub ClearAll()
  overload: DebugDrawUtils.DebugDrawMesh.ClearAll*
- uid: DebugDrawUtils.DebugDrawMesh.ClearGroup(System.String)
  commentId: M:DebugDrawUtils.DebugDrawMesh.ClearGroup(System.String)
  id: ClearGroup(System.String)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: ClearGroup(string)
  nameWithType: DebugDrawMesh.ClearGroup(string)
  fullName: DebugDrawUtils.DebugDrawMesh.ClearGroup(string)
  type: Method
  source:
    id: ClearGroup
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 345
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Removes all the items that belong to the given group.
  example: []
  syntax:
    content: public void ClearGroup(string group)
    parameters:
    - id: group
      type: System.String
      description: ''
    content.vb: Public Sub ClearGroup(group As String)
  overload: DebugDrawUtils.DebugDrawMesh.ClearGroup*
  nameWithType.vb: DebugDrawMesh.ClearGroup(String)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.ClearGroup(String)
  name.vb: ClearGroup(String)
- uid: DebugDrawUtils.DebugDrawMesh.Update
  commentId: M:DebugDrawUtils.DebugDrawMesh.Update
  id: Update
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: DebugDrawMesh.Update()
  fullName: DebugDrawUtils.DebugDrawMesh.Update()
  type: Method
  source:
    id: Update
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 363
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Updates all items, clearing ones that have expired.
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: DebugDrawUtils.DebugDrawMesh.Update*
- uid: DebugDrawUtils.DebugDrawMesh.Build
  commentId: M:DebugDrawUtils.DebugDrawMesh.Build
  id: Build
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: DebugDrawMesh.Build()
  fullName: DebugDrawUtils.DebugDrawMesh.Build()
  type: Method
  source:
    id: Build
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 386
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Builds all the debug items, filling the <xref href="DebugDrawUtils.DebugDrawMesh.vertices" data-throw-if-not-resolved="false"></xref>, <xref href="DebugDrawUtils.DebugDrawMesh.colours" data-throw-if-not-resolved="false"></xref>, and <xref href="DebugDrawUtils.DebugDrawMesh.indices" data-throw-if-not-resolved="false"></xref> arrays.

    Will also call <xref href="DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)" data-throw-if-not-resolved="false"></xref> if this instance has an associated Mesh.
  example: []
  syntax:
    content: public void Build()
    content.vb: Public Sub Build()
  overload: DebugDrawUtils.DebugDrawMesh.Build*
- uid: DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  commentId: M:DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  id: UpdateMesh(UnityEngine.Mesh)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: UpdateMesh(Mesh)
  nameWithType: DebugDrawMesh.UpdateMesh(Mesh)
  fullName: DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  type: Method
  source:
    id: UpdateMesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 424
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Push the new vertex data to the mesh. If <xref href="DebugDrawUtils.DebugDrawMesh.CreateMesh" data-throw-if-not-resolved="false"></xref> was called, this will automatically

    be called during <xref href="DebugDrawUtils.DebugDrawMesh.Build" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void UpdateMesh(Mesh mesh)
    parameters:
    - id: mesh
      type: UnityEngine.Mesh
      description: The mesh to update.
    content.vb: Public Sub UpdateMesh(mesh As Mesh)
  overload: DebugDrawUtils.DebugDrawMesh.UpdateMesh*
- uid: DebugDrawUtils.DebugDrawMesh.AddIndex
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndex
  id: AddIndex
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndex()
  nameWithType: DebugDrawMesh.AddIndex()
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndex()
  type: Method
  source:
    id: AddIndex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 454
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds an index, incrementing <xref href="DebugDrawUtils.DebugDrawMesh.vertexIndex" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void AddIndex()
    content.vb: Public Sub AddIndex()
  overload: DebugDrawUtils.DebugDrawMesh.AddIndex*
- uid: DebugDrawUtils.DebugDrawMesh.AddIndex(System.Int32)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndex(System.Int32)
  id: AddIndex(System.Int32)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndex(int)
  nameWithType: DebugDrawMesh.AddIndex(int)
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndex(int)
  type: Method
  source:
    id: AddIndex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 464
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds an index.
  example: []
  syntax:
    content: public void AddIndex(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index to add.
    content.vb: Public Sub AddIndex(index As Integer)
  overload: DebugDrawUtils.DebugDrawMesh.AddIndex*
  nameWithType.vb: DebugDrawMesh.AddIndex(Integer)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddIndex(Integer)
  name.vb: AddIndex(Integer)
- uid: DebugDrawUtils.DebugDrawMesh.AddIndexX2
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndexX2
  id: AddIndexX2
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndexX2()
  nameWithType: DebugDrawMesh.AddIndexX2()
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndexX2()
  type: Method
  source:
    id: AddIndexX2
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 474
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds two indices, incrementing <xref href="DebugDrawUtils.DebugDrawMesh.vertexIndex" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void AddIndexX2()
    content.vb: Public Sub AddIndexX2()
  overload: DebugDrawUtils.DebugDrawMesh.AddIndexX2*
- uid: DebugDrawUtils.DebugDrawMesh.AddIndexX3
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndexX3
  id: AddIndexX3
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndexX3()
  nameWithType: DebugDrawMesh.AddIndexX3()
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndexX3()
  type: Method
  source:
    id: AddIndexX3
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 484
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds three indices, incrementing <xref href="DebugDrawUtils.DebugDrawMesh.vertexIndex" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void AddIndexX3()
    content.vb: Public Sub AddIndexX3()
  overload: DebugDrawUtils.DebugDrawMesh.AddIndexX3*
- uid: DebugDrawUtils.DebugDrawMesh.AddIndexX4
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndexX4
  id: AddIndexX4
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndexX4()
  nameWithType: DebugDrawMesh.AddIndexX4()
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndexX4()
  type: Method
  source:
    id: AddIndexX4
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 495
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds four indices, incrementing <xref href="DebugDrawUtils.DebugDrawMesh.vertexIndex" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void AddIndexX4()
    content.vb: Public Sub AddIndexX4()
  overload: DebugDrawUtils.DebugDrawMesh.AddIndexX4*
- uid: DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32)
  id: AddIndices(System.Int32,System.Int32)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndices(int, int)
  nameWithType: DebugDrawMesh.AddIndices(int, int)
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndices(int, int)
  type: Method
  source:
    id: AddIndices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 507
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Add two indices.
  example: []
  syntax:
    content: public void AddIndices(int index1, int index2)
    parameters:
    - id: index1
      type: System.Int32
    - id: index2
      type: System.Int32
    content.vb: Public Sub AddIndices(index1 As Integer, index2 As Integer)
  overload: DebugDrawUtils.DebugDrawMesh.AddIndices*
  nameWithType.vb: DebugDrawMesh.AddIndices(Integer, Integer)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddIndices(Integer, Integer)
  name.vb: AddIndices(Integer, Integer)
- uid: DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32)
  id: AddIndices(System.Int32,System.Int32,System.Int32)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndices(int, int, int)
  nameWithType: DebugDrawMesh.AddIndices(int, int, int)
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndices(int, int, int)
  type: Method
  source:
    id: AddIndices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 517
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Add three indices.
  example: []
  syntax:
    content: public void AddIndices(int index1, int index2, int index3)
    parameters:
    - id: index1
      type: System.Int32
    - id: index2
      type: System.Int32
    - id: index3
      type: System.Int32
    content.vb: Public Sub AddIndices(index1 As Integer, index2 As Integer, index3 As Integer)
  overload: DebugDrawUtils.DebugDrawMesh.AddIndices*
  nameWithType.vb: DebugDrawMesh.AddIndices(Integer, Integer, Integer)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddIndices(Integer, Integer, Integer)
  name.vb: AddIndices(Integer, Integer, Integer)
- uid: DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddIndices(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndices(int, int, int, int)
  nameWithType: DebugDrawMesh.AddIndices(int, int, int, int)
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndices(int, int, int, int)
  type: Method
  source:
    id: AddIndices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 528
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Add four indices.
  example: []
  syntax:
    content: public void AddIndices(int index1, int index2, int index3, int index4)
    parameters:
    - id: index1
      type: System.Int32
    - id: index2
      type: System.Int32
    - id: index3
      type: System.Int32
    - id: index4
      type: System.Int32
    content.vb: Public Sub AddIndices(index1 As Integer, index2 As Integer, index3 As Integer, index4 As Integer)
  overload: DebugDrawUtils.DebugDrawMesh.AddIndices*
  nameWithType.vb: DebugDrawMesh.AddIndices(Integer, Integer, Integer, Integer)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddIndices(Integer, Integer, Integer, Integer)
  name.vb: AddIndices(Integer, Integer, Integer, Integer)
- uid: DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddIndices(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndices(int, int, int, int, int, int)
  nameWithType: DebugDrawMesh.AddIndices(int, int, int, int, int, int)
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndices(int, int, int, int, int, int)
  type: Method
  source:
    id: AddIndices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 540
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Add six indices.
  example: []
  syntax:
    content: public void AddIndices(int index1, int index2, int index3, int index4, int index5, int index6)
    parameters:
    - id: index1
      type: System.Int32
    - id: index2
      type: System.Int32
    - id: index3
      type: System.Int32
    - id: index4
      type: System.Int32
    - id: index5
      type: System.Int32
    - id: index6
      type: System.Int32
    content.vb: Public Sub AddIndices(index1 As Integer, index2 As Integer, index3 As Integer, index4 As Integer, index5 As Integer, index6 As Integer)
  overload: DebugDrawUtils.DebugDrawMesh.AddIndices*
  nameWithType.vb: DebugDrawMesh.AddIndices(Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddIndices(Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: AddIndices(Integer, Integer, Integer, Integer, Integer, Integer)
- uid: DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddIndices(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddIndices(int, int, int, int, int, int, int, int)
  nameWithType: DebugDrawMesh.AddIndices(int, int, int, int, int, int, int, int)
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndices(int, int, int, int, int, int, int, int)
  type: Method
  source:
    id: AddIndices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 554
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Add eight indices.
  example: []
  syntax:
    content: public void AddIndices(int index1, int index2, int index3, int index4, int index5, int index6, int index7, int index8)
    parameters:
    - id: index1
      type: System.Int32
    - id: index2
      type: System.Int32
    - id: index3
      type: System.Int32
    - id: index4
      type: System.Int32
    - id: index5
      type: System.Int32
    - id: index6
      type: System.Int32
    - id: index7
      type: System.Int32
    - id: index8
      type: System.Int32
    content.vb: Public Sub AddIndices(index1 As Integer, index2 As Integer, index3 As Integer, index4 As Integer, index5 As Integer, index6 As Integer, index7 As Integer, index8 As Integer)
  overload: DebugDrawUtils.DebugDrawMesh.AddIndices*
  nameWithType.vb: DebugDrawMesh.AddIndices(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddIndices(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: AddIndices(Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex(System.Int32)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex(System.Int32)
  id: AddPreviousVertexIndex(System.Int32)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddPreviousVertexIndex(int)
  nameWithType: DebugDrawMesh.AddPreviousVertexIndex(int)
  fullName: DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex(int)
  type: Method
  source:
    id: AddPreviousVertexIndex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 571
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds a previous index (<code>vertexIndex - fromEnd</code>)
  example: []
  syntax:
    content: public void AddPreviousVertexIndex(int fromEnd = 1)
    parameters:
    - id: fromEnd
      type: System.Int32
      description: .
    content.vb: Public Sub AddPreviousVertexIndex(fromEnd As Integer = 1)
  overload: DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex*
  nameWithType.vb: DebugDrawMesh.AddPreviousVertexIndex(Integer)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex(Integer)
  name.vb: AddPreviousVertexIndex(Integer)
- uid: DebugDrawUtils.DebugDrawMesh.AddTriangleLineIndices
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddTriangleLineIndices
  id: AddTriangleLineIndices
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddTriangleLineIndices()
  nameWithType: DebugDrawMesh.AddTriangleLineIndices()
  fullName: DebugDrawUtils.DebugDrawMesh.AddTriangleLineIndices()
  type: Method
  source:
    id: AddTriangleLineIndices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 580
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds the indices forming a closed loop of three lines - 0,1 1,2 2,0.
  example: []
  syntax:
    content: public void AddTriangleLineIndices()
    content.vb: Public Sub AddTriangleLineIndices()
  overload: DebugDrawUtils.DebugDrawMesh.AddTriangleLineIndices*
- uid: DebugDrawUtils.DebugDrawMesh.AddQuadLineIndices
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddQuadLineIndices
  id: AddQuadLineIndices
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddQuadLineIndices()
  nameWithType: DebugDrawMesh.AddQuadLineIndices()
  fullName: DebugDrawUtils.DebugDrawMesh.AddQuadLineIndices()
  type: Method
  source:
    id: AddQuadLineIndices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 597
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds the indices forming a closed loop of four lines - 0,1 1,2 2,3 3,0.
  example: []
  syntax:
    content: public void AddQuadLineIndices()
    content.vb: Public Sub AddQuadLineIndices()
  overload: DebugDrawUtils.DebugDrawMesh.AddQuadLineIndices*
- uid: DebugDrawUtils.DebugDrawMesh.AddColor(UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColor(UnityEngine.Color@)
  id: AddColor(UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColor(ref Color)
  nameWithType: DebugDrawMesh.AddColor(ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColor(ref UnityEngine.Color)
  type: Method
  source:
    id: AddColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 621
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds a color
  example: []
  syntax:
    content: public void AddColor(ref Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: The color to add.
    content.vb: Public Sub AddColor(color As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColor*
  nameWithType.vb: DebugDrawMesh.AddColor(Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColor(UnityEngine.Color)
  name.vb: AddColor(Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColorX2(UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColorX2(UnityEngine.Color@)
  id: AddColorX2(UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColorX2(ref Color)
  nameWithType: DebugDrawMesh.AddColorX2(ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColorX2(ref UnityEngine.Color)
  type: Method
  source:
    id: AddColorX2
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 631
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds the same color twice
  example: []
  syntax:
    content: public void AddColorX2(ref Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: The color to add.
    content.vb: Public Sub AddColorX2(color As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColorX2*
  nameWithType.vb: DebugDrawMesh.AddColorX2(Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColorX2(UnityEngine.Color)
  name.vb: AddColorX2(Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColorX3(UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColorX3(UnityEngine.Color@)
  id: AddColorX3(UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColorX3(ref Color)
  nameWithType: DebugDrawMesh.AddColorX3(ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColorX3(ref UnityEngine.Color)
  type: Method
  source:
    id: AddColorX3
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 642
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds the same color three times
  example: []
  syntax:
    content: public void AddColorX3(ref Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: The color to add.
    content.vb: Public Sub AddColorX3(color As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColorX3*
  nameWithType.vb: DebugDrawMesh.AddColorX3(Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColorX3(UnityEngine.Color)
  name.vb: AddColorX3(Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColorX4(UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColorX4(UnityEngine.Color@)
  id: AddColorX4(UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColorX4(ref Color)
  nameWithType: DebugDrawMesh.AddColorX4(ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColorX4(ref UnityEngine.Color)
  type: Method
  source:
    id: AddColorX4
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 654
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds the same for times twice
  example: []
  syntax:
    content: public void AddColorX4(ref Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: The color to add.
    content.vb: Public Sub AddColorX4(color As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColorX4*
  nameWithType.vb: DebugDrawMesh.AddColorX4(Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColorX4(UnityEngine.Color)
  name.vb: AddColorX4(Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColor(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColor(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  id: AddColor(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColor(BaseItem, ref Color)
  nameWithType: DebugDrawMesh.AddColor(BaseItem, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColor(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Color)
  type: Method
  source:
    id: AddColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 671
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds a color
  example: []
  syntax:
    content: public void AddColor(BaseItem item, ref Color color)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item with which the color will be multiplied.
    - id: color
      type: UnityEngine.Color
      description: The color to add.
    content.vb: Public Sub AddColor(item As BaseItem, color As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColor*
  nameWithType.vb: DebugDrawMesh.AddColor(BaseItem, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColor(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Color)
  name.vb: AddColor(BaseItem, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColorX2(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColorX2(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  id: AddColorX2(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColorX2(BaseItem, ref Color)
  nameWithType: DebugDrawMesh.AddColorX2(BaseItem, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColorX2(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Color)
  type: Method
  source:
    id: AddColorX2
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 682
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds the same color twice
  example: []
  syntax:
    content: public void AddColorX2(BaseItem item, ref Color color)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item with which the color will be multiplied.
    - id: color
      type: UnityEngine.Color
      description: The color to add.
    content.vb: Public Sub AddColorX2(item As BaseItem, color As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColorX2*
  nameWithType.vb: DebugDrawMesh.AddColorX2(BaseItem, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColorX2(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Color)
  name.vb: AddColorX2(BaseItem, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColorX3(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColorX3(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  id: AddColorX3(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColorX3(BaseItem, ref Color)
  nameWithType: DebugDrawMesh.AddColorX3(BaseItem, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColorX3(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Color)
  type: Method
  source:
    id: AddColorX3
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 703
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds the same color three times
  example: []
  syntax:
    content: public void AddColorX3(BaseItem item, ref Color color)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item with which the color will be multiplied.
    - id: color
      type: UnityEngine.Color
      description: The color to add.
    content.vb: Public Sub AddColorX3(item As BaseItem, color As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColorX3*
  nameWithType.vb: DebugDrawMesh.AddColorX3(BaseItem, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColorX3(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Color)
  name.vb: AddColorX3(BaseItem, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColorX4(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColorX4(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  id: AddColorX4(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColorX4(BaseItem, ref Color)
  nameWithType: DebugDrawMesh.AddColorX4(BaseItem, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColorX4(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Color)
  type: Method
  source:
    id: AddColorX4
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 726
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds the same color times twice.
  example: []
  syntax:
    content: public void AddColorX4(BaseItem item, ref Color color)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item with which the color will be multiplied.
    - id: color
      type: UnityEngine.Color
      description: The color to add.
    content.vb: Public Sub AddColorX4(item As BaseItem, color As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColorX4*
  nameWithType.vb: DebugDrawMesh.AddColorX4(BaseItem, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColorX4(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Color)
  name.vb: AddColorX4(BaseItem, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@)
  id: AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColors(BaseItem, ref Color, ref Color)
  nameWithType: DebugDrawMesh.AddColors(BaseItem, ref Color, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Color, ref UnityEngine.Color)
  type: Method
  source:
    id: AddColors
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 752
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds two colors.
  example: []
  syntax:
    content: public void AddColors(BaseItem item, ref Color color1, ref Color color2)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item with which the color will be multiplied.
    - id: color1
      type: UnityEngine.Color
      description: ''
    - id: color2
      type: UnityEngine.Color
      description: ''
    content.vb: Public Sub AddColors(item As BaseItem, color1 As Color, color2 As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColors*
  nameWithType.vb: DebugDrawMesh.AddColors(BaseItem, Color, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Color, UnityEngine.Color)
  name.vb: AddColors(BaseItem, Color, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@)
  id: AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColors(BaseItem, ref Color, ref Color, ref Color)
  nameWithType: DebugDrawMesh.AddColors(BaseItem, ref Color, ref Color, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Color, ref UnityEngine.Color, ref UnityEngine.Color)
  type: Method
  source:
    id: AddColors
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 774
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds three colors.
  example: []
  syntax:
    content: public void AddColors(BaseItem item, ref Color color1, ref Color color2, ref Color color3)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item with which the color will be multiplied.
    - id: color1
      type: UnityEngine.Color
      description: ''
    - id: color2
      type: UnityEngine.Color
      description: ''
    - id: color3
      type: UnityEngine.Color
      description: ''
    content.vb: Public Sub AddColors(item As BaseItem, color1 As Color, color2 As Color, color3 As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColors*
  nameWithType.vb: DebugDrawMesh.AddColors(BaseItem, Color, Color, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color)
  name.vb: AddColors(BaseItem, Color, Color, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@)
  id: AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddColors(BaseItem, ref Color, ref Color, ref Color, ref Color)
  nameWithType: DebugDrawMesh.AddColors(BaseItem, ref Color, ref Color, ref Color, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Color, ref UnityEngine.Color, ref UnityEngine.Color, ref UnityEngine.Color)
  type: Method
  source:
    id: AddColors
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 799
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds four colors.
  example: []
  syntax:
    content: public void AddColors(BaseItem item, ref Color color1, ref Color color2, ref Color color3, ref Color color4)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item with which the color will be multiplied.
    - id: color1
      type: UnityEngine.Color
      description: ''
    - id: color2
      type: UnityEngine.Color
      description: ''
    - id: color3
      type: UnityEngine.Color
      description: ''
    - id: color4
      type: UnityEngine.Color
      description: ''
    content.vb: Public Sub AddColors(item As BaseItem, color1 As Color, color2 As Color, color3 As Color, color4 As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddColors*
  nameWithType.vb: DebugDrawMesh.AddColors(BaseItem, Color, Color, Color, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color)
  name.vb: AddColors(BaseItem, Color, Color, Color, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Vector3@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Vector3@)
  id: AddVertex(UnityEngine.Vector3@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertex(ref Vector3)
  nameWithType: DebugDrawMesh.AddVertex(ref Vector3)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex(ref UnityEngine.Vector3)
  type: Method
  source:
    id: AddVertex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 825
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds a vertex
  example: []
  syntax:
    content: public void AddVertex(ref Vector3 vertex)
    parameters:
    - id: vertex
      type: UnityEngine.Vector3
      description: The vertex to add.
    content.vb: Public Sub AddVertex(vertex As Vector3)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertex*
  nameWithType.vb: DebugDrawMesh.AddVertex(Vector3)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Vector3)
  name.vb: AddVertex(Vector3)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex(System.Single,System.Single,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertex(System.Single,System.Single,System.Single)
  id: AddVertex(System.Single,System.Single,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertex(float, float, float)
  nameWithType: DebugDrawMesh.AddVertex(float, float, float)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex(float, float, float)
  type: Method
  source:
    id: AddVertex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 837
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds a vertex
  example: []
  syntax:
    content: public void AddVertex(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
      description: The x value of the vertex to add.
    - id: y
      type: System.Single
      description: The y value of the vertex to add.
    - id: z
      type: System.Single
      description: The z value of the vertex to add.
    content.vb: Public Sub AddVertex(x As Single, y As Single, z As Single)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertex*
  nameWithType.vb: DebugDrawMesh.AddVertex(Single, Single, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertex(Single, Single, Single)
  name.vb: AddVertex(Single, Single, Single)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex(System.Single,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertex(System.Single,System.Single)
  id: AddVertex(System.Single,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertex(float, float)
  nameWithType: DebugDrawMesh.AddVertex(float, float)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex(float, float)
  type: Method
  source:
    id: AddVertex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 848
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds a vertex with z set to 0
  example: []
  syntax:
    content: public void AddVertex(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: The x value of the vertex to add.
    - id: y
      type: System.Single
      description: The y value of the vertex to add.
    content.vb: Public Sub AddVertex(x As Single, y As Single)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertex*
  nameWithType.vb: DebugDrawMesh.AddVertex(Single, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertex(Single, Single)
  name.vb: AddVertex(Single, Single)
- uid: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@)
  id: AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLine(ref Vector3, ref Vector3)
  nameWithType: DebugDrawMesh.AddLine(ref Vector3, ref Vector3)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine(ref UnityEngine.Vector3, ref UnityEngine.Vector3)
  type: Method
  source:
    id: AddLine
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 859
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds two vertices and indices forming a line
  example: []
  syntax:
    content: public void AddLine(ref Vector3 v1, ref Vector3 v2)
    parameters:
    - id: v1
      type: UnityEngine.Vector3
      description: The line start point.
    - id: v2
      type: UnityEngine.Vector3
      description: The line end point.
    content.vb: Public Sub AddLine(v1 As Vector3, v2 As Vector3)
  overload: DebugDrawUtils.DebugDrawMesh.AddLine*
  nameWithType.vb: DebugDrawMesh.AddLine(Vector3, Vector3)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3, UnityEngine.Vector3)
  name.vb: AddLine(Vector3, Vector3)
- uid: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@)
  id: AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLine(ref Vector3, ref Vector3, ref Color)
  nameWithType: DebugDrawMesh.AddLine(ref Vector3, ref Vector3, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine(ref UnityEngine.Vector3, ref UnityEngine.Vector3, ref UnityEngine.Color)
  type: Method
  source:
    id: AddLine
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 874
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds two vertices, colors and indices forming a line
  example: []
  syntax:
    content: public void AddLine(ref Vector3 v1, ref Vector3 v2, ref Color clr)
    parameters:
    - id: v1
      type: UnityEngine.Vector3
      description: The line start point.
    - id: v2
      type: UnityEngine.Vector3
      description: The line end point.
    - id: clr
      type: UnityEngine.Color
      description: The line color.
    content.vb: Public Sub AddLine(v1 As Vector3, v2 As Vector3, clr As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddLine*
  nameWithType.vb: DebugDrawMesh.AddLine(Vector3, Vector3, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color)
  name.vb: AddLine(Vector3, Vector3, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  id: AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLine(ref Vector3, ref Vector3, ref Color, ref Color)
  nameWithType: DebugDrawMesh.AddLine(ref Vector3, ref Vector3, ref Color, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine(ref UnityEngine.Vector3, ref UnityEngine.Vector3, ref UnityEngine.Color, ref UnityEngine.Color)
  type: Method
  source:
    id: AddLine
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 892
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds two vertices, colors, and indices forming a line
  example: []
  syntax:
    content: public void AddLine(ref Vector3 v1, ref Vector3 v2, ref Color clr1, ref Color clr2)
    parameters:
    - id: v1
      type: UnityEngine.Vector3
      description: The line start point.
    - id: v2
      type: UnityEngine.Vector3
      description: The line end point.
    - id: clr1
      type: UnityEngine.Color
      description: The line color at the start point.
    - id: clr2
      type: UnityEngine.Color
      description: The line color at the end point.
    content.vb: Public Sub AddLine(v1 As Vector3, v2 As Vector3, clr1 As Color, clr2 As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddLine*
  nameWithType.vb: DebugDrawMesh.AddLine(Vector3, Vector3, Color, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color)
  name.vb: AddLine(Vector3, Vector3, Color, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4@,UnityEngine.Vector3@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4@,UnityEngine.Vector3@)
  id: AddVertex(UnityEngine.Matrix4x4@,UnityEngine.Vector3@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertex(ref Matrix4x4, ref Vector3)
  nameWithType: DebugDrawMesh.AddVertex(ref Matrix4x4, ref Vector3)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex(ref UnityEngine.Matrix4x4, ref UnityEngine.Vector3)
  type: Method
  source:
    id: AddVertex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 911
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Transforms and adds a vertex.
  example: []
  syntax:
    content: public void AddVertex(ref Matrix4x4 m, ref Vector3 vertex)
    parameters:
    - id: m
      type: UnityEngine.Matrix4x4
      description: The matrix to transform the vertex by.
    - id: vertex
      type: UnityEngine.Vector3
      description: The vertex to add.
    content.vb: Public Sub AddVertex(m As Matrix4x4, vertex As Vector3)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertex*
  nameWithType.vb: DebugDrawMesh.AddVertex(Matrix4x4, Vector3)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4, UnityEngine.Vector3)
  name.vb: AddVertex(Matrix4x4, Vector3)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4@,System.Single,System.Single,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4@,System.Single,System.Single,System.Single)
  id: AddVertex(UnityEngine.Matrix4x4@,System.Single,System.Single,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertex(ref Matrix4x4, float, float, float)
  nameWithType: DebugDrawMesh.AddVertex(ref Matrix4x4, float, float, float)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex(ref UnityEngine.Matrix4x4, float, float, float)
  type: Method
  source:
    id: AddVertex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 924
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Transforms and adds a vertex.
  example: []
  syntax:
    content: public void AddVertex(ref Matrix4x4 m, float x, float y, float z)
    parameters:
    - id: m
      type: UnityEngine.Matrix4x4
      description: The matrix to transform the vertex by.
    - id: x
      type: System.Single
      description: The x value of the vertex to add.
    - id: y
      type: System.Single
      description: The y value of the vertex to add.
    - id: z
      type: System.Single
      description: The z value of the vertex to add.
    content.vb: Public Sub AddVertex(m As Matrix4x4, x As Single, y As Single, z As Single)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertex*
  nameWithType.vb: DebugDrawMesh.AddVertex(Matrix4x4, Single, Single, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4, Single, Single, Single)
  name.vb: AddVertex(Matrix4x4, Single, Single, Single)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4@,System.Single,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4@,System.Single,System.Single)
  id: AddVertex(UnityEngine.Matrix4x4@,System.Single,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertex(ref Matrix4x4, float, float)
  nameWithType: DebugDrawMesh.AddVertex(ref Matrix4x4, float, float)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex(ref UnityEngine.Matrix4x4, float, float)
  type: Method
  source:
    id: AddVertex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 936
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Transforms and adds a vertex with z set to 0.
  example: []
  syntax:
    content: public void AddVertex(ref Matrix4x4 m, float x, float y)
    parameters:
    - id: m
      type: UnityEngine.Matrix4x4
      description: The matrix to transform the vertex by.
    - id: x
      type: System.Single
      description: The x value of the vertex to add.
    - id: y
      type: System.Single
      description: The y value of the vertex to add.
    content.vb: Public Sub AddVertex(m As Matrix4x4, x As Single, y As Single)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertex*
  nameWithType.vb: DebugDrawMesh.AddVertex(Matrix4x4, Single, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Matrix4x4, Single, Single)
  name.vb: AddVertex(Matrix4x4, Single, Single)
- uid: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  id: AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLine(ref Matrix4x4, ref Vector3, ref Vector3)
  nameWithType: DebugDrawMesh.AddLine(ref Matrix4x4, ref Vector3, ref Vector3)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine(ref UnityEngine.Matrix4x4, ref UnityEngine.Vector3, ref UnityEngine.Vector3)
  type: Method
  source:
    id: AddLine
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 948
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds two vertices and indices forming a line
  example: []
  syntax:
    content: public void AddLine(ref Matrix4x4 m, ref Vector3 v1, ref Vector3 v2)
    parameters:
    - id: m
      type: UnityEngine.Matrix4x4
      description: The matrix to transform the vertices by.
    - id: v1
      type: UnityEngine.Vector3
      description: The line start point.
    - id: v2
      type: UnityEngine.Vector3
      description: The line end point.
    content.vb: Public Sub AddLine(m As Matrix4x4, v1 As Vector3, v2 As Vector3)
  overload: DebugDrawUtils.DebugDrawMesh.AddLine*
  nameWithType.vb: DebugDrawMesh.AddLine(Matrix4x4, Vector3, Vector3)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Vector3)
  name.vb: AddLine(Matrix4x4, Vector3, Vector3)
- uid: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color)
  id: AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLine(ref Matrix4x4, ref Vector3, ref Vector3, Color)
  nameWithType: DebugDrawMesh.AddLine(ref Matrix4x4, ref Vector3, ref Vector3, Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine(ref UnityEngine.Matrix4x4, ref UnityEngine.Vector3, ref UnityEngine.Vector3, UnityEngine.Color)
  type: Method
  source:
    id: AddLine
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 964
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds and transforms two vertices, color and indices forming a line
  example: []
  syntax:
    content: public void AddLine(ref Matrix4x4 m, ref Vector3 v1, ref Vector3 v2, Color clr)
    parameters:
    - id: m
      type: UnityEngine.Matrix4x4
      description: The matrix to transform the vertices by.
    - id: v1
      type: UnityEngine.Vector3
      description: The line start point.
    - id: v2
      type: UnityEngine.Vector3
      description: The line end point.
    - id: clr
      type: UnityEngine.Color
      description: The line color.
    content.vb: Public Sub AddLine(m As Matrix4x4, v1 As Vector3, v2 As Vector3, clr As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddLine*
  nameWithType.vb: DebugDrawMesh.AddLine(Matrix4x4, Vector3, Vector3, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color)
  name.vb: AddLine(Matrix4x4, Vector3, Vector3, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  id: AddLine(UnityEngine.Matrix4x4@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLine(ref Matrix4x4, ref Vector3, ref Vector3, ref Color, ref Color)
  nameWithType: DebugDrawMesh.AddLine(ref Matrix4x4, ref Vector3, ref Vector3, ref Color, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine(ref UnityEngine.Matrix4x4, ref UnityEngine.Vector3, ref UnityEngine.Vector3, ref UnityEngine.Color, ref UnityEngine.Color)
  type: Method
  source:
    id: AddLine
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 983
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds and transforms two vertices, colors, and indices forming a line
  example: []
  syntax:
    content: public void AddLine(ref Matrix4x4 m, ref Vector3 v1, ref Vector3 v2, ref Color clr1, ref Color clr2)
    parameters:
    - id: m
      type: UnityEngine.Matrix4x4
      description: The matrix to transform the vertices by.
    - id: v1
      type: UnityEngine.Vector3
      description: The line start point.
    - id: v2
      type: UnityEngine.Vector3
      description: The line end point.
    - id: clr1
      type: UnityEngine.Color
      description: The line color at the start point.
    - id: clr2
      type: UnityEngine.Color
      description: The line color at the end point.
    content.vb: Public Sub AddLine(m As Matrix4x4, v1 As Vector3, v2 As Vector3, clr1 As Color, clr2 As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddLine*
  nameWithType.vb: DebugDrawMesh.AddLine(Matrix4x4, Vector3, Vector3, Color, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Matrix4x4, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color)
  name.vb: AddLine(Matrix4x4, Vector3, Vector3, Color, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@)
  id: AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertex(BaseItem, ref Vector3)
  nameWithType: DebugDrawMesh.AddVertex(BaseItem, ref Vector3)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Vector3)
  type: Method
  source:
    id: AddVertex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1002
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Transforms and adds a vertex.
  example: []
  syntax:
    content: public void AddVertex(BaseItem item, ref Vector3 vertex)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: vertex
      type: UnityEngine.Vector3
      description: The vertex to add.
    content.vb: Public Sub AddVertex(item As BaseItem, vertex As Vector3)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertex*
  nameWithType.vb: DebugDrawMesh.AddVertex(BaseItem, Vector3)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Vector3)
  name.vb: AddVertex(BaseItem, Vector3)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  id: AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertices(BaseItem, ref Vector3, ref Vector3, ref Vector3)
  nameWithType: DebugDrawMesh.AddVertices(BaseItem, ref Vector3, ref Vector3, ref Vector3)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Vector3, ref UnityEngine.Vector3, ref UnityEngine.Vector3)
  type: Method
  source:
    id: AddVertices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1015
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Transforms and adds three vertices.
  example: []
  syntax:
    content: public void AddVertices(BaseItem item, ref Vector3 v1, ref Vector3 v2, ref Vector3 v3)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: v1
      type: UnityEngine.Vector3
      description: ''
    - id: v2
      type: UnityEngine.Vector3
      description: ''
    - id: v3
      type: UnityEngine.Vector3
      description: ''
    content.vb: Public Sub AddVertices(item As BaseItem, v1 As Vector3, v2 As Vector3, v3 As Vector3)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertices*
  nameWithType.vb: DebugDrawMesh.AddVertices(BaseItem, Vector3, Vector3, Vector3)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3)
  name.vb: AddVertices(BaseItem, Vector3, Vector3, Vector3)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  id: AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertices(BaseItem, ref Vector3, ref Vector3, ref Vector3, ref Vector3)
  nameWithType: DebugDrawMesh.AddVertices(BaseItem, ref Vector3, ref Vector3, ref Vector3, ref Vector3)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Vector3, ref UnityEngine.Vector3, ref UnityEngine.Vector3, ref UnityEngine.Vector3)
  type: Method
  source:
    id: AddVertices
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1040
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Transforms and adds four vertices.
  example: []
  syntax:
    content: public void AddVertices(BaseItem item, ref Vector3 v1, ref Vector3 v2, ref Vector3 v3, ref Vector3 v4)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: v1
      type: UnityEngine.Vector3
      description: ''
    - id: v2
      type: UnityEngine.Vector3
      description: ''
    - id: v3
      type: UnityEngine.Vector3
      description: ''
    - id: v4
      type: UnityEngine.Vector3
      description: ''
    content.vb: Public Sub AddVertices(item As BaseItem, v1 As Vector3, v2 As Vector3, v3 As Vector3, v4 As Vector3)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertices*
  nameWithType.vb: DebugDrawMesh.AddVertices(BaseItem, Vector3, Vector3, Vector3, Vector3)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3)
  name.vb: AddVertices(BaseItem, Vector3, Vector3, Vector3, Vector3)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,System.Single,System.Single,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,System.Single,System.Single,System.Single)
  id: AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,System.Single,System.Single,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertex(BaseItem, float, float, float)
  nameWithType: DebugDrawMesh.AddVertex(BaseItem, float, float, float)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem, float, float, float)
  type: Method
  source:
    id: AddVertex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1066
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Transforms and adds a vertex.
  example: []
  syntax:
    content: public void AddVertex(BaseItem item, float x, float y, float z)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: x
      type: System.Single
      description: The x value of the vertex to add.
    - id: y
      type: System.Single
      description: The y value of the vertex to add.
    - id: z
      type: System.Single
      description: The z value of the vertex to add.
    content.vb: Public Sub AddVertex(item As BaseItem, x As Single, y As Single, z As Single)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertex*
  nameWithType.vb: DebugDrawMesh.AddVertex(BaseItem, Single, Single, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem, Single, Single, Single)
  name.vb: AddVertex(BaseItem, Single, Single, Single)
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,System.Single,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,System.Single,System.Single)
  id: AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem,System.Single,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddVertex(BaseItem, float, float)
  nameWithType: DebugDrawMesh.AddVertex(BaseItem, float, float)
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem, float, float)
  type: Method
  source:
    id: AddVertex
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1080
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Transforms and adds a vertex with z set to 0.
  example: []
  syntax:
    content: public void AddVertex(BaseItem item, float x, float y)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: x
      type: System.Single
      description: The x value of the vertex to add.
    - id: y
      type: System.Single
      description: The y value of the vertex to add.
    content.vb: Public Sub AddVertex(item As BaseItem, x As Single, y As Single)
  overload: DebugDrawUtils.DebugDrawMesh.AddVertex*
  nameWithType.vb: DebugDrawMesh.AddVertex(BaseItem, Single, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddVertex(DebugDrawUtils.DebugDrawItems.BaseItem, Single, Single)
  name.vb: AddVertex(BaseItem, Single, Single)
- uid: DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@)
  id: AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLine(BaseItem, ref Vector3, ref Vector3)
  nameWithType: DebugDrawMesh.AddLine(BaseItem, ref Vector3, ref Vector3)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Vector3, ref UnityEngine.Vector3)
  type: Method
  source:
    id: AddLine
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1094
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds two vertices and indices forming a line
  example: []
  syntax:
    content: public void AddLine(BaseItem item, ref Vector3 v1, ref Vector3 v2)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: v1
      type: UnityEngine.Vector3
      description: The line start point.
    - id: v2
      type: UnityEngine.Vector3
      description: The line end point.
    content.vb: Public Sub AddLine(item As BaseItem, v1 As Vector3, v2 As Vector3)
  overload: DebugDrawUtils.DebugDrawMesh.AddLine*
  nameWithType.vb: DebugDrawMesh.AddLine(BaseItem, Vector3, Vector3)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Vector3, UnityEngine.Vector3)
  name.vb: AddLine(BaseItem, Vector3, Vector3)
- uid: DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color)
  id: AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLine(BaseItem, ref Vector3, ref Vector3, Color)
  nameWithType: DebugDrawMesh.AddLine(BaseItem, ref Vector3, ref Vector3, Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Vector3, ref UnityEngine.Vector3, UnityEngine.Color)
  type: Method
  source:
    id: AddLine
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1110
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds and transforms two vertices, color and indices forming a line
  example: []
  syntax:
    content: public void AddLine(BaseItem item, ref Vector3 v1, ref Vector3 v2, Color clr)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: v1
      type: UnityEngine.Vector3
      description: The line start point.
    - id: v2
      type: UnityEngine.Vector3
      description: The line end point.
    - id: clr
      type: UnityEngine.Color
      description: The line color.
    content.vb: Public Sub AddLine(item As BaseItem, v1 As Vector3, v2 As Vector3, clr As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddLine*
  nameWithType.vb: DebugDrawMesh.AddLine(BaseItem, Vector3, Vector3, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color)
  name.vb: AddLine(BaseItem, Vector3, Vector3, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  id: AddLine(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Color@,UnityEngine.Color@)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLine(BaseItem, ref Vector3, ref Vector3, ref Color, ref Color)
  nameWithType: DebugDrawMesh.AddLine(BaseItem, ref Vector3, ref Vector3, ref Color, ref Color)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem, ref UnityEngine.Vector3, ref UnityEngine.Vector3, ref UnityEngine.Color, ref UnityEngine.Color)
  type: Method
  source:
    id: AddLine
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1129
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds and transforms two vertices, colors, and indices forming a line
  example: []
  syntax:
    content: public void AddLine(BaseItem item, ref Vector3 v1, ref Vector3 v2, ref Color clr1, ref Color clr2)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: v1
      type: UnityEngine.Vector3
      description: The line start point.
    - id: v2
      type: UnityEngine.Vector3
      description: The line end point.
    - id: clr1
      type: UnityEngine.Color
      description: The line color at the start point.
    - id: clr2
      type: UnityEngine.Color
      description: The line color at the end point.
    content.vb: Public Sub AddLine(item As BaseItem, v1 As Vector3, v2 As Vector3, clr1 As Color, clr2 As Color)
  overload: DebugDrawUtils.DebugDrawMesh.AddLine*
  nameWithType.vb: DebugDrawMesh.AddLine(BaseItem, Vector3, Vector3, Color, Color)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLine(DebugDrawUtils.DebugDrawItems.BaseItem, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color)
  name.vb: AddLine(BaseItem, Vector3, Vector3, Color, Color)
- uid: DebugDrawUtils.DebugDrawMesh.AddLines(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddLines(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  id: AddLines(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddLines(BaseItem, List<Vector3>, List<Color>)
  nameWithType: DebugDrawMesh.AddLines(BaseItem, List<Vector3>, List<Color>)
  fullName: DebugDrawUtils.DebugDrawMesh.AddLines(DebugDrawUtils.DebugDrawItems.BaseItem, System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Color>)
  type: Method
  source:
    id: AddLines
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1146
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds and transforms a list of vertices and colors forming a series of lines.
  example: []
  syntax:
    content: public void AddLines(BaseItem item, List<Vector3> positions, List<Color> colors)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    content.vb: Public Sub AddLines(item As BaseItem, positions As List(Of Vector3), colors As List(Of Color))
  overload: DebugDrawUtils.DebugDrawMesh.AddLines*
  nameWithType.vb: DebugDrawMesh.AddLines(BaseItem, List(Of Vector3), List(Of Color))
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddLines(DebugDrawUtils.DebugDrawItems.BaseItem, System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Color))
  name.vb: AddLines(BaseItem, List(Of Vector3), List(Of Color))
- uid: DebugDrawUtils.DebugDrawMesh.AddPoints(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  commentId: M:DebugDrawUtils.DebugDrawMesh.AddPoints(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  id: AddPoints(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: AddPoints(BaseItem, List<Vector3>, List<Color>)
  nameWithType: DebugDrawMesh.AddPoints(BaseItem, List<Vector3>, List<Color>)
  fullName: DebugDrawUtils.DebugDrawMesh.AddPoints(DebugDrawUtils.DebugDrawItems.BaseItem, System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Color>)
  type: Method
  source:
    id: AddPoints
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMesh.cs
    startLine: 1185
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Adds and transforms a list of vertices and colors forming a series of points.
  example: []
  syntax:
    content: public void AddPoints(BaseItem item, List<Vector3> positions, List<Color> colors)
    parameters:
    - id: item
      type: DebugDrawUtils.DebugDrawItems.BaseItem
      description: The item whose whose state will be used to transform the vertex.
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    content.vb: Public Sub AddPoints(item As BaseItem, positions As List(Of Vector3), colors As List(Of Color))
  overload: DebugDrawUtils.DebugDrawMesh.AddPoints*
  nameWithType.vb: DebugDrawMesh.AddPoints(BaseItem, List(Of Vector3), List(Of Color))
  fullName.vb: DebugDrawUtils.DebugDrawMesh.AddPoints(DebugDrawUtils.DebugDrawItems.BaseItem, System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Color))
  name.vb: AddPoints(BaseItem, List(Of Vector3), List(Of Color))
- uid: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,DebugDrawUtils.DebugDrawItems.ArrowShape,DebugDrawUtils.DebugDrawItems.ArrowShape,System.Boolean,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,DebugDrawUtils.DebugDrawItems.ArrowShape,DebugDrawUtils.DebugDrawItems.ArrowShape,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,DebugDrawUtils.DebugDrawItems.ArrowShape,DebugDrawUtils.DebugDrawItems.ArrowShape,System.Boolean,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, Color, float, float, ArrowShape, ArrowShape, bool, bool, float)
  nameWithType: DebugDrawMesh.Arrow(Vector3, Vector3, Color, Color, float, float, ArrowShape, ArrowShape, bool, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, float, float, DebugDrawUtils.DebugDrawItems.ArrowShape, DebugDrawUtils.DebugDrawItems.ArrowShape, bool, bool, float)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1492
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws an arrow.
  example: []
  syntax:
    content: public Arrow Arrow(Vector3 p1, Vector3 p2, Color color1, Color color2, float startSize, float endSize, ArrowShape startShape = ArrowShape.Arrow, ArrowShape endShape = ArrowShape.Arrow, bool faceCamera = false, bool autoSize = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line's colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line's colour at the end.
    - id: startSize
      type: System.Single
      description: The size of the arrow head at the start of the line.
    - id: endSize
      type: System.Single
      description: The size of the arrow head at the end of the line.
    - id: startShape
      type: DebugDrawUtils.DebugDrawItems.ArrowShape
      description: The shape of the head at the start of the line.
    - id: endShape
      type: DebugDrawUtils.DebugDrawItems.ArrowShape
      description: The shape of the head at the end of the line.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Function Arrow(p1 As Vector3, p2 As Vector3, color1 As Color, color2 As Color, startSize As Single, endSize As Single, startShape As ArrowShape = ArrowShape.Arrow, endShape As ArrowShape = ArrowShape.Arrow, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0) As Arrow
  overload: DebugDrawUtils.DebugDrawMesh.Arrow*
  nameWithType.vb: DebugDrawMesh.Arrow(Vector3, Vector3, Color, Color, Single, Single, ArrowShape, ArrowShape, Boolean, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, Single, Single, DebugDrawUtils.DebugDrawItems.ArrowShape, DebugDrawUtils.DebugDrawItems.ArrowShape, Boolean, Boolean, Single)
  name.vb: Arrow(Vector3, Vector3, Color, Color, Single, Single, ArrowShape, ArrowShape, Boolean, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, Color, float, float, bool, bool, float)
  nameWithType: DebugDrawMesh.Arrow(Vector3, Vector3, Color, Color, float, float, bool, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, float, float, bool, bool, float)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1511
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws an arrow.
  example: []
  syntax:
    content: public Arrow Arrow(Vector3 p1, Vector3 p2, Color color1, Color color2, float startSize, float endSize, bool faceCamera = false, bool autoSize = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line's colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line's colour at the end.
    - id: startSize
      type: System.Single
      description: The size of the arrow head at the start of the line.
    - id: endSize
      type: System.Single
      description: The size of the arrow head at the end of the line.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Function Arrow(p1 As Vector3, p2 As Vector3, color1 As Color, color2 As Color, startSize As Single, endSize As Single, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0) As Arrow
  overload: DebugDrawUtils.DebugDrawMesh.Arrow*
  nameWithType.vb: DebugDrawMesh.Arrow(Vector3, Vector3, Color, Color, Single, Single, Boolean, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, Single, Single, Boolean, Boolean, Single)
  name.vb: Arrow(Vector3, Vector3, Color, Color, Single, Single, Boolean, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, Color, float, bool, bool, float)
  nameWithType: DebugDrawMesh.Arrow(Vector3, Vector3, Color, Color, float, bool, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, float, bool, bool, float)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1529
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws an arrow.
  example: []
  syntax:
    content: public Arrow Arrow(Vector3 p1, Vector3 p2, Color color1, Color color2, float size, bool faceCamera = false, bool autoSize = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line's colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line's colour at the end.
    - id: size
      type: System.Single
      description: The size of the arrow head.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Function Arrow(p1 As Vector3, p2 As Vector3, color1 As Color, color2 As Color, size As Single, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0) As Arrow
  overload: DebugDrawUtils.DebugDrawMesh.Arrow*
  nameWithType.vb: DebugDrawMesh.Arrow(Vector3, Vector3, Color, Color, Single, Boolean, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, Single, Boolean, Boolean, Single)
  name.vb: Arrow(Vector3, Vector3, Color, Color, Single, Boolean, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, float, float, bool, bool, float)
  nameWithType: DebugDrawMesh.Arrow(Vector3, Vector3, Color, float, float, bool, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, float, float, bool, bool, float)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1547
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws an arrow.
  example: []
  syntax:
    content: public Arrow Arrow(Vector3 p1, Vector3 p2, Color color, float startSize, float endSize, bool faceCamera = false, bool autoSize = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color
      type: UnityEngine.Color
      description: The arrow's colour.
    - id: startSize
      type: System.Single
      description: The size of the arrow head at the start of the line.
    - id: endSize
      type: System.Single
      description: The size of the arrow head at the end of the line.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Function Arrow(p1 As Vector3, p2 As Vector3, color As Color, startSize As Single, endSize As Single, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0) As Arrow
  overload: DebugDrawUtils.DebugDrawMesh.Arrow*
  nameWithType.vb: DebugDrawMesh.Arrow(Vector3, Vector3, Color, Single, Single, Boolean, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Single, Single, Boolean, Boolean, Single)
  name.vb: Arrow(Vector3, Vector3, Color, Single, Single, Boolean, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, float, bool, bool, float)
  nameWithType: DebugDrawMesh.Arrow(Vector3, Vector3, Color, float, bool, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, float, bool, bool, float)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1564
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws an arrow.
  example: []
  syntax:
    content: public Arrow Arrow(Vector3 p1, Vector3 p2, Color color, float size, bool faceCamera = false, bool autoSize = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color
      type: UnityEngine.Color
      description: The arrow's colour.
    - id: size
      type: System.Single
      description: The size of the arrow head.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Function Arrow(p1 As Vector3, p2 As Vector3, color As Color, size As Single, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0) As Arrow
  overload: DebugDrawUtils.DebugDrawMesh.Arrow*
  nameWithType.vb: DebugDrawMesh.Arrow(Vector3, Vector3, Color, Single, Boolean, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Single, Boolean, Boolean, Single)
  name.vb: Arrow(Vector3, Vector3, Color, Single, Boolean, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean,System.Single)
  id: Axes(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Axes(Vector3, Quaternion, Vector3, bool, float)
  nameWithType: DebugDrawMesh.Axes(Vector3, Quaternion, Vector3, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, bool, float)
  type: Method
  source:
    id: Axes
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1579
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws lines along the x, y, and z axes.
  example: []
  syntax:
    content: public Axes Axes(Vector3 position, Quaternion rotation, Vector3 size, bool doubleSided = false, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The axes origin.
    - id: rotation
      type: UnityEngine.Quaternion
      description: The orientation of the axes.
    - id: size
      type: UnityEngine.Vector3
      description: The size of each axis. Set to zero to not draw an axis.
    - id: doubleSided
      type: System.Boolean
      description: If true the axis line extends in both directions, other only in the positive.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Axes
      description: The Axes object.
    content.vb: Public Function Axes(position As Vector3, rotation As Quaternion, size As Vector3, doubleSided As Boolean = False, duration As Single = 0) As Axes
  overload: DebugDrawUtils.DebugDrawMesh.Axes*
  nameWithType.vb: DebugDrawMesh.Axes(Vector3, Quaternion, Vector3, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, Boolean, Single)
  name.vb: Axes(Vector3, Quaternion, Vector3, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Single)
  id: Axes(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Axes(Vector3, Quaternion, float, bool, float)
  nameWithType: DebugDrawMesh.Axes(Vector3, Quaternion, float, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3, UnityEngine.Quaternion, float, bool, float)
  type: Method
  source:
    id: Axes
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1594
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws lines along the x, y, and z axes.
  example: []
  syntax:
    content: public Axes Axes(Vector3 position, Quaternion rotation, float size, bool doubleSided = false, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The axes origin.
    - id: rotation
      type: UnityEngine.Quaternion
      description: The orientation of the axes.
    - id: size
      type: System.Single
      description: The size of each the axes.
    - id: doubleSided
      type: System.Boolean
      description: If true the axis line extends in both directions, other only in the positive.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Axes
      description: The Axes object.
    content.vb: Public Function Axes(position As Vector3, rotation As Quaternion, size As Single, doubleSided As Boolean = False, duration As Single = 0) As Axes
  overload: DebugDrawUtils.DebugDrawMesh.Axes*
  nameWithType.vb: DebugDrawMesh.Axes(Vector3, Quaternion, Single, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3, UnityEngine.Quaternion, Single, Boolean, Single)
  name.vb: Axes(Vector3, Quaternion, Single, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  id: Box(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Box(Vector3, float, Color, float)
  nameWithType: DebugDrawMesh.Box(Vector3, float, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3, float, UnityEngine.Color, float)
  type: Method
  source:
    id: Box
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1608
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws an axis aligned box.
  example: []
  syntax:
    content: public Box Box(Vector3 position, float size, Color color, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the box.
    - id: size
      type: System.Single
      description: The half size of the box.
    - id: color
      type: UnityEngine.Color
      description: The color of the box.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Box
      description: The Box object.
    content.vb: Public Function Box(position As Vector3, size As Single, color As Color, duration As Single = 0) As Box
  overload: DebugDrawUtils.DebugDrawMesh.Box*
  nameWithType.vb: DebugDrawMesh.Box(Vector3, Single, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3, Single, UnityEngine.Color, Single)
  name.vb: Box(Vector3, Single, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,System.Single,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,System.Single,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  id: Box(UnityEngine.Vector3,System.Single,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Box(Vector3, float, Quaternion, Color, float)
  nameWithType: DebugDrawMesh.Box(Vector3, float, Quaternion, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3, float, UnityEngine.Quaternion, UnityEngine.Color, float)
  type: Method
  source:
    id: Box
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1623
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws an axis aligned box.
  example: []
  syntax:
    content: public Box Box(Vector3 position, float size, Quaternion orientation, Color color, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the box.
    - id: size
      type: System.Single
      description: The half size of the box.
    - id: orientation
      type: UnityEngine.Quaternion
      description: The orientation of the box.
    - id: color
      type: UnityEngine.Color
      description: The color of the box.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Box
      description: The Box object.
    content.vb: Public Function Box(position As Vector3, size As Single, orientation As Quaternion, color As Color, duration As Single = 0) As Box
  overload: DebugDrawUtils.DebugDrawMesh.Box*
  nameWithType.vb: DebugDrawMesh.Box(Vector3, Single, Quaternion, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3, Single, UnityEngine.Quaternion, UnityEngine.Color, Single)
  name.vb: Box(Vector3, Single, Quaternion, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Box(Vector3, Vector3, Color, float)
  nameWithType: DebugDrawMesh.Box(Vector3, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: Box
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1637
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws an axis aligned box.
  example: []
  syntax:
    content: public Box Box(Vector3 position, Vector3 size, Color color, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the box.
    - id: size
      type: UnityEngine.Vector3
      description: The half size of the box.
    - id: color
      type: UnityEngine.Color
      description: The color of the box.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Box
      description: The Box object.
    content.vb: Public Function Box(position As Vector3, size As Vector3, color As Color, duration As Single = 0) As Box
  overload: DebugDrawUtils.DebugDrawMesh.Box*
  nameWithType.vb: DebugDrawMesh.Box(Vector3, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: Box(Vector3, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  id: Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Box(Vector3, Vector3, Quaternion, Color, float)
  nameWithType: DebugDrawMesh.Box(Vector3, Vector3, Quaternion, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Color, float)
  type: Method
  source:
    id: Box
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1652
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws an axis aligned box.
  example: []
  syntax:
    content: public Box Box(Vector3 position, Vector3 size, Quaternion orientation, Color color, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the box.
    - id: size
      type: UnityEngine.Vector3
      description: The half size of the box.
    - id: orientation
      type: UnityEngine.Quaternion
      description: The orientation of the box.
    - id: color
      type: UnityEngine.Color
      description: The color of the box.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Box
      description: The Box object.
    content.vb: Public Function Box(position As Vector3, size As Vector3, orientation As Quaternion, color As Color, duration As Single = 0) As Box
  overload: DebugDrawUtils.DebugDrawMesh.Box*
  nameWithType.vb: DebugDrawMesh.Box(Vector3, Vector3, Quaternion, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Color, Single)
  name.vb: Box(Vector3, Vector3, Quaternion, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Capsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Capsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: Capsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Capsule(Vector3, Vector3, float, Color, int, float)
  nameWithType: DebugDrawMesh.Capsule(Vector3, Vector3, float, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Capsule(UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Color, int, float)
  type: Method
  source:
    id: Capsule
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1668
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a capsule shell.
  example: []
  syntax:
    content: public Capsule Capsule(Vector3 p1, Vector3 p2, float radius, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The center of the capsule at the start of the capsule.
    - id: p2
      type: UnityEngine.Vector3
      description: The center of the capsule at the end of the capsule.
    - id: radius
      type: System.Single
      description: The radius of the capsule.
    - id: color
      type: UnityEngine.Color
      description: The color of the capsule.
    - id: segments
      type: System.Int32
      description: The resolution of the capsule. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Capsule
      description: The Capsule object.
    content.vb: Public Function Capsule(p1 As Vector3, p2 As Vector3, radius As Single, color As Color, segments As Integer = 32, duration As Single = 0) As Capsule
  overload: DebugDrawUtils.DebugDrawMesh.Capsule*
  nameWithType.vb: DebugDrawMesh.Capsule(Vector3, Vector3, Single, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Capsule(UnityEngine.Vector3, UnityEngine.Vector3, Single, UnityEngine.Color, Integer, Single)
  name.vb: Capsule(Vector3, Vector3, Single, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.WireCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.WireCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: WireCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: WireCapsule(Vector3, Vector3, float, Color, int, float)
  nameWithType: DebugDrawMesh.WireCapsule(Vector3, Vector3, float, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.WireCapsule(UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Color, int, float)
  type: Method
  source:
    id: WireCapsule
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1684
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a full wireframe capsule.
  example: []
  syntax:
    content: public Capsule WireCapsule(Vector3 p1, Vector3 p2, float radius, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The center of the capsule at the start of the capsule.
    - id: p2
      type: UnityEngine.Vector3
      description: The center of the capsule at the end of the capsule.
    - id: radius
      type: System.Single
      description: The radius of the capsule.
    - id: color
      type: UnityEngine.Color
      description: The color of the capsule.
    - id: segments
      type: System.Int32
      description: The resolution of the capsule. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Capsule
      description: The Capsule object.
    content.vb: Public Function WireCapsule(p1 As Vector3, p2 As Vector3, radius As Single, color As Color, segments As Integer = 32, duration As Single = 0) As Capsule
  overload: DebugDrawUtils.DebugDrawMesh.WireCapsule*
  nameWithType.vb: DebugDrawMesh.WireCapsule(Vector3, Vector3, Single, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.WireCapsule(UnityEngine.Vector3, UnityEngine.Vector3, Single, UnityEngine.Color, Integer, Single)
  name.vb: WireCapsule(Vector3, Vector3, Single, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Cone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Cone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  id: Cone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Cone(Vector3, Vector3, float, float, Color, int, bool, bool, float)
  nameWithType: DebugDrawMesh.Cone(Vector3, Vector3, float, float, Color, int, bool, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Cone(UnityEngine.Vector3, UnityEngine.Vector3, float, float, UnityEngine.Color, int, bool, bool, float)
  type: Method
  source:
    id: Cone
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1705
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a cone shell.
  example: []
  syntax:
    content: public Cone Cone(Vector3 origin, Vector3 direction, float length, float angle, Color color, int segments = 32, bool round = false, bool drawCap = false, float duration = 0)
    parameters:
    - id: origin
      type: UnityEngine.Vector3
      description: The origin point of the cone.
    - id: direction
      type: UnityEngine.Vector3
      description: The direction the cone.
    - id: length
      type: System.Single
      description: The length of the cone.
    - id: angle
      type: System.Single
      description: The angle of the cone.
    - id: color
      type: UnityEngine.Color
      description: The color of the cone.
    - id: segments
      type: System.Int32
      description: The resolution of the cone. If set to zero will be adjusted based on the distance to the camera.
    - id: round
      type: System.Boolean
      description: >-
        If true, the length is treated as the radius of the cone.
            If false the length is the distance from the origin to the centre of the cones cap.
    - id: drawCap
      type: System.Boolean
      description: >-
        Should a cap be drawn on the cone.
            When round is true the cap will be made up of two arcs, otherwise two perpendicular lines.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cone
      description: The Cylinder object.
    content.vb: Public Function Cone(origin As Vector3, direction As Vector3, length As Single, angle As Single, color As Color, segments As Integer = 32, round As Boolean = False, drawCap As Boolean = False, duration As Single = 0) As Cone
  overload: DebugDrawUtils.DebugDrawMesh.Cone*
  nameWithType.vb: DebugDrawMesh.Cone(Vector3, Vector3, Single, Single, Color, Integer, Boolean, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Cone(UnityEngine.Vector3, UnityEngine.Vector3, Single, Single, UnityEngine.Color, Integer, Boolean, Boolean, Single)
  name.vb: Cone(Vector3, Vector3, Single, Single, Color, Integer, Boolean, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.WireCone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.WireCone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  id: WireCone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: WireCone(Vector3, Vector3, float, float, Color, int, bool, bool, float)
  nameWithType: DebugDrawMesh.WireCone(Vector3, Vector3, float, float, Color, int, bool, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.WireCone(UnityEngine.Vector3, UnityEngine.Vector3, float, float, UnityEngine.Color, int, bool, bool, float)
  type: Method
  source:
    id: WireCone
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1726
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a full wireframe cone.
  example: []
  syntax:
    content: public Cone WireCone(Vector3 origin, Vector3 direction, float length, float angle, Color color, int segments = 32, bool round = false, bool drawCap = false, float duration = 0)
    parameters:
    - id: origin
      type: UnityEngine.Vector3
      description: The origin point of the cone.
    - id: direction
      type: UnityEngine.Vector3
      description: The direction the cone.
    - id: length
      type: System.Single
      description: The length of the cone.
    - id: angle
      type: System.Single
      description: The angle of the cone.
    - id: color
      type: UnityEngine.Color
      description: The color of the cone.
    - id: segments
      type: System.Int32
      description: The resolution of the cone. If set to zero will be adjusted based on the distance to the camera.
    - id: round
      type: System.Boolean
      description: >-
        If true, the length is treated as the radius of the cone.
            If false the length is the distance from the origin to the centre of the cones cap.
    - id: drawCap
      type: System.Boolean
      description: >-
        Should a cap be drawn on the cone.
            When round is true the cap will be made up of two arcs, otherwise two perpendicular lines.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cone
      description: The Cylinder object.
    content.vb: Public Function WireCone(origin As Vector3, direction As Vector3, length As Single, angle As Single, color As Color, segments As Integer = 32, round As Boolean = False, drawCap As Boolean = False, duration As Single = 0) As Cone
  overload: DebugDrawUtils.DebugDrawMesh.WireCone*
  nameWithType.vb: DebugDrawMesh.WireCone(Vector3, Vector3, Single, Single, Color, Integer, Boolean, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.WireCone(UnityEngine.Vector3, UnityEngine.Vector3, Single, Single, UnityEngine.Color, Integer, Boolean, Boolean, Single)
  name.vb: WireCone(Vector3, Vector3, Single, Single, Color, Integer, Boolean, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Cylinder(Vector3, Vector3, float, Color, int, bool, float)
  nameWithType: DebugDrawMesh.Cylinder(Vector3, Vector3, float, Color, int, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Color, int, bool, float)
  type: Method
  source:
    id: Cylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1743
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a cylinder shell.
  example: []
  syntax:
    content: public Cylinder Cylinder(Vector3 p1, Vector3 p2, float radius, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius
      type: System.Single
      description: The radius of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Function Cylinder(p1 As Vector3, p2 As Vector3, radius As Single, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0) As Cylinder
  overload: DebugDrawUtils.DebugDrawMesh.Cylinder*
  nameWithType.vb: DebugDrawMesh.Cylinder(Vector3, Vector3, Single, Color, Integer, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, Single, UnityEngine.Color, Integer, Boolean, Single)
  name.vb: Cylinder(Vector3, Vector3, Single, Color, Integer, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Cylinder(Vector3, Vector3, float, float, Color, int, bool, float)
  nameWithType: DebugDrawMesh.Cylinder(Vector3, Vector3, float, float, Color, int, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, float, float, UnityEngine.Color, int, bool, float)
  type: Method
  source:
    id: Cylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1761
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a cylinder shell with a different start and end radius.
  example: []
  syntax:
    content: public Cylinder Cylinder(Vector3 p1, Vector3 p2, float radius1, float radius2, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius1
      type: System.Single
      description: The radius at the start point of the cylinder.
    - id: radius2
      type: System.Single
      description: The radius at the end point of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Function Cylinder(p1 As Vector3, p2 As Vector3, radius1 As Single, radius2 As Single, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0) As Cylinder
  overload: DebugDrawUtils.DebugDrawMesh.Cylinder*
  nameWithType.vb: DebugDrawMesh.Cylinder(Vector3, Vector3, Single, Single, Color, Integer, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, Single, Single, UnityEngine.Color, Integer, Boolean, Single)
  name.vb: Cylinder(Vector3, Vector3, Single, Single, Color, Integer, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Cylinder(Vector3, Vector3, Vector2, Color, int, bool, float)
  nameWithType: DebugDrawMesh.Cylinder(Vector3, Vector3, Vector2, Color, int, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Color, int, bool, float)
  type: Method
  source:
    id: Cylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1778
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a cylinder shell with a different start and end radius.
  example: []
  syntax:
    content: public Cylinder Cylinder(Vector3 p1, Vector3 p2, Vector2 radius, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius
      type: UnityEngine.Vector2
      description: The radius of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Function Cylinder(p1 As Vector3, p2 As Vector3, radius As Vector2, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0) As Cylinder
  overload: DebugDrawUtils.DebugDrawMesh.Cylinder*
  nameWithType.vb: DebugDrawMesh.Cylinder(Vector3, Vector3, Vector2, Color, Integer, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Color, Integer, Boolean, Single)
  name.vb: Cylinder(Vector3, Vector3, Vector2, Color, Integer, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Cylinder(Vector3, Vector3, Vector2, Vector2, Color, int, bool, float)
  nameWithType: DebugDrawMesh.Cylinder(Vector3, Vector3, Vector2, Vector2, Color, int, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Color, int, bool, float)
  type: Method
  source:
    id: Cylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1796
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a cylinder shell with a different start and end radius.
  example: []
  syntax:
    content: public Cylinder Cylinder(Vector3 p1, Vector3 p2, Vector2 radius1, Vector2 radius2, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius1
      type: UnityEngine.Vector2
      description: The radius at the start point of the cylinder.
    - id: radius2
      type: UnityEngine.Vector2
      description: The radius at the end point of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Function Cylinder(p1 As Vector3, p2 As Vector3, radius1 As Vector2, radius2 As Vector2, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0) As Cylinder
  overload: DebugDrawUtils.DebugDrawMesh.Cylinder*
  nameWithType.vb: DebugDrawMesh.Cylinder(Vector3, Vector3, Vector2, Vector2, Color, Integer, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Color, Integer, Boolean, Single)
  name.vb: Cylinder(Vector3, Vector3, Vector2, Vector2, Color, Integer, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: WireCylinder(Vector3, Vector3, float, Color, int, bool, float)
  nameWithType: DebugDrawMesh.WireCylinder(Vector3, Vector3, float, Color, int, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Color, int, bool, float)
  type: Method
  source:
    id: WireCylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1813
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a full wireframe cylinder.
  example: []
  syntax:
    content: public Cylinder WireCylinder(Vector3 p1, Vector3 p2, float radius, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius
      type: System.Single
      description: The radius of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Function WireCylinder(p1 As Vector3, p2 As Vector3, radius As Single, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0) As Cylinder
  overload: DebugDrawUtils.DebugDrawMesh.WireCylinder*
  nameWithType.vb: DebugDrawMesh.WireCylinder(Vector3, Vector3, Single, Color, Integer, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, Single, UnityEngine.Color, Integer, Boolean, Single)
  name.vb: WireCylinder(Vector3, Vector3, Single, Color, Integer, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: WireCylinder(Vector3, Vector3, float, float, Color, int, bool, float)
  nameWithType: DebugDrawMesh.WireCylinder(Vector3, Vector3, float, float, Color, int, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, float, float, UnityEngine.Color, int, bool, float)
  type: Method
  source:
    id: WireCylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1831
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a full wireframe cylinder with a different start and end radius.
  example: []
  syntax:
    content: public Cylinder WireCylinder(Vector3 p1, Vector3 p2, float radius1, float radius2, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius1
      type: System.Single
      description: The radius at the start point of the cylinder.
    - id: radius2
      type: System.Single
      description: The radius at the end point of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Function WireCylinder(p1 As Vector3, p2 As Vector3, radius1 As Single, radius2 As Single, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0) As Cylinder
  overload: DebugDrawUtils.DebugDrawMesh.WireCylinder*
  nameWithType.vb: DebugDrawMesh.WireCylinder(Vector3, Vector3, Single, Single, Color, Integer, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, Single, Single, UnityEngine.Color, Integer, Boolean, Single)
  name.vb: WireCylinder(Vector3, Vector3, Single, Single, Color, Integer, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: WireCylinder(Vector3, Vector3, Vector2, Color, int, bool, float)
  nameWithType: DebugDrawMesh.WireCylinder(Vector3, Vector3, Vector2, Color, int, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Color, int, bool, float)
  type: Method
  source:
    id: WireCylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1848
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a full wireframe cylinder with a different start and end radius.
  example: []
  syntax:
    content: public Cylinder WireCylinder(Vector3 p1, Vector3 p2, Vector2 radius, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius
      type: UnityEngine.Vector2
      description: The radius of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Function WireCylinder(p1 As Vector3, p2 As Vector3, radius As Vector2, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0) As Cylinder
  overload: DebugDrawUtils.DebugDrawMesh.WireCylinder*
  nameWithType.vb: DebugDrawMesh.WireCylinder(Vector3, Vector3, Vector2, Color, Integer, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Color, Integer, Boolean, Single)
  name.vb: WireCylinder(Vector3, Vector3, Vector2, Color, Integer, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: WireCylinder(Vector3, Vector3, Vector2, Vector2, Color, int, bool, float)
  nameWithType: DebugDrawMesh.WireCylinder(Vector3, Vector3, Vector2, Vector2, Color, int, bool, float)
  fullName: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Color, int, bool, float)
  type: Method
  source:
    id: WireCylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1866
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a full wireframe cylinder with a different start and end radius.
  example: []
  syntax:
    content: public Cylinder WireCylinder(Vector3 p1, Vector3 p2, Vector2 radius1, Vector2 radius2, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius1
      type: UnityEngine.Vector2
      description: The radius at the start point of the cylinder.
    - id: radius2
      type: UnityEngine.Vector2
      description: The radius at the end point of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Function WireCylinder(p1 As Vector3, p2 As Vector3, radius1 As Vector2, radius2 As Vector2, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0) As Cylinder
  overload: DebugDrawUtils.DebugDrawMesh.WireCylinder*
  nameWithType.vb: DebugDrawMesh.WireCylinder(Vector3, Vector3, Vector2, Vector2, Color, Integer, Boolean, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Color, Integer, Boolean, Single)
  name.vb: WireCylinder(Vector3, Vector3, Vector2, Vector2, Color, Integer, Boolean, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Dot(Vector3, float, Color, int, float)
  nameWithType: DebugDrawMesh.Dot(Vector3, float, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3, float, UnityEngine.Color, int, float)
  type: Method
  source:
    id: Dot
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1882
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a 3D dot that automatically faces the camera.
  example: []
  syntax:
    content: public Dot Dot(Vector3 position, float radius, Color color, int segments = 0, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The position of the dot.
    - id: radius
      type: System.Single
      description: The size of the dot.
    - id: color
      type: UnityEngine.Color
      description: The color of the dot.
    - id: segments
      type: System.Int32
      description: >-
        The shape/resolution of the dot. 0 or 4 = square, &gt;= 3 = circle.
            If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Dot
      description: The Dot object.
    content.vb: Public Function Dot(position As Vector3, radius As Single, color As Color, segments As Integer = 0, duration As Single = 0) As Dot
  overload: DebugDrawUtils.DebugDrawMesh.Dot*
  nameWithType.vb: DebugDrawMesh.Dot(Vector3, Single, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3, Single, UnityEngine.Color, Integer, Single)
  name.vb: Dot(Vector3, Single, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Vector3,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Vector3,System.Int32,System.Single)
  id: Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Vector3,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Dot(Vector3, float, Color, Vector3, int, float)
  nameWithType: DebugDrawMesh.Dot(Vector3, float, Color, Vector3, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3, float, UnityEngine.Color, UnityEngine.Vector3, int, float)
  type: Method
  source:
    id: Dot
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1899
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a 3D dot.
  example: []
  syntax:
    content: public Dot Dot(Vector3 position, float radius, Color color, Vector3 facing, int segments = 0, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The position of the dot.
    - id: radius
      type: System.Single
      description: The size of the dot.
    - id: color
      type: UnityEngine.Color
      description: The color of the dot.
    - id: facing
      type: UnityEngine.Vector3
      description: The forward direction of the dot. Automatically update if faceCamera is true.
    - id: segments
      type: System.Int32
      description: >-
        The shape/resolution of the dot. 0 = square.
            If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Dot
      description: The Dot object.
    content.vb: Public Function Dot(position As Vector3, radius As Single, color As Color, facing As Vector3, segments As Integer = 0, duration As Single = 0) As Dot
  overload: DebugDrawUtils.DebugDrawMesh.Dot*
  nameWithType.vb: DebugDrawMesh.Dot(Vector3, Single, Color, Vector3, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3, Single, UnityEngine.Color, UnityEngine.Vector3, Integer, Single)
  name.vb: Dot(Vector3, Single, Color, Vector3, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Int32,System.Single)
  id: Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Dots(List<Vector3>, List<float>, List<Color>, int, float)
  nameWithType: DebugDrawMesh.Dots(List<Vector3>, List<float>, List<Color>, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<float>, System.Collections.Generic.List<UnityEngine.Color>, int, float)
  type: Method
  source:
    id: Dots
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1914
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Batch draws 3D dots that automatically faces the camera.
  example: []
  syntax:
    content: public Dots Dots(List<Vector3> positions, List<float> sizes, List<Color> colors, int segments = 0, float duration = 0)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of each dot.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The sizes each dot.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors each dot.
    - id: segments
      type: System.Int32
      description: The shape/resolution of the dots. 0 or 4 = square, &gt;= 3 = circle.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Dots
      description: The Dot object.
    content.vb: Public Function Dots(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), segments As Integer = 0, duration As Single = 0) As Dots
  overload: DebugDrawUtils.DebugDrawMesh.Dots*
  nameWithType.vb: DebugDrawMesh.Dots(List(Of Vector3), List(Of Single), List(Of Color), Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of Single), System.Collections.Generic.List(Of UnityEngine.Color), Integer, Single)
  name.vb: Dots(List(Of Vector3), List(Of Single), List(Of Color), Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},UnityEngine.Vector3,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},UnityEngine.Vector3,System.Int32,System.Single)
  id: Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},UnityEngine.Vector3,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Dots(List<Vector3>, List<float>, List<Color>, Vector3, int, float)
  nameWithType: DebugDrawMesh.Dots(List<Vector3>, List<float>, List<Color>, Vector3, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<float>, System.Collections.Generic.List<UnityEngine.Color>, UnityEngine.Vector3, int, float)
  type: Method
  source:
    id: Dots
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1930
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Batch draws 3D dots.
  example: []
  syntax:
    content: public Dots Dots(List<Vector3> positions, List<float> sizes, List<Color> colors, Vector3 facing, int segments = 0, float duration = 0)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of each dot.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The sizes each dot.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors each dot.
    - id: facing
      type: UnityEngine.Vector3
      description: The forward direction of the dot. Automatically update if faceCamera is true.
    - id: segments
      type: System.Int32
      description: The shape/resolution of the dots. 0 = square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Dots
      description: The Dots object.
    content.vb: Public Function Dots(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), facing As Vector3, segments As Integer = 0, duration As Single = 0) As Dots
  overload: DebugDrawUtils.DebugDrawMesh.Dots*
  nameWithType.vb: DebugDrawMesh.Dots(List(Of Vector3), List(Of Single), List(Of Color), Vector3, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of Single), System.Collections.Generic.List(Of UnityEngine.Color), UnityEngine.Vector3, Integer, Single)
  name.vb: Dots(List(Of Vector3), List(Of Single), List(Of Color), Vector3, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  id: Ellipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Ellipse(Vector3, float, Vector3, Color, int, DrawEllipseAxes, float)
  nameWithType: DebugDrawMesh.Ellipse(Vector3, float, Vector3, Color, int, DrawEllipseAxes, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3, float, UnityEngine.Vector3, UnityEngine.Color, int, DebugDrawUtils.DebugDrawItems.DrawEllipseAxes, float)
  type: Method
  source:
    id: Ellipse
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1947
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire ellipse.
  example: []
  syntax:
    content: public Ellipse Ellipse(Vector3 position, float radius, Vector3 facing, Color color, int segments = 32, DrawEllipseAxes drawAxes = DrawEllipseAxes.Never, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: radius
      type: System.Single
      description: The radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: drawAxes
      type: DebugDrawUtils.DebugDrawItems.DrawEllipseAxes
      description: Options for drawing an X and Y axis inside the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Function Ellipse(position As Vector3, radius As Single, facing As Vector3, color As Color, segments As Integer = 32, drawAxes As DrawEllipseAxes = DrawEllipseAxes.Never, duration As Single = 0) As Ellipse
  overload: DebugDrawUtils.DebugDrawMesh.Ellipse*
  nameWithType.vb: DebugDrawMesh.Ellipse(Vector3, Single, Vector3, Color, Integer, DrawEllipseAxes, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3, Single, UnityEngine.Vector3, UnityEngine.Color, Integer, DebugDrawUtils.DebugDrawItems.DrawEllipseAxes, Single)
  name.vb: Ellipse(Vector3, Single, Vector3, Color, Integer, DrawEllipseAxes, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  id: FillEllipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillEllipse(Vector3, float, Vector3, Color, int, float)
  nameWithType: DebugDrawMesh.FillEllipse(Vector3, float, Vector3, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3, float, UnityEngine.Vector3, UnityEngine.Color, int, float)
  type: Method
  source:
    id: FillEllipse
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1963
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled ellipse.
  example: []
  syntax:
    content: public Ellipse FillEllipse(Vector3 position, float radius, Vector3 facing, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: radius
      type: System.Single
      description: The radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Function FillEllipse(position As Vector3, radius As Single, facing As Vector3, color As Color, segments As Integer = 32, duration As Single = 0) As Ellipse
  overload: DebugDrawUtils.DebugDrawMesh.FillEllipse*
  nameWithType.vb: DebugDrawMesh.FillEllipse(Vector3, Single, Vector3, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3, Single, UnityEngine.Vector3, UnityEngine.Color, Integer, Single)
  name.vb: FillEllipse(Vector3, Single, Vector3, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawArcSegments,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawArcSegments,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  id: Arc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawArcSegments,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Arc(Vector3, float, Vector3, float, float, Color, int, DrawArcSegments, DrawEllipseAxes, float)
  nameWithType: DebugDrawMesh.Arc(Vector3, float, Vector3, float, float, Color, int, DrawArcSegments, DrawEllipseAxes, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3, float, UnityEngine.Vector3, float, float, UnityEngine.Color, int, DebugDrawUtils.DebugDrawItems.DrawArcSegments, DebugDrawUtils.DebugDrawItems.DrawEllipseAxes, float)
  type: Method
  source:
    id: Arc
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1983
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire arc.
  example: []
  syntax:
    content: public Ellipse Arc(Vector3 position, float radius, Vector3 facing, float startAngle, float endAngle, Color color, int segments = 32, DrawArcSegments drawArcSegments = DrawArcSegments.OpenOnly, DrawEllipseAxes drawAxes = DrawEllipseAxes.Never, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: radius
      type: System.Single
      description: The radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: startAngle
      type: System.Single
      description: The start angle in degrees of the arc.
    - id: endAngle
      type: System.Single
      description: The end angle in degrees of the arc.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: drawArcSegments
      type: DebugDrawUtils.DebugDrawItems.DrawArcSegments
      description: Options for connecting the centre of the ellipse and the arc end points.
    - id: drawAxes
      type: DebugDrawUtils.DebugDrawItems.DrawEllipseAxes
      description: Options for drawing an X and Y axis inside the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Function Arc(position As Vector3, radius As Single, facing As Vector3, startAngle As Single, endAngle As Single, color As Color, segments As Integer = 32, drawArcSegments As DrawArcSegments = DrawArcSegments.OpenOnly, drawAxes As DrawEllipseAxes = DrawEllipseAxes.Never, duration As Single = 0) As Ellipse
  overload: DebugDrawUtils.DebugDrawMesh.Arc*
  nameWithType.vb: DebugDrawMesh.Arc(Vector3, Single, Vector3, Single, Single, Color, Integer, DrawArcSegments, DrawEllipseAxes, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3, Single, UnityEngine.Vector3, Single, Single, UnityEngine.Color, Integer, DebugDrawUtils.DebugDrawItems.DrawArcSegments, DebugDrawUtils.DebugDrawItems.DrawEllipseAxes, Single)
  name.vb: Arc(Vector3, Single, Vector3, Single, Single, Color, Integer, DrawArcSegments, DrawEllipseAxes, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: FillArc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillArc(Vector3, float, Vector3, float, float, Color, int, float)
  nameWithType: DebugDrawMesh.FillArc(Vector3, float, Vector3, float, float, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3, float, UnityEngine.Vector3, float, float, UnityEngine.Color, int, float)
  type: Method
  source:
    id: FillArc
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2001
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled arc.
  example: []
  syntax:
    content: public Ellipse FillArc(Vector3 position, float radius, Vector3 facing, float startAngle, float endAngle, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: radius
      type: System.Single
      description: The radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: startAngle
      type: System.Single
      description: The start angle in degrees of the arc.
    - id: endAngle
      type: System.Single
      description: The end angle in degrees of the arc.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Function FillArc(position As Vector3, radius As Single, facing As Vector3, startAngle As Single, endAngle As Single, color As Color, segments As Integer = 32, duration As Single = 0) As Ellipse
  overload: DebugDrawUtils.DebugDrawMesh.FillArc*
  nameWithType.vb: DebugDrawMesh.FillArc(Vector3, Single, Vector3, Single, Single, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3, Single, UnityEngine.Vector3, Single, Single, UnityEngine.Color, Integer, Single)
  name.vb: FillArc(Vector3, Single, Vector3, Single, Single, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  id: Ellipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Ellipse(Vector3, Vector2, Vector3, Color, int, DrawEllipseAxes, float)
  nameWithType: DebugDrawMesh.Ellipse(Vector3, Vector2, Vector3, Color, int, DrawEllipseAxes, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, int, DebugDrawUtils.DebugDrawItems.DrawEllipseAxes, float)
  type: Method
  source:
    id: Ellipse
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2018
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire ellipse.
  example: []
  syntax:
    content: public Ellipse Ellipse(Vector3 position, Vector2 size, Vector3 facing, Color color, int segments = 32, DrawEllipseAxes drawAxes = DrawEllipseAxes.Never, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: size
      type: UnityEngine.Vector2
      description: The size/radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: drawAxes
      type: DebugDrawUtils.DebugDrawItems.DrawEllipseAxes
      description: Options for drawing an X and Y axis inside the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Function Ellipse(position As Vector3, size As Vector2, facing As Vector3, color As Color, segments As Integer = 32, drawAxes As DrawEllipseAxes = DrawEllipseAxes.Never, duration As Single = 0) As Ellipse
  overload: DebugDrawUtils.DebugDrawMesh.Ellipse*
  nameWithType.vb: DebugDrawMesh.Ellipse(Vector3, Vector2, Vector3, Color, Integer, DrawEllipseAxes, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, Integer, DebugDrawUtils.DebugDrawItems.DrawEllipseAxes, Single)
  name.vb: Ellipse(Vector3, Vector2, Vector3, Color, Integer, DrawEllipseAxes, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  id: FillEllipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillEllipse(Vector3, Vector2, Vector3, Color, int, float)
  nameWithType: DebugDrawMesh.FillEllipse(Vector3, Vector2, Vector3, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, int, float)
  type: Method
  source:
    id: FillEllipse
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2034
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled ellipse.
  example: []
  syntax:
    content: public Ellipse FillEllipse(Vector3 position, Vector2 size, Vector3 facing, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: size
      type: UnityEngine.Vector2
      description: The size/radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Function FillEllipse(position As Vector3, size As Vector2, facing As Vector3, color As Color, segments As Integer = 32, duration As Single = 0) As Ellipse
  overload: DebugDrawUtils.DebugDrawMesh.FillEllipse*
  nameWithType.vb: DebugDrawMesh.FillEllipse(Vector3, Vector2, Vector3, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, Integer, Single)
  name.vb: FillEllipse(Vector3, Vector2, Vector3, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawArcSegments,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawArcSegments,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  id: Arc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawArcSegments,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Arc(Vector3, Vector2, Vector3, float, float, Color, int, DrawArcSegments, DrawEllipseAxes, float)
  nameWithType: DebugDrawMesh.Arc(Vector3, Vector2, Vector3, float, float, Color, int, DrawArcSegments, DrawEllipseAxes, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, float, float, UnityEngine.Color, int, DebugDrawUtils.DebugDrawItems.DrawArcSegments, DebugDrawUtils.DebugDrawItems.DrawEllipseAxes, float)
  type: Method
  source:
    id: Arc
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2054
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire arc.
  example: []
  syntax:
    content: public Ellipse Arc(Vector3 position, Vector2 size, Vector3 facing, float startAngle, float endAngle, Color color, int segments = 32, DrawArcSegments drawArcSegments = DrawArcSegments.OpenOnly, DrawEllipseAxes drawAxes = DrawEllipseAxes.Never, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: size
      type: UnityEngine.Vector2
      description: The size/radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: startAngle
      type: System.Single
      description: The start angle in degrees of the arc.
    - id: endAngle
      type: System.Single
      description: The end angle in degrees of the arc.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: drawArcSegments
      type: DebugDrawUtils.DebugDrawItems.DrawArcSegments
      description: Options for connecting the centre of the ellipse and the arc end points.
    - id: drawAxes
      type: DebugDrawUtils.DebugDrawItems.DrawEllipseAxes
      description: Options for drawing an X and Y axis inside the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Function Arc(position As Vector3, size As Vector2, facing As Vector3, startAngle As Single, endAngle As Single, color As Color, segments As Integer = 32, drawArcSegments As DrawArcSegments = DrawArcSegments.OpenOnly, drawAxes As DrawEllipseAxes = DrawEllipseAxes.Never, duration As Single = 0) As Ellipse
  overload: DebugDrawUtils.DebugDrawMesh.Arc*
  nameWithType.vb: DebugDrawMesh.Arc(Vector3, Vector2, Vector3, Single, Single, Color, Integer, DrawArcSegments, DrawEllipseAxes, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, Single, Single, UnityEngine.Color, Integer, DebugDrawUtils.DebugDrawItems.DrawArcSegments, DebugDrawUtils.DebugDrawItems.DrawEllipseAxes, Single)
  name.vb: Arc(Vector3, Vector2, Vector3, Single, Single, Color, Integer, DrawArcSegments, DrawEllipseAxes, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: FillArc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillArc(Vector3, Vector2, Vector3, float, float, Color, int, float)
  nameWithType: DebugDrawMesh.FillArc(Vector3, Vector2, Vector3, float, float, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, float, float, UnityEngine.Color, int, float)
  type: Method
  source:
    id: FillArc
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2072
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled arc.
  example: []
  syntax:
    content: public Ellipse FillArc(Vector3 position, Vector2 size, Vector3 facing, float startAngle, float endAngle, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: size
      type: UnityEngine.Vector2
      description: The size/radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: startAngle
      type: System.Single
      description: The start angle in degrees of the arc.
    - id: endAngle
      type: System.Single
      description: The end angle in degrees of the arc.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Function FillArc(position As Vector3, size As Vector2, facing As Vector3, startAngle As Single, endAngle As Single, color As Color, segments As Integer = 32, duration As Single = 0) As Ellipse
  overload: DebugDrawUtils.DebugDrawMesh.FillArc*
  nameWithType.vb: DebugDrawMesh.FillArc(Vector3, Vector2, Vector3, Single, Single, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, Single, Single, UnityEngine.Color, Integer, Single)
  name.vb: FillArc(Vector3, Vector2, Vector3, Single, Single, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Line(Vector3, Vector3, Color, Color, float)
  nameWithType: DebugDrawMesh.Line(Vector3, Vector3, Color, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, float)
  type: Method
  source:
    id: Line
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2087
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a line.
  example: []
  syntax:
    content: public Line Line(Vector3 p1, Vector3 p2, Color color1, Color color2, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line's colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line's colour at the end.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Line
      description: The Line object.
    content.vb: Public Function Line(p1 As Vector3, p2 As Vector3, color1 As Color, color2 As Color, duration As Single = 0) As Line
  overload: DebugDrawUtils.DebugDrawMesh.Line*
  nameWithType.vb: DebugDrawMesh.Line(Vector3, Vector3, Color, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, Single)
  name.vb: Line(Vector3, Vector3, Color, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Line(Vector3, Vector3, Color, float)
  nameWithType: DebugDrawMesh.Line(Vector3, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: Line
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2101
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a line.
  example: []
  syntax:
    content: public Line Line(Vector3 p1, Vector3 p2, Color color, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color
      type: UnityEngine.Color
      description: The line's colour.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist.
    return:
      type: DebugDrawUtils.DebugDrawItems.Line
      description: The Line object.
    content.vb: Public Function Line(p1 As Vector3, p2 As Vector3, color As Color, duration As Single = 0) As Line
  overload: DebugDrawUtils.DebugDrawMesh.Line*
  nameWithType.vb: DebugDrawMesh.Line(Vector3, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: Line(Vector3, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Line3D(Vector3, Vector3, float, Color, Color, float)
  nameWithType: DebugDrawMesh.Line3D(Vector3, Vector3, float, Color, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Color, UnityEngine.Color, float)
  type: Method
  source:
    id: Line3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2117
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a 3D line that orients itself towards the camera.
  example: []
  syntax:
    content: public Line3D Line3D(Vector3 p1, Vector3 p2, float size, Color color1, Color color2, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: size
      type: System.Single
      description: The line thickness.
    - id: color1
      type: UnityEngine.Color
      description: The line's colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line's colour at the end.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Line3D
      description: The Line object.
    content.vb: Public Function Line3D(p1 As Vector3, p2 As Vector3, size As Single, color1 As Color, color2 As Color, duration As Single = 0) As Line3D
  overload: DebugDrawUtils.DebugDrawMesh.Line3D*
  nameWithType.vb: DebugDrawMesh.Line3D(Vector3, Vector3, Single, Color, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, Single, UnityEngine.Color, UnityEngine.Color, Single)
  name.vb: Line3D(Vector3, Vector3, Single, Color, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  id: Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Line3D(Vector3, Vector3, float, Color, float)
  nameWithType: DebugDrawMesh.Line3D(Vector3, Vector3, float, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Color, float)
  type: Method
  source:
    id: Line3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2132
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a 3D line that orients itself towards the camera.
  example: []
  syntax:
    content: public Line3D Line3D(Vector3 p1, Vector3 p2, float size, Color color, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: size
      type: System.Single
      description: The line thickness.
    - id: color
      type: UnityEngine.Color
      description: The line's colour.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist.
    return:
      type: DebugDrawUtils.DebugDrawItems.Line3D
      description: The Line3D object.
    content.vb: Public Function Line3D(p1 As Vector3, p2 As Vector3, size As Single, color As Color, duration As Single = 0) As Line3D
  overload: DebugDrawUtils.DebugDrawMesh.Line3D*
  nameWithType.vb: DebugDrawMesh.Line3D(Vector3, Vector3, Single, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, Single, UnityEngine.Color, Single)
  name.vb: Line3D(Vector3, Vector3, Single, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Line3D(Vector3, Vector3, float, Vector3, Color, Color, float)
  nameWithType: DebugDrawMesh.Line3D(Vector3, Vector3, float, Vector3, Color, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, float)
  type: Method
  source:
    id: Line3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2149
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a 3D line facing the given direction.
  example: []
  syntax:
    content: public Line3D Line3D(Vector3 p1, Vector3 p2, float size, Vector3 facing, Color color1, Color color2, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: size
      type: System.Single
      description: The line thickness.
    - id: facing
      type: UnityEngine.Vector3
      description: The forward direction of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line's colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line's colour at the end.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Line3D
      description: The Line object.
    content.vb: Public Function Line3D(p1 As Vector3, p2 As Vector3, size As Single, facing As Vector3, color1 As Color, color2 As Color, duration As Single = 0) As Line3D
  overload: DebugDrawUtils.DebugDrawMesh.Line3D*
  nameWithType.vb: DebugDrawMesh.Line3D(Vector3, Vector3, Single, Vector3, Color, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, Single, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, Single)
  name.vb: Line3D(Vector3, Vector3, Single, Vector3, Color, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Line3D(Vector3, Vector3, float, Vector3, Color, float)
  nameWithType: DebugDrawMesh.Line3D(Vector3, Vector3, float, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: Line3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2165
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a 3D line that orients itself towards the camera.
  example: []
  syntax:
    content: public Line3D Line3D(Vector3 p1, Vector3 p2, float size, Vector3 facing, Color color, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: size
      type: System.Single
      description: The line thickness.
    - id: facing
      type: UnityEngine.Vector3
      description: The forward direction of the line.
    - id: color
      type: UnityEngine.Color
      description: The line's colour.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist.
    return:
      type: DebugDrawUtils.DebugDrawItems.Line3D
      description: The Line3D object.
    content.vb: Public Function Line3D(p1 As Vector3, p2 As Vector3, size As Single, facing As Vector3, color As Color, duration As Single = 0) As Line3D
  overload: DebugDrawUtils.DebugDrawMesh.Line3D*
  nameWithType.vb: DebugDrawMesh.Line3D(Vector3, Vector3, Single, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, Single, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: Line3D(Vector3, Vector3, Single, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Lines(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Lines(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  id: Lines(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Lines(List<Vector3>, List<Color>, float)
  nameWithType: DebugDrawMesh.Lines(List<Vector3>, List<Color>, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Lines(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Color>, float)
  type: Method
  source:
    id: Lines
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2179
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Batch draw multiple lines from a positions and colors array.

    Both arrays must be non-null, of the same size, and multiples of two - two entries for each line.
  example: []
  syntax:
    content: public Lines Lines(List<Vector3> positions, List<Color> colors, float duration = 0)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Lines
      description: The Line object.
    content.vb: Public Function Lines(positions As List(Of Vector3), colors As List(Of Color), duration As Single = 0) As Lines
  overload: DebugDrawUtils.DebugDrawMesh.Lines*
  nameWithType.vb: DebugDrawMesh.Lines(List(Of Vector3), List(Of Color), Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Lines(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Color), Single)
  name.vb: Lines(List(Of Vector3), List(Of Color), Single)
- uid: DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  id: Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Lines3D(List<Vector3>, List<float>, List<Color>, float)
  nameWithType: DebugDrawMesh.Lines3D(List<Vector3>, List<float>, List<Color>, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<float>, System.Collections.Generic.List<UnityEngine.Color>, float)
  type: Method
  source:
    id: Lines3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2193
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a batch of 3D lines that orients itself towards the camera.
  example: []
  syntax:
    content: public Lines3D Lines3D(List<Vector3> positions, List<float> sizes, List<Color> colors, float duration = 0)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The line thickness, one item for each pair of positions and colors.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Lines3D
      description: The Line object.
    content.vb: Public Function Lines3D(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), duration As Single = 0) As Lines3D
  overload: DebugDrawUtils.DebugDrawMesh.Lines3D*
  nameWithType.vb: DebugDrawMesh.Lines3D(List(Of Vector3), List(Of Single), List(Of Color), Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of Single), System.Collections.Generic.List(Of UnityEngine.Color), Single)
  name.vb: Lines3D(List(Of Vector3), List(Of Single), List(Of Color), Single)
- uid: DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  id: Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Lines3D(List<Vector3>, List<float>, List<Color>, Vector3?, float)
  nameWithType: DebugDrawMesh.Lines3D(List<Vector3>, List<float>, List<Color>, Vector3?, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<float>, System.Collections.Generic.List<UnityEngine.Color>, UnityEngine.Vector3?, float)
  type: Method
  source:
    id: Lines3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2209
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a 3D line facing the given direction.
  example: []
  syntax:
    content: public Lines3D Lines3D(List<Vector3> positions, List<float> sizes, List<Color> colors, Vector3? facing, float duration = 0)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The line thickness, one item for each pair of positions and colors.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: facing
      type: System.Nullable{UnityEngine.Vector3}
      description: >-
        The forward direction of the line. Automatically updated if faceCamera is true.
            If null the lines will automatically rotate to face the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Lines3D
      description: The Line object.
    content.vb: Public Function Lines3D(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), facing As Vector3?, duration As Single = 0) As Lines3D
  overload: DebugDrawUtils.DebugDrawMesh.Lines3D*
  nameWithType.vb: DebugDrawMesh.Lines3D(List(Of Vector3), List(Of Single), List(Of Color), Vector3?, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of Single), System.Collections.Generic.List(Of UnityEngine.Color), UnityEngine.Vector3?, Single)
  name.vb: Lines3D(List(Of Vector3), List(Of Single), List(Of Color), Vector3?, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Collections.Generic.List{System.Int32},System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Collections.Generic.List{System.Int32},System.Single)
  id: Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Collections.Generic.List{System.Int32},System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Mesh(List<Vector3>, List<Color>, List<int>, float)
  nameWithType: DebugDrawMesh.Mesh(List<Vector3>, List<Color>, List<int>, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Color>, System.Collections.Generic.List<int>, float)
  type: Method
  source:
    id: Mesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2223
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wireframe mesh.
  example: []
  syntax:
    content: public MeshItem Mesh(List<Vector3> vertices, List<Color> colors, List<int> indices, float duration = 0)
    parameters:
    - id: vertices
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The list of vertices.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The list of colors.
    - id: indices
      type: System.Collections.Generic.List{System.Int32}
      description: The list of triangle indices.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.MeshItem
      description: The Line object.
    content.vb: Public Function Mesh(vertices As List(Of Vector3), colors As List(Of Color), indices As List(Of Integer), duration As Single = 0) As MeshItem
  overload: DebugDrawUtils.DebugDrawMesh.Mesh*
  nameWithType.vb: DebugDrawMesh.Mesh(List(Of Vector3), List(Of Color), List(Of Integer), Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Color), System.Collections.Generic.List(Of Integer), Single)
  name.vb: Mesh(List(Of Vector3), List(Of Color), List(Of Integer), Single)
- uid: DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},UnityEngine.Color,System.Single)
  id: Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Mesh(List<Vector3>, List<int>, Color, float)
  nameWithType: DebugDrawMesh.Mesh(List<Vector3>, List<int>, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<int>, UnityEngine.Color, float)
  type: Method
  source:
    id: Mesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2237
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wireframe mesh with a single color.
  example: []
  syntax:
    content: public MeshItem Mesh(List<Vector3> vertices, List<int> indices, Color color, float duration = 0)
    parameters:
    - id: vertices
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The list of vertices.
    - id: indices
      type: System.Collections.Generic.List{System.Int32}
      description: The list of triangle indices.
    - id: color
      type: UnityEngine.Color
      description: The color of the mesh.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.MeshItem
      description: The Line object.
    content.vb: Public Function Mesh(vertices As List(Of Vector3), indices As List(Of Integer), color As Color, duration As Single = 0) As MeshItem
  overload: DebugDrawUtils.DebugDrawMesh.Mesh*
  nameWithType.vb: DebugDrawMesh.Mesh(List(Of Vector3), List(Of Integer), Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of Integer), UnityEngine.Color, Single)
  name.vb: Mesh(List(Of Vector3), List(Of Integer), Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Mesh(UnityEngine.Mesh,System.Nullable{UnityEngine.Color},System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Mesh(UnityEngine.Mesh,System.Nullable{UnityEngine.Color},System.Single)
  id: Mesh(UnityEngine.Mesh,System.Nullable{UnityEngine.Color},System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Mesh(Mesh, Color?, float)
  nameWithType: DebugDrawMesh.Mesh(Mesh, Color?, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Mesh(UnityEngine.Mesh, UnityEngine.Color?, float)
  type: Method
  source:
    id: Mesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2251
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Draws a wireframe mesh. This will allocate new lists and fetch the mesh data so it's advisable to

    not call this every frame and instead create it once keep a reference to it.
  example: []
  syntax:
    content: public MeshItem Mesh(Mesh mesh, Color? color, float duration = 0)
    parameters:
    - id: mesh
      type: UnityEngine.Mesh
      description: The mesh.
    - id: color
      type: System.Nullable{UnityEngine.Color}
      description: The color of the mesh. If null the mesh must have color data associated with it
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.MeshItem
      description: The Line object.
    content.vb: Public Function Mesh(mesh As Mesh, color As Color?, duration As Single = 0) As MeshItem
  overload: DebugDrawUtils.DebugDrawMesh.Mesh*
  nameWithType.vb: DebugDrawMesh.Mesh(Mesh, Color?, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Mesh(UnityEngine.Mesh, UnityEngine.Color?, Single)
  name.vb: Mesh(Mesh, Color?, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Point(UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Point(UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Point(UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Point(Vector3, Color, float)
  nameWithType: DebugDrawMesh.Point(Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Point(UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: Point
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2264
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a point that has no size.
  example: []
  syntax:
    content: public Point Point(Vector3 position, Color color, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The position of the point.
    - id: color
      type: UnityEngine.Color
      description: The point's.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Point
      description: The Line object.
    content.vb: Public Function Point(position As Vector3, color As Color, duration As Single = 0) As Point
  overload: DebugDrawUtils.DebugDrawMesh.Point*
  nameWithType.vb: DebugDrawMesh.Point(Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Point(UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: Point(Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Points(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Points(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  id: Points(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Points(List<Vector3>, List<Color>, float)
  nameWithType: DebugDrawMesh.Points(List<Vector3>, List<Color>, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Points(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Color>, float)
  type: Method
  source:
    id: Points
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2278
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Batch draw multiple points from a positions and colors array.

    Both arrays must be non-null and of the same size.
  example: []
  syntax:
    content: public Points Points(List<Vector3> positions, List<Color> colors, float duration = 0)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Points
      description: The Line object.
    content.vb: Public Function Points(positions As List(Of Vector3), colors As List(Of Color), duration As Single = 0) As Points
  overload: DebugDrawUtils.DebugDrawMesh.Points*
  nameWithType.vb: DebugDrawMesh.Points(List(Of Vector3), List(Of Color), Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Points(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Color), Single)
  name.vb: Points(List(Of Vector3), List(Of Color), Single)
- uid: DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Quad(Vector3, Vector3, Vector3, Vector3, Color, float)
  nameWithType: DebugDrawMesh.Quad(Vector3, Vector3, Vector3, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: Quad
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2294
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire quad.
  example: []
  syntax:
    content: public Quad Quad(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Color color, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the quad.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the quad.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: p4
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: color
      type: UnityEngine.Color
      description: The colour of the quad.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Quad
      description: The ellipse object.
    content.vb: Public Function Quad(p1 As Vector3, p2 As Vector3, p3 As Vector3, p4 As Vector3, color As Color, duration As Single = 0) As Quad
  overload: DebugDrawUtils.DebugDrawMesh.Quad*
  nameWithType.vb: DebugDrawMesh.Quad(Vector3, Vector3, Vector3, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: Quad(Vector3, Vector3, Vector3, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Quad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, float)
  nameWithType: DebugDrawMesh.Quad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, float)
  type: Method
  source:
    id: Quad
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2313
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire quad.
  example: []
  syntax:
    content: public Quad Quad(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Color color1, Color color2, Color color3, Color color4, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the quad.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the quad.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: p4
      type: UnityEngine.Vector3
      description: The fourth point of the quad.
    - id: color1
      type: UnityEngine.Color
      description: The color of the quad's first point..
    - id: color2
      type: UnityEngine.Color
      description: The color of the quad's second point.
    - id: color3
      type: UnityEngine.Color
      description: The color of the quad's third point.
    - id: color4
      type: UnityEngine.Color
      description: The color of the quad's fourth point.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Quad
      description: The ellipse object.
    content.vb: Public Function Quad(p1 As Vector3, p2 As Vector3, p3 As Vector3, p4 As Vector3, color1 As Color, color2 As Color, color3 As Color, color4 As Color, duration As Single = 0) As Quad
  overload: DebugDrawUtils.DebugDrawMesh.Quad*
  nameWithType.vb: DebugDrawMesh.Quad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, Single)
  name.vb: Quad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillQuad(Vector3, Vector3, Vector3, Vector3, Color, float)
  nameWithType: DebugDrawMesh.FillQuad(Vector3, Vector3, Vector3, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: FillQuad
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2329
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled quad.
  example: []
  syntax:
    content: public Quad FillQuad(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Color color, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the quad.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the quad.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: p4
      type: UnityEngine.Vector3
      description: The fourth point of the quad.
    - id: color
      type: UnityEngine.Color
      description: The colour of the quad.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Quad
      description: The ellipse object.
    content.vb: Public Function FillQuad(p1 As Vector3, p2 As Vector3, p3 As Vector3, p4 As Vector3, color As Color, duration As Single = 0) As Quad
  overload: DebugDrawUtils.DebugDrawMesh.FillQuad*
  nameWithType.vb: DebugDrawMesh.FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, float)
  nameWithType: DebugDrawMesh.FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, float)
  type: Method
  source:
    id: FillQuad
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2348
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled quad.
  example: []
  syntax:
    content: public Quad FillQuad(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Color color1, Color color2, Color color3, Color color4, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the quad.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the quad.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: p4
      type: UnityEngine.Vector3
      description: The fourth point of the quad.
    - id: color1
      type: UnityEngine.Color
      description: The color of the quad's first point..
    - id: color2
      type: UnityEngine.Color
      description: The color of the quad's second point.
    - id: color3
      type: UnityEngine.Color
      description: The color of the quad's third point.
    - id: color4
      type: UnityEngine.Color
      description: The color of the quad's fourth point.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Quad
      description: The ellipse object.
    content.vb: Public Function FillQuad(p1 As Vector3, p2 As Vector3, p3 As Vector3, p4 As Vector3, color1 As Color, color2 As Color, color3 As Color, color4 As Color, duration As Single = 0) As Quad
  overload: DebugDrawUtils.DebugDrawMesh.FillQuad*
  nameWithType.vb: DebugDrawMesh.FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, Single)
  name.vb: FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: FillRectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillRectangle(Vector3, float, Vector3, Color, float)
  nameWithType: DebugDrawMesh.FillRectangle(Vector3, float, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3, float, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: FillRectangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2363
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled square.
  example: []
  syntax:
    content: public Rectangle FillRectangle(Vector3 position, float size, Vector3 facing, Color color, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the square.
    - id: size
      type: System.Single
      description: The half size of the square.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the square is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Rectangle
      description: The ellipse object.
    content.vb: Public Function FillRectangle(position As Vector3, size As Single, facing As Vector3, color As Color, duration As Single = 0) As Rectangle
  overload: DebugDrawUtils.DebugDrawMesh.FillRectangle*
  nameWithType.vb: DebugDrawMesh.FillRectangle(Vector3, Single, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3, Single, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: FillRectangle(Vector3, Single, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Rectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Rectangle(Vector3, float, Vector3, Color, float)
  nameWithType: DebugDrawMesh.Rectangle(Vector3, float, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3, float, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: Rectangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2378
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire square.
  example: []
  syntax:
    content: public Rectangle Rectangle(Vector3 position, float size, Vector3 facing, Color color, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the square.
    - id: size
      type: System.Single
      description: The half size of the square.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the square is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Rectangle
      description: The ellipse object.
    content.vb: Public Function Rectangle(position As Vector3, size As Single, facing As Vector3, color As Color, duration As Single = 0) As Rectangle
  overload: DebugDrawUtils.DebugDrawMesh.Rectangle*
  nameWithType.vb: DebugDrawMesh.Rectangle(Vector3, Single, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3, Single, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: Rectangle(Vector3, Single, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: FillRectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillRectangle(Vector3, Vector2, Vector3, Color, float)
  nameWithType: DebugDrawMesh.FillRectangle(Vector3, Vector2, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: FillRectangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2393
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled square.
  example: []
  syntax:
    content: public Rectangle FillRectangle(Vector3 position, Vector2 size, Vector3 facing, Color color, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the square.
    - id: size
      type: UnityEngine.Vector2
      description: The half size of the square.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the square is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Rectangle
      description: The ellipse object.
    content.vb: Public Function FillRectangle(position As Vector3, size As Vector2, facing As Vector3, color As Color, duration As Single = 0) As Rectangle
  overload: DebugDrawUtils.DebugDrawMesh.FillRectangle*
  nameWithType.vb: DebugDrawMesh.FillRectangle(Vector3, Vector2, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: FillRectangle(Vector3, Vector2, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Rectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Rectangle(Vector3, Vector2, Vector3, Color, float)
  nameWithType: DebugDrawMesh.Rectangle(Vector3, Vector2, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: Rectangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2408
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire square.
  example: []
  syntax:
    content: public Rectangle Rectangle(Vector3 position, Vector2 size, Vector3 facing, Color color, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the square.
    - id: size
      type: UnityEngine.Vector2
      description: The half size of the square.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the square is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Rectangle
      description: The ellipse object.
    content.vb: Public Function Rectangle(position As Vector3, size As Vector2, facing As Vector3, color As Color, duration As Single = 0) As Rectangle
  overload: DebugDrawUtils.DebugDrawMesh.Rectangle*
  nameWithType.vb: DebugDrawMesh.Rectangle(Vector3, Vector2, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: Rectangle(Vector3, Vector2, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: Sphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Sphere(Vector3, float, Color, int, float)
  nameWithType: DebugDrawMesh.Sphere(Vector3, float, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3, float, UnityEngine.Color, int, float)
  type: Method
  source:
    id: Sphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2423
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a sphere comprised of a circle for each axis.
  example: []
  syntax:
    content: public Sphere Sphere(Vector3 position, float radius, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: System.Single
      description: The radius of the sphere in each axis.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Function Sphere(position As Vector3, radius As Single, color As Color, segments As Integer = 32, duration As Single = 0) As Sphere
  overload: DebugDrawUtils.DebugDrawMesh.Sphere*
  nameWithType.vb: DebugDrawMesh.Sphere(Vector3, Single, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3, Single, UnityEngine.Color, Integer, Single)
  name.vb: Sphere(Vector3, Single, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  id: Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Sphere(Vector3, Vector3, Color, int, float)
  nameWithType: DebugDrawMesh.Sphere(Vector3, Vector3, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, int, float)
  type: Method
  source:
    id: Sphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2438
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a sphere comprised of a circle for each axis.
  example: []
  syntax:
    content: public Sphere Sphere(Vector3 position, Vector3 radius, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: UnityEngine.Vector3
      description: The radius of the sphere in each axis.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Function Sphere(position As Vector3, radius As Vector3, color As Color, segments As Integer = 32, duration As Single = 0) As Sphere
  overload: DebugDrawUtils.DebugDrawMesh.Sphere*
  nameWithType.vb: DebugDrawMesh.Sphere(Vector3, Vector3, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Integer, Single)
  name.vb: Sphere(Vector3, Vector3, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  id: Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Sphere(Vector3, Vector3, Quaternion, Color, int, float)
  nameWithType: DebugDrawMesh.Sphere(Vector3, Vector3, Quaternion, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Color, int, float)
  type: Method
  source:
    id: Sphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2454
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a sphere comprised of a circle for each axis.
  example: []
  syntax:
    content: public Sphere Sphere(Vector3 position, Vector3 radius, Quaternion orientation, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: UnityEngine.Vector3
      description: The radius of the sphere in each axis.
    - id: orientation
      type: UnityEngine.Quaternion
      description: The orientation of the sphere.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Function Sphere(position As Vector3, radius As Vector3, orientation As Quaternion, color As Color, segments As Integer = 32, duration As Single = 0) As Sphere
  overload: DebugDrawUtils.DebugDrawMesh.Sphere*
  nameWithType.vb: DebugDrawMesh.Sphere(Vector3, Vector3, Quaternion, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Color, Integer, Single)
  name.vb: Sphere(Vector3, Vector3, Quaternion, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: WireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: WireSphere(Vector3, float, Color, int, float)
  nameWithType: DebugDrawMesh.WireSphere(Vector3, float, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3, float, UnityEngine.Color, int, float)
  type: Method
  source:
    id: WireSphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2469
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a full wireframe sphere.
  example: []
  syntax:
    content: public Sphere WireSphere(Vector3 position, float radius, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: System.Single
      description: The radius of the sphere in each axis.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Function WireSphere(position As Vector3, radius As Single, color As Color, segments As Integer = 32, duration As Single = 0) As Sphere
  overload: DebugDrawUtils.DebugDrawMesh.WireSphere*
  nameWithType.vb: DebugDrawMesh.WireSphere(Vector3, Single, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3, Single, UnityEngine.Color, Integer, Single)
  name.vb: WireSphere(Vector3, Single, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  id: WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: WireSphere(Vector3, Vector3, Color, int, float)
  nameWithType: DebugDrawMesh.WireSphere(Vector3, Vector3, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, int, float)
  type: Method
  source:
    id: WireSphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2484
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a full wireframe sphere.
  example: []
  syntax:
    content: public Sphere WireSphere(Vector3 position, Vector3 radius, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: UnityEngine.Vector3
      description: The radius of the sphere in each axis.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Function WireSphere(position As Vector3, radius As Vector3, color As Color, segments As Integer = 32, duration As Single = 0) As Sphere
  overload: DebugDrawUtils.DebugDrawMesh.WireSphere*
  nameWithType.vb: DebugDrawMesh.WireSphere(Vector3, Vector3, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Integer, Single)
  name.vb: WireSphere(Vector3, Vector3, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  id: WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: WireSphere(Vector3, Vector3, Quaternion, Color, int, float)
  nameWithType: DebugDrawMesh.WireSphere(Vector3, Vector3, Quaternion, Color, int, float)
  fullName: DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Color, int, float)
  type: Method
  source:
    id: WireSphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2500
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a full wireframe sphere.
  example: []
  syntax:
    content: public Sphere WireSphere(Vector3 position, Vector3 radius, Quaternion orientation, Color color, int segments = 32, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: UnityEngine.Vector3
      description: The radius of the sphere in each axis.
    - id: orientation
      type: UnityEngine.Quaternion
      description: The orientation of the sphere.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Function WireSphere(position As Vector3, radius As Vector3, orientation As Quaternion, color As Color, segments As Integer = 32, duration As Single = 0) As Sphere
  overload: DebugDrawUtils.DebugDrawMesh.WireSphere*
  nameWithType.vb: DebugDrawMesh.WireSphere(Vector3, Vector3, Quaternion, Color, Integer, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Color, Integer, Single)
  name.vb: WireSphere(Vector3, Vector3, Quaternion, Color, Integer, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3,System.String,UnityEngine.Color,UnityEngine.TextAnchor,System.Single,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3,System.String,UnityEngine.Color,UnityEngine.TextAnchor,System.Single,System.Single)
  id: Text(UnityEngine.Vector3,System.String,UnityEngine.Color,UnityEngine.TextAnchor,System.Single,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Text(Vector3, string, Color, TextAnchor, float, float)
  nameWithType: DebugDrawMesh.Text(Vector3, string, Color, TextAnchor, float, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3, string, UnityEngine.Color, UnityEngine.TextAnchor, float, float)
  type: Method
  source:
    id: Text
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2516
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a line.
  example: []
  syntax:
    content: public Text Text(Vector3 position, string text, Color color, TextAnchor align = TextAnchor.UpperLeft, float scale = 1, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The world space position of the text.
    - id: text
      type: System.String
      description: The text to display.
    - id: color
      type: UnityEngine.Color
      description: The text color.
    - id: align
      type: UnityEngine.TextAnchor
      description: Where to anchor the text.
    - id: scale
      type: System.Single
      description: The text scale. Set to 1 for default.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Text
      description: The Text object.
    content.vb: Public Function Text(position As Vector3, text As String, color As Color, align As TextAnchor = TextAnchor.UpperLeft, scale As Single = 1, duration As Single = 0) As Text
  overload: DebugDrawUtils.DebugDrawMesh.Text*
  nameWithType.vb: DebugDrawMesh.Text(Vector3, String, Color, TextAnchor, Single, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3, String, UnityEngine.Color, UnityEngine.TextAnchor, Single, Single)
  name.vb: Text(Vector3, String, Color, TextAnchor, Single, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3,System.String,UnityEngine.TextAnchor,System.Single,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3,System.String,UnityEngine.TextAnchor,System.Single,System.Single)
  id: Text(UnityEngine.Vector3,System.String,UnityEngine.TextAnchor,System.Single,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Text(Vector3, string, TextAnchor, float, float)
  nameWithType: DebugDrawMesh.Text(Vector3, string, TextAnchor, float, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3, string, UnityEngine.TextAnchor, float, float)
  type: Method
  source:
    id: Text
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2531
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a line.
  example: []
  syntax:
    content: public Text Text(Vector3 position, string text, TextAnchor align = TextAnchor.UpperLeft, float scale = 1, float duration = 0)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The world space position of the text.
    - id: text
      type: System.String
      description: The text to display.
    - id: align
      type: UnityEngine.TextAnchor
      description: Where to anchor the text.
    - id: scale
      type: System.Single
      description: The text scale. Set to 1 for default.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist.
    return:
      type: DebugDrawUtils.DebugDrawItems.Text
      description: The Text object.
    content.vb: Public Function Text(position As Vector3, text As String, align As TextAnchor = TextAnchor.UpperLeft, scale As Single = 1, duration As Single = 0) As Text
  overload: DebugDrawUtils.DebugDrawMesh.Text*
  nameWithType.vb: DebugDrawMesh.Text(Vector3, String, TextAnchor, Single, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3, String, UnityEngine.TextAnchor, Single, Single)
  name.vb: Text(Vector3, String, TextAnchor, Single, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Triangle(Vector3, Vector3, Vector3, Color, float)
  nameWithType: DebugDrawMesh.Triangle(Vector3, Vector3, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: Triangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2546
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire triangle.
  example: []
  syntax:
    content: public Triangle Triangle(Vector3 p1, Vector3 p2, Vector3 p3, Color color, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the triangle.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the triangle.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the triangle.
    - id: color
      type: UnityEngine.Color
      description: The colour of the triangle.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Triangle
      description: The ellipse object.
    content.vb: Public Function Triangle(p1 As Vector3, p2 As Vector3, p3 As Vector3, color As Color, duration As Single = 0) As Triangle
  overload: DebugDrawUtils.DebugDrawMesh.Triangle*
  nameWithType.vb: DebugDrawMesh.Triangle(Vector3, Vector3, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: Triangle(Vector3, Vector3, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: Triangle(Vector3, Vector3, Vector3, Color, Color, Color, float)
  nameWithType: DebugDrawMesh.Triangle(Vector3, Vector3, Vector3, Color, Color, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, float)
  type: Method
  source:
    id: Triangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2563
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a wire triangle.
  example: []
  syntax:
    content: public Triangle Triangle(Vector3 p1, Vector3 p2, Vector3 p3, Color color1, Color color2, Color color3, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the triangle.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the triangle.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the triangle.
    - id: color1
      type: UnityEngine.Color
      description: The color of the triangle's first point..
    - id: color2
      type: UnityEngine.Color
      description: The color of the triangle's second point.
    - id: color3
      type: UnityEngine.Color
      description: The color of the triangle's third point.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Triangle
      description: The ellipse object.
    content.vb: Public Function Triangle(p1 As Vector3, p2 As Vector3, p3 As Vector3, color1 As Color, color2 As Color, color3 As Color, duration As Single = 0) As Triangle
  overload: DebugDrawUtils.DebugDrawMesh.Triangle*
  nameWithType.vb: DebugDrawMesh.Triangle(Vector3, Vector3, Vector3, Color, Color, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, Single)
  name.vb: Triangle(Vector3, Vector3, Vector3, Color, Color, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillTriangle(Vector3, Vector3, Vector3, Color, float)
  nameWithType: DebugDrawMesh.FillTriangle(Vector3, Vector3, Vector3, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, float)
  type: Method
  source:
    id: FillTriangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2578
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled triangle.
  example: []
  syntax:
    content: public Triangle FillTriangle(Vector3 p1, Vector3 p2, Vector3 p3, Color color, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the triangle.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the triangle.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the triangle.
    - id: color
      type: UnityEngine.Color
      description: The colour of the triangle.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Triangle
      description: The ellipse object.
    content.vb: Public Function FillTriangle(p1 As Vector3, p2 As Vector3, p3 As Vector3, color As Color, duration As Single = 0) As Triangle
  overload: DebugDrawUtils.DebugDrawMesh.FillTriangle*
  nameWithType.vb: DebugDrawMesh.FillTriangle(Vector3, Vector3, Vector3, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, Single)
  name.vb: FillTriangle(Vector3, Vector3, Vector3, Color, Single)
- uid: DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: DebugDrawUtils.DebugDrawMesh
  langs:
  - csharp
  - vb
  name: FillTriangle(Vector3, Vector3, Vector3, Color, Color, Color, float)
  nameWithType: DebugDrawMesh.FillTriangle(Vector3, Vector3, Vector3, Color, Color, Color, float)
  fullName: DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, float)
  type: Method
  source:
    id: FillTriangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 2595
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Draws a filled triangle.
  example: []
  syntax:
    content: public Triangle FillTriangle(Vector3 p1, Vector3 p2, Vector3 p3, Color color1, Color color2, Color color3, float duration = 0)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the triangle.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the triangle.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the triangle.
    - id: color1
      type: UnityEngine.Color
      description: The color of the triangle's first point..
    - id: color2
      type: UnityEngine.Color
      description: The color of the triangle's second point.
    - id: color3
      type: UnityEngine.Color
      description: The color of the triangle's third point.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawUtils.DebugDrawItems.Triangle
      description: The ellipse object.
    content.vb: Public Function FillTriangle(p1 As Vector3, p2 As Vector3, p3 As Vector3, color1 As Color, color2 As Color, color3 As Color, duration As Single = 0) As Triangle
  overload: DebugDrawUtils.DebugDrawMesh.FillTriangle*
  nameWithType.vb: DebugDrawMesh.FillTriangle(Vector3, Vector3, Vector3, Color, Color, Color, Single)
  fullName.vb: DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, Single)
  name.vb: FillTriangle(Vector3, Vector3, Vector3, Color, Color, Color, Single)
references:
- uid: DebugDrawUtils.DebugDraw
  commentId: T:DebugDrawUtils.DebugDraw
  href: DebugDrawUtils.DebugDraw.html
  name: DebugDraw
  nameWithType: DebugDraw
  fullName: DebugDrawUtils.DebugDraw
- uid: DebugDrawUtils
  commentId: N:DebugDrawUtils
  href: DebugDrawUtils.html
  name: DebugDrawUtils
  nameWithType: DebugDrawUtils
  fullName: DebugDrawUtils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: DebugDrawUtils.DebugDrawMesh.Build
  commentId: M:DebugDrawUtils.DebugDrawMesh.Build
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Build
  name: Build()
  nameWithType: DebugDrawMesh.Build()
  fullName: DebugDrawUtils.DebugDrawMesh.Build()
  spec.csharp:
  - uid: DebugDrawUtils.DebugDrawMesh.Build
    name: Build
    href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Build
  - name: (
  - name: )
  spec.vb:
  - uid: DebugDrawUtils.DebugDrawMesh.Build
    name: Build
    href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Build
  - name: (
  - name: )
- uid: System.Collections.Generic.List{UnityEngine.Vector3}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<UnityEngine.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{UnityEngine.Color}
  commentId: T:System.Collections.Generic.List{UnityEngine.Color}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Color>
  nameWithType: List<Color>
  fullName: System.Collections.Generic.List<UnityEngine.Color>
  nameWithType.vb: List(Of Color)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Color)
  name.vb: List(Of Color)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{DebugDrawUtils.DebugDrawItems.BaseItem}
  commentId: T:System.Collections.Generic.List{DebugDrawUtils.DebugDrawItems.BaseItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<BaseItem>
  nameWithType: List<BaseItem>
  fullName: System.Collections.Generic.List<DebugDrawUtils.DebugDrawItems.BaseItem>
  nameWithType.vb: List(Of BaseItem)
  fullName.vb: System.Collections.Generic.List(Of DebugDrawUtils.DebugDrawItems.BaseItem)
  name.vb: List(Of BaseItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: DebugDrawUtils.DebugDrawItems.BaseItem
    name: BaseItem
    href: DebugDrawUtils.DebugDrawItems.BaseItem.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: DebugDrawUtils.DebugDrawItems.BaseItem
    name: BaseItem
    href: DebugDrawUtils.DebugDrawItems.BaseItem.html
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{DebugDrawUtils.DebugDrawItems.BaseItem}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{DebugDrawUtils.DebugDrawItems.BaseItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, List<BaseItem>>
  nameWithType: Dictionary<string, List<BaseItem>>
  fullName: System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<DebugDrawUtils.DebugDrawItems.BaseItem>>
  nameWithType.vb: Dictionary(Of String, List(Of BaseItem))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of DebugDrawUtils.DebugDrawItems.BaseItem))
  name.vb: Dictionary(Of String, List(Of BaseItem))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: DebugDrawUtils.DebugDrawItems.BaseItem
    name: BaseItem
    href: DebugDrawUtils.DebugDrawItems.BaseItem.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: DebugDrawUtils.DebugDrawItems.BaseItem
    name: BaseItem
    href: DebugDrawUtils.DebugDrawItems.BaseItem.html
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: DebugDrawUtils.DebugDrawMesh.#ctor*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.#ctor
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.#ctor(UnityEngine.MeshTopology)
  name: DebugDrawMesh
  nameWithType: DebugDrawMesh.DebugDrawMesh
  fullName: DebugDrawUtils.DebugDrawMesh.DebugDrawMesh
  nameWithType.vb: DebugDrawMesh.New
  fullName.vb: DebugDrawUtils.DebugDrawMesh.New
  name.vb: New
- uid: UnityEngine.MeshTopology
  commentId: T:UnityEngine.MeshTopology
  parent: UnityEngine
  isExternal: true
  name: MeshTopology
  nameWithType: MeshTopology
  fullName: UnityEngine.MeshTopology
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: DebugDrawUtils.DebugDrawMesh.CreateMesh*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.CreateMesh
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.CreateMesh
  name: CreateMesh
  nameWithType: DebugDrawMesh.CreateMesh
  fullName: DebugDrawUtils.DebugDrawMesh.CreateMesh
- uid: DebugDrawUtils.DebugDrawMesh.SetInvertColours*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.SetInvertColours
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.SetInvertColours(System.Boolean)
  name: SetInvertColours
  nameWithType: DebugDrawMesh.SetInvertColours
  fullName: DebugDrawUtils.DebugDrawMesh.SetInvertColours
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: DebugDrawUtils.DebugDrawMesh
  commentId: T:DebugDrawUtils.DebugDrawMesh
  parent: DebugDrawUtils
  href: DebugDrawUtils.DebugDrawMesh.html
  name: DebugDrawMesh
  nameWithType: DebugDrawMesh
  fullName: DebugDrawUtils.DebugDrawMesh
- uid: DebugDrawUtils.DebugDrawMesh.SetCulling*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.SetCulling
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.SetCulling(UnityEngine.Rendering.CullMode)
  name: SetCulling
  nameWithType: DebugDrawMesh.SetCulling
  fullName: DebugDrawUtils.DebugDrawMesh.SetCulling
- uid: UnityEngine.Rendering.CullMode
  commentId: T:UnityEngine.Rendering.CullMode
  parent: UnityEngine.Rendering
  isExternal: true
  name: CullMode
  nameWithType: CullMode
  fullName: UnityEngine.Rendering.CullMode
- uid: UnityEngine.Rendering
  commentId: N:UnityEngine.Rendering
  isExternal: true
  name: UnityEngine.Rendering
  nameWithType: UnityEngine.Rendering
  fullName: UnityEngine.Rendering
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Rendering
    name: Rendering
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Rendering
    name: Rendering
    isExternal: true
- uid: DebugDrawUtils.DebugDrawMesh.SetDepthTesting*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.SetDepthTesting
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.SetDepthTesting(System.Boolean)
  name: SetDepthTesting
  nameWithType: DebugDrawMesh.SetDepthTesting
  fullName: DebugDrawUtils.DebugDrawMesh.SetDepthTesting
- uid: DebugDrawUtils.DebugDrawItems.Line
  commentId: T:DebugDrawUtils.DebugDrawItems.Line
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Line.html
  name: Line
  nameWithType: Line
  fullName: DebugDrawUtils.DebugDrawItems.Line
- uid: DebugDrawUtils.DebugDrawMesh.Add*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Add
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Add``1(``0)
  name: Add
  nameWithType: DebugDrawMesh.Add
  fullName: DebugDrawUtils.DebugDrawMesh.Add
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: DebugDrawUtils.DebugDrawItems
  commentId: N:DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.html
  name: DebugDrawUtils.DebugDrawItems
  nameWithType: DebugDrawUtils.DebugDrawItems
  fullName: DebugDrawUtils.DebugDrawItems
  spec.csharp:
  - uid: DebugDrawUtils
    name: DebugDrawUtils
    href: DebugDrawUtils.html
  - name: .
  - uid: DebugDrawUtils.DebugDrawItems
    name: DebugDrawItems
    href: DebugDrawUtils.DebugDrawItems.html
  spec.vb:
  - uid: DebugDrawUtils
    name: DebugDrawUtils
    href: DebugDrawUtils.html
  - name: .
  - uid: DebugDrawUtils.DebugDrawItems
    name: DebugDrawItems
    href: DebugDrawUtils.DebugDrawItems.html
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: DebugDrawUtils.DebugDrawMesh.ChangeGroup*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.ChangeGroup
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.ChangeGroup``1(``0,System.String)
  name: ChangeGroup
  nameWithType: DebugDrawMesh.ChangeGroup
  fullName: DebugDrawUtils.DebugDrawMesh.ChangeGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: DebugDrawUtils.DebugDrawMesh.Remove*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Remove
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Remove(DebugDrawUtils.DebugDrawItems.BaseItem)
  name: Remove
  nameWithType: DebugDrawMesh.Remove
  fullName: DebugDrawUtils.DebugDrawMesh.Remove
- uid: DebugDrawUtils.DebugDrawItems.BaseItem
  commentId: T:DebugDrawUtils.DebugDrawItems.BaseItem
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.BaseItem.html
  name: BaseItem
  nameWithType: BaseItem
  fullName: DebugDrawUtils.DebugDrawItems.BaseItem
- uid: DebugDrawUtils.DebugDrawMesh.Clear*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Clear
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Clear
  name: Clear
  nameWithType: DebugDrawMesh.Clear
  fullName: DebugDrawUtils.DebugDrawMesh.Clear
- uid: DebugDrawUtils.DebugDrawMesh.ClearMesh*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.ClearMesh
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.ClearMesh
  name: ClearMesh
  nameWithType: DebugDrawMesh.ClearMesh
  fullName: DebugDrawUtils.DebugDrawMesh.ClearMesh
- uid: DebugDrawUtils.DebugDrawMesh.ClearAll*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.ClearAll
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.ClearAll
  name: ClearAll
  nameWithType: DebugDrawMesh.ClearAll
  fullName: DebugDrawUtils.DebugDrawMesh.ClearAll
- uid: DebugDrawUtils.DebugDrawMesh.ClearGroup*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.ClearGroup
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.ClearGroup(System.String)
  name: ClearGroup
  nameWithType: DebugDrawMesh.ClearGroup
  fullName: DebugDrawUtils.DebugDrawMesh.ClearGroup
- uid: DebugDrawUtils.DebugDrawMesh.Update*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Update
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Update
  name: Update
  nameWithType: DebugDrawMesh.Update
  fullName: DebugDrawUtils.DebugDrawMesh.Update
- uid: DebugDrawUtils.DebugDrawMesh.vertices
  commentId: F:DebugDrawUtils.DebugDrawMesh.vertices
  parent: DebugDrawUtils.DebugDrawMesh
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.vertices
  name: vertices
  nameWithType: DebugDrawMesh.vertices
  fullName: DebugDrawUtils.DebugDrawMesh.vertices
- uid: DebugDrawUtils.DebugDrawMesh.colours
  commentId: F:DebugDrawUtils.DebugDrawMesh.colours
  parent: DebugDrawUtils.DebugDrawMesh
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.colours
  name: colours
  nameWithType: DebugDrawMesh.colours
  fullName: DebugDrawUtils.DebugDrawMesh.colours
- uid: DebugDrawUtils.DebugDrawMesh.indices
  commentId: F:DebugDrawUtils.DebugDrawMesh.indices
  parent: DebugDrawUtils.DebugDrawMesh
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.indices
  name: indices
  nameWithType: DebugDrawMesh.indices
  fullName: DebugDrawUtils.DebugDrawMesh.indices
- uid: DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  commentId: M:DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  parent: DebugDrawUtils.DebugDrawMesh
  isExternal: true
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  name: UpdateMesh(Mesh)
  nameWithType: DebugDrawMesh.UpdateMesh(Mesh)
  fullName: DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  spec.csharp:
  - uid: DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
    name: UpdateMesh
    href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  - name: (
  - uid: UnityEngine.Mesh
    name: Mesh
    isExternal: true
  - name: )
  spec.vb:
  - uid: DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
    name: UpdateMesh
    href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  - name: (
  - uid: UnityEngine.Mesh
    name: Mesh
    isExternal: true
  - name: )
- uid: DebugDrawUtils.DebugDrawMesh.Build*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Build
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Build
  name: Build
  nameWithType: DebugDrawMesh.Build
  fullName: DebugDrawUtils.DebugDrawMesh.Build
- uid: DebugDrawUtils.DebugDrawMesh.CreateMesh
  commentId: M:DebugDrawUtils.DebugDrawMesh.CreateMesh
  parent: DebugDrawUtils.DebugDrawMesh
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.CreateMesh
  name: CreateMesh()
  nameWithType: DebugDrawMesh.CreateMesh()
  fullName: DebugDrawUtils.DebugDrawMesh.CreateMesh()
  spec.csharp:
  - uid: DebugDrawUtils.DebugDrawMesh.CreateMesh
    name: CreateMesh
    href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.CreateMesh
  - name: (
  - name: )
  spec.vb:
  - uid: DebugDrawUtils.DebugDrawMesh.CreateMesh
    name: CreateMesh
    href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.CreateMesh
  - name: (
  - name: )
- uid: DebugDrawUtils.DebugDrawMesh.UpdateMesh*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.UpdateMesh
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.UpdateMesh(UnityEngine.Mesh)
  name: UpdateMesh
  nameWithType: DebugDrawMesh.UpdateMesh
  fullName: DebugDrawUtils.DebugDrawMesh.UpdateMesh
- uid: UnityEngine.Mesh
  commentId: T:UnityEngine.Mesh
  parent: UnityEngine
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: UnityEngine.Mesh
- uid: DebugDrawUtils.DebugDrawMesh.vertexIndex
  commentId: F:DebugDrawUtils.DebugDrawMesh.vertexIndex
  parent: DebugDrawUtils.DebugDrawMesh
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.vertexIndex
  name: vertexIndex
  nameWithType: DebugDrawMesh.vertexIndex
  fullName: DebugDrawUtils.DebugDrawMesh.vertexIndex
- uid: DebugDrawUtils.DebugDrawMesh.AddIndex*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddIndex
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddIndex
  name: AddIndex
  nameWithType: DebugDrawMesh.AddIndex
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndex
- uid: DebugDrawUtils.DebugDrawMesh.AddIndexX2*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddIndexX2
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddIndexX2
  name: AddIndexX2
  nameWithType: DebugDrawMesh.AddIndexX2
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndexX2
- uid: DebugDrawUtils.DebugDrawMesh.AddIndexX3*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddIndexX3
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddIndexX3
  name: AddIndexX3
  nameWithType: DebugDrawMesh.AddIndexX3
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndexX3
- uid: DebugDrawUtils.DebugDrawMesh.AddIndexX4*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddIndexX4
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddIndexX4
  name: AddIndexX4
  nameWithType: DebugDrawMesh.AddIndexX4
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndexX4
- uid: DebugDrawUtils.DebugDrawMesh.AddIndices*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddIndices
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddIndices(System.Int32,System.Int32)
  name: AddIndices
  nameWithType: DebugDrawMesh.AddIndices
  fullName: DebugDrawUtils.DebugDrawMesh.AddIndices
- uid: DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex(System.Int32)
  name: AddPreviousVertexIndex
  nameWithType: DebugDrawMesh.AddPreviousVertexIndex
  fullName: DebugDrawUtils.DebugDrawMesh.AddPreviousVertexIndex
- uid: DebugDrawUtils.DebugDrawMesh.AddTriangleLineIndices*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddTriangleLineIndices
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddTriangleLineIndices
  name: AddTriangleLineIndices
  nameWithType: DebugDrawMesh.AddTriangleLineIndices
  fullName: DebugDrawUtils.DebugDrawMesh.AddTriangleLineIndices
- uid: DebugDrawUtils.DebugDrawMesh.AddQuadLineIndices*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddQuadLineIndices
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddQuadLineIndices
  name: AddQuadLineIndices
  nameWithType: DebugDrawMesh.AddQuadLineIndices
  fullName: DebugDrawUtils.DebugDrawMesh.AddQuadLineIndices
- uid: DebugDrawUtils.DebugDrawMesh.AddColor*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddColor
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddColor(UnityEngine.Color@)
  name: AddColor
  nameWithType: DebugDrawMesh.AddColor
  fullName: DebugDrawUtils.DebugDrawMesh.AddColor
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: DebugDrawUtils.DebugDrawMesh.AddColorX2*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddColorX2
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddColorX2(UnityEngine.Color@)
  name: AddColorX2
  nameWithType: DebugDrawMesh.AddColorX2
  fullName: DebugDrawUtils.DebugDrawMesh.AddColorX2
- uid: DebugDrawUtils.DebugDrawMesh.AddColorX3*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddColorX3
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddColorX3(UnityEngine.Color@)
  name: AddColorX3
  nameWithType: DebugDrawMesh.AddColorX3
  fullName: DebugDrawUtils.DebugDrawMesh.AddColorX3
- uid: DebugDrawUtils.DebugDrawMesh.AddColorX4*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddColorX4
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddColorX4(UnityEngine.Color@)
  name: AddColorX4
  nameWithType: DebugDrawMesh.AddColorX4
  fullName: DebugDrawUtils.DebugDrawMesh.AddColorX4
- uid: DebugDrawUtils.DebugDrawMesh.AddColors*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddColors
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddColors(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Color@,UnityEngine.Color@)
  name: AddColors
  nameWithType: DebugDrawMesh.AddColors
  fullName: DebugDrawUtils.DebugDrawMesh.AddColors
- uid: DebugDrawUtils.DebugDrawMesh.AddVertex*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddVertex
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddVertex(UnityEngine.Vector3@)
  name: AddVertex
  nameWithType: DebugDrawMesh.AddVertex
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertex
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: DebugDrawUtils.DebugDrawMesh.AddLine*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddLine
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddLine(UnityEngine.Vector3@,UnityEngine.Vector3@)
  name: AddLine
  nameWithType: DebugDrawMesh.AddLine
  fullName: DebugDrawUtils.DebugDrawMesh.AddLine
- uid: UnityEngine.Matrix4x4
  commentId: T:UnityEngine.Matrix4x4
  parent: UnityEngine
  isExternal: true
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: UnityEngine.Matrix4x4
- uid: DebugDrawUtils.DebugDrawMesh.AddVertices*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddVertices
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddVertices(DebugDrawUtils.DebugDrawItems.BaseItem,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  name: AddVertices
  nameWithType: DebugDrawMesh.AddVertices
  fullName: DebugDrawUtils.DebugDrawMesh.AddVertices
- uid: DebugDrawUtils.DebugDrawMesh.AddLines*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddLines
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddLines(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  name: AddLines
  nameWithType: DebugDrawMesh.AddLines
  fullName: DebugDrawUtils.DebugDrawMesh.AddLines
- uid: DebugDrawUtils.DebugDrawMesh.AddPoints*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.AddPoints
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.AddPoints(DebugDrawUtils.DebugDrawItems.BaseItem,System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color})
  name: AddPoints
  nameWithType: DebugDrawMesh.AddPoints
  fullName: DebugDrawUtils.DebugDrawMesh.AddPoints
- uid: DebugDrawUtils.DebugDrawMesh.Arrow*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Arrow
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,DebugDrawUtils.DebugDrawItems.ArrowShape,DebugDrawUtils.DebugDrawItems.ArrowShape,System.Boolean,System.Boolean,System.Single)
  name: Arrow
  nameWithType: DebugDrawMesh.Arrow
  fullName: DebugDrawUtils.DebugDrawMesh.Arrow
- uid: DebugDrawUtils.DebugDrawItems.ArrowShape
  commentId: T:DebugDrawUtils.DebugDrawItems.ArrowShape
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.ArrowShape.html
  name: ArrowShape
  nameWithType: ArrowShape
  fullName: DebugDrawUtils.DebugDrawItems.ArrowShape
- uid: DebugDrawUtils.DebugDrawItems.Arrow
  commentId: T:DebugDrawUtils.DebugDrawItems.Arrow
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Arrow.html
  name: Arrow
  nameWithType: Arrow
  fullName: DebugDrawUtils.DebugDrawItems.Arrow
- uid: DebugDrawUtils.DebugDrawMesh.Axes*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Axes
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean,System.Single)
  name: Axes
  nameWithType: DebugDrawMesh.Axes
  fullName: DebugDrawUtils.DebugDrawMesh.Axes
- uid: UnityEngine.Quaternion
  commentId: T:UnityEngine.Quaternion
  parent: UnityEngine
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: UnityEngine.Quaternion
- uid: DebugDrawUtils.DebugDrawItems.Axes
  commentId: T:DebugDrawUtils.DebugDrawItems.Axes
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Axes.html
  name: Axes
  nameWithType: Axes
  fullName: DebugDrawUtils.DebugDrawItems.Axes
- uid: DebugDrawUtils.DebugDrawMesh.Box*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Box
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Box(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  name: Box
  nameWithType: DebugDrawMesh.Box
  fullName: DebugDrawUtils.DebugDrawMesh.Box
- uid: DebugDrawUtils.DebugDrawItems.Box
  commentId: T:DebugDrawUtils.DebugDrawItems.Box
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Box.html
  name: Box
  nameWithType: Box
  fullName: DebugDrawUtils.DebugDrawItems.Box
- uid: DebugDrawUtils.DebugDrawMesh.Capsule*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Capsule
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Capsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  name: Capsule
  nameWithType: DebugDrawMesh.Capsule
  fullName: DebugDrawUtils.DebugDrawMesh.Capsule
- uid: DebugDrawUtils.DebugDrawItems.Capsule
  commentId: T:DebugDrawUtils.DebugDrawItems.Capsule
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Capsule.html
  name: Capsule
  nameWithType: Capsule
  fullName: DebugDrawUtils.DebugDrawItems.Capsule
- uid: DebugDrawUtils.DebugDrawMesh.WireCapsule*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.WireCapsule
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.WireCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  name: WireCapsule
  nameWithType: DebugDrawMesh.WireCapsule
  fullName: DebugDrawUtils.DebugDrawMesh.WireCapsule
- uid: DebugDrawUtils.DebugDrawMesh.Cone*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Cone
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Cone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  name: Cone
  nameWithType: DebugDrawMesh.Cone
  fullName: DebugDrawUtils.DebugDrawMesh.Cone
- uid: DebugDrawUtils.DebugDrawItems.Cone
  commentId: T:DebugDrawUtils.DebugDrawItems.Cone
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Cone.html
  name: Cone
  nameWithType: Cone
  fullName: DebugDrawUtils.DebugDrawItems.Cone
- uid: DebugDrawUtils.DebugDrawMesh.WireCone*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.WireCone
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.WireCone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  name: WireCone
  nameWithType: DebugDrawMesh.WireCone
  fullName: DebugDrawUtils.DebugDrawMesh.WireCone
- uid: DebugDrawUtils.DebugDrawMesh.Cylinder*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Cylinder
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  name: Cylinder
  nameWithType: DebugDrawMesh.Cylinder
  fullName: DebugDrawUtils.DebugDrawMesh.Cylinder
- uid: DebugDrawUtils.DebugDrawItems.Cylinder
  commentId: T:DebugDrawUtils.DebugDrawItems.Cylinder
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Cylinder.html
  name: Cylinder
  nameWithType: Cylinder
  fullName: DebugDrawUtils.DebugDrawItems.Cylinder
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: DebugDrawUtils.DebugDrawMesh.WireCylinder*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.WireCylinder
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  name: WireCylinder
  nameWithType: DebugDrawMesh.WireCylinder
  fullName: DebugDrawUtils.DebugDrawMesh.WireCylinder
- uid: DebugDrawUtils.DebugDrawMesh.Dot*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Dot
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  name: Dot
  nameWithType: DebugDrawMesh.Dot
  fullName: DebugDrawUtils.DebugDrawMesh.Dot
- uid: DebugDrawUtils.DebugDrawItems.Dot
  commentId: T:DebugDrawUtils.DebugDrawItems.Dot
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Dot.html
  name: Dot
  nameWithType: Dot
  fullName: DebugDrawUtils.DebugDrawItems.Dot
- uid: DebugDrawUtils.DebugDrawMesh.Dots*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Dots
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Int32,System.Single)
  name: Dots
  nameWithType: DebugDrawMesh.Dots
  fullName: DebugDrawUtils.DebugDrawMesh.Dots
- uid: System.Collections.Generic.List{System.Single}
  commentId: T:System.Collections.Generic.List{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<float>
  nameWithType: List<float>
  fullName: System.Collections.Generic.List<float>
  nameWithType.vb: List(Of Single)
  fullName.vb: System.Collections.Generic.List(Of Single)
  name.vb: List(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: DebugDrawUtils.DebugDrawItems.Dots
  commentId: T:DebugDrawUtils.DebugDrawItems.Dots
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Dots.html
  name: Dots
  nameWithType: Dots
  fullName: DebugDrawUtils.DebugDrawItems.Dots
- uid: DebugDrawUtils.DebugDrawMesh.Ellipse*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Ellipse
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Ellipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  name: Ellipse
  nameWithType: DebugDrawMesh.Ellipse
  fullName: DebugDrawUtils.DebugDrawMesh.Ellipse
- uid: DebugDrawUtils.DebugDrawItems.DrawEllipseAxes
  commentId: T:DebugDrawUtils.DebugDrawItems.DrawEllipseAxes
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.DrawEllipseAxes.html
  name: DrawEllipseAxes
  nameWithType: DrawEllipseAxes
  fullName: DebugDrawUtils.DebugDrawItems.DrawEllipseAxes
- uid: DebugDrawUtils.DebugDrawItems.Ellipse
  commentId: T:DebugDrawUtils.DebugDrawItems.Ellipse
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Ellipse.html
  name: Ellipse
  nameWithType: Ellipse
  fullName: DebugDrawUtils.DebugDrawItems.Ellipse
- uid: DebugDrawUtils.DebugDrawMesh.FillEllipse*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.FillEllipse
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.FillEllipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  name: FillEllipse
  nameWithType: DebugDrawMesh.FillEllipse
  fullName: DebugDrawUtils.DebugDrawMesh.FillEllipse
- uid: DebugDrawUtils.DebugDrawMesh.Arc*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Arc
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Arc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawUtils.DebugDrawItems.DrawArcSegments,DebugDrawUtils.DebugDrawItems.DrawEllipseAxes,System.Single)
  name: Arc
  nameWithType: DebugDrawMesh.Arc
  fullName: DebugDrawUtils.DebugDrawMesh.Arc
- uid: DebugDrawUtils.DebugDrawItems.DrawArcSegments
  commentId: T:DebugDrawUtils.DebugDrawItems.DrawArcSegments
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.DrawArcSegments.html
  name: DrawArcSegments
  nameWithType: DrawArcSegments
  fullName: DebugDrawUtils.DebugDrawItems.DrawArcSegments
- uid: DebugDrawUtils.DebugDrawMesh.FillArc*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.FillArc
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.FillArc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  name: FillArc
  nameWithType: DebugDrawMesh.FillArc
  fullName: DebugDrawUtils.DebugDrawMesh.FillArc
- uid: DebugDrawUtils.DebugDrawMesh.Line*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Line
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  name: Line
  nameWithType: DebugDrawMesh.Line
  fullName: DebugDrawUtils.DebugDrawMesh.Line
- uid: DebugDrawUtils.DebugDrawMesh.Line3D*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Line3D
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)
  name: Line3D
  nameWithType: DebugDrawMesh.Line3D
  fullName: DebugDrawUtils.DebugDrawMesh.Line3D
- uid: DebugDrawUtils.DebugDrawItems.Line3D
  commentId: T:DebugDrawUtils.DebugDrawItems.Line3D
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Line3D.html
  name: Line3D
  nameWithType: Line3D
  fullName: DebugDrawUtils.DebugDrawItems.Line3D
- uid: DebugDrawUtils.DebugDrawMesh.Lines*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Lines
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Lines(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  name: Lines
  nameWithType: DebugDrawMesh.Lines
  fullName: DebugDrawUtils.DebugDrawMesh.Lines
- uid: DebugDrawUtils.DebugDrawItems.Lines
  commentId: T:DebugDrawUtils.DebugDrawItems.Lines
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Lines.html
  name: Lines
  nameWithType: Lines
  fullName: DebugDrawUtils.DebugDrawItems.Lines
- uid: DebugDrawUtils.DebugDrawMesh.Lines3D*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Lines3D
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  name: Lines3D
  nameWithType: DebugDrawMesh.Lines3D
  fullName: DebugDrawUtils.DebugDrawMesh.Lines3D
- uid: DebugDrawUtils.DebugDrawItems.Lines3D
  commentId: T:DebugDrawUtils.DebugDrawItems.Lines3D
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Lines3D.html
  name: Lines3D
  nameWithType: Lines3D
  fullName: DebugDrawUtils.DebugDrawItems.Lines3D
- uid: System.Nullable{UnityEngine.Vector3}
  commentId: T:System.Nullable{UnityEngine.Vector3}
  parent: System
  definition: System.Nullable`1
  name: Vector3?
  nameWithType: Vector3?
  fullName: UnityEngine.Vector3?
  spec.csharp:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: DebugDrawUtils.DebugDrawMesh.Mesh*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Mesh
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Collections.Generic.List{System.Int32},System.Single)
  name: Mesh
  nameWithType: DebugDrawMesh.Mesh
  fullName: DebugDrawUtils.DebugDrawMesh.Mesh
- uid: DebugDrawUtils.DebugDrawItems.MeshItem
  commentId: T:DebugDrawUtils.DebugDrawItems.MeshItem
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.MeshItem.html
  name: MeshItem
  nameWithType: MeshItem
  fullName: DebugDrawUtils.DebugDrawItems.MeshItem
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: UnityEngine.Color?
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: DebugDrawUtils.DebugDrawMesh.Point*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Point
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Point(UnityEngine.Vector3,UnityEngine.Color,System.Single)
  name: Point
  nameWithType: DebugDrawMesh.Point
  fullName: DebugDrawUtils.DebugDrawMesh.Point
- uid: DebugDrawUtils.DebugDrawItems.Point
  commentId: T:DebugDrawUtils.DebugDrawItems.Point
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Point.html
  name: Point
  nameWithType: Point
  fullName: DebugDrawUtils.DebugDrawItems.Point
- uid: DebugDrawUtils.DebugDrawMesh.Points*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Points
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Points(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  name: Points
  nameWithType: DebugDrawMesh.Points
  fullName: DebugDrawUtils.DebugDrawMesh.Points
- uid: DebugDrawUtils.DebugDrawItems.Points
  commentId: T:DebugDrawUtils.DebugDrawItems.Points
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Points.html
  name: Points
  nameWithType: Points
  fullName: DebugDrawUtils.DebugDrawItems.Points
- uid: DebugDrawUtils.DebugDrawMesh.Quad*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Quad
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  name: Quad
  nameWithType: DebugDrawMesh.Quad
  fullName: DebugDrawUtils.DebugDrawMesh.Quad
- uid: DebugDrawUtils.DebugDrawItems.Quad
  commentId: T:DebugDrawUtils.DebugDrawItems.Quad
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Quad.html
  name: Quad
  nameWithType: Quad
  fullName: DebugDrawUtils.DebugDrawItems.Quad
- uid: DebugDrawUtils.DebugDrawMesh.FillQuad*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.FillQuad
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  name: FillQuad
  nameWithType: DebugDrawMesh.FillQuad
  fullName: DebugDrawUtils.DebugDrawMesh.FillQuad
- uid: DebugDrawUtils.DebugDrawMesh.FillRectangle*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.FillRectangle
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.FillRectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  name: FillRectangle
  nameWithType: DebugDrawMesh.FillRectangle
  fullName: DebugDrawUtils.DebugDrawMesh.FillRectangle
- uid: DebugDrawUtils.DebugDrawItems.Rectangle
  commentId: T:DebugDrawUtils.DebugDrawItems.Rectangle
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Rectangle.html
  name: Rectangle
  nameWithType: Rectangle
  fullName: DebugDrawUtils.DebugDrawItems.Rectangle
- uid: DebugDrawUtils.DebugDrawMesh.Rectangle*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Rectangle
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Rectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  name: Rectangle
  nameWithType: DebugDrawMesh.Rectangle
  fullName: DebugDrawUtils.DebugDrawMesh.Rectangle
- uid: DebugDrawUtils.DebugDrawMesh.Sphere*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Sphere
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Sphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  name: Sphere
  nameWithType: DebugDrawMesh.Sphere
  fullName: DebugDrawUtils.DebugDrawMesh.Sphere
- uid: DebugDrawUtils.DebugDrawItems.Sphere
  commentId: T:DebugDrawUtils.DebugDrawItems.Sphere
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Sphere.html
  name: Sphere
  nameWithType: Sphere
  fullName: DebugDrawUtils.DebugDrawItems.Sphere
- uid: DebugDrawUtils.DebugDrawMesh.WireSphere*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.WireSphere
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.WireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  name: WireSphere
  nameWithType: DebugDrawMesh.WireSphere
  fullName: DebugDrawUtils.DebugDrawMesh.WireSphere
- uid: DebugDrawUtils.DebugDrawMesh.Text*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Text
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Text(UnityEngine.Vector3,System.String,UnityEngine.Color,UnityEngine.TextAnchor,System.Single,System.Single)
  name: Text
  nameWithType: DebugDrawMesh.Text
  fullName: DebugDrawUtils.DebugDrawMesh.Text
- uid: UnityEngine.TextAnchor
  commentId: T:UnityEngine.TextAnchor
  parent: UnityEngine
  isExternal: true
  name: TextAnchor
  nameWithType: TextAnchor
  fullName: UnityEngine.TextAnchor
- uid: DebugDrawUtils.DebugDrawItems.Text
  commentId: T:DebugDrawUtils.DebugDrawItems.Text
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Text.html
  name: Text
  nameWithType: Text
  fullName: DebugDrawUtils.DebugDrawItems.Text
- uid: DebugDrawUtils.DebugDrawMesh.Triangle*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.Triangle
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  name: Triangle
  nameWithType: DebugDrawMesh.Triangle
  fullName: DebugDrawUtils.DebugDrawMesh.Triangle
- uid: DebugDrawUtils.DebugDrawItems.Triangle
  commentId: T:DebugDrawUtils.DebugDrawItems.Triangle
  parent: DebugDrawUtils.DebugDrawItems
  href: DebugDrawUtils.DebugDrawItems.Triangle.html
  name: Triangle
  nameWithType: Triangle
  fullName: DebugDrawUtils.DebugDrawItems.Triangle
- uid: DebugDrawUtils.DebugDrawMesh.FillTriangle*
  commentId: Overload:DebugDrawUtils.DebugDrawMesh.FillTriangle
  href: DebugDrawUtils.DebugDrawMesh.html#DebugDrawUtils.DebugDrawMesh.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  name: FillTriangle
  nameWithType: DebugDrawMesh.FillTriangle
  fullName: DebugDrawUtils.DebugDrawMesh.FillTriangle
