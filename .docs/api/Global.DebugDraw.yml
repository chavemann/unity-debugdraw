### YamlMime:ManagedReference
items:
- uid: Global.DebugDraw
  commentId: T:Global.DebugDraw
  id: DebugDraw
  parent: Global
  children:
  - Global.DebugDraw.Arc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawItems.DrawArcSegments,DebugDrawItems.DrawEllipseAxes,System.Single)
  - Global.DebugDraw.Arc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawItems.DrawArcSegments,DebugDrawItems.DrawEllipseAxes,System.Single)
  - Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  - Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  - Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  - Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,DebugDrawItems.ArrowShape,DebugDrawItems.ArrowShape,System.Boolean,System.Boolean,System.Single)
  - Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  - Global.DebugDraw.AutoResolution(System.Single,System.Single,System.Int32,System.Int32,System.Int32)
  - Global.DebugDraw.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Single)
  - Global.DebugDraw.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean,System.Single)
  - Global.DebugDraw.back
  - Global.DebugDraw.Box(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Box(UnityEngine.Vector3,System.Single,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  - Global.DebugDraw.CalculateFrustumHeight(System.Single)
  - Global.DebugDraw.cam
  - Global.DebugDraw.camForward
  - Global.DebugDraw.camFOV
  - Global.DebugDraw.camFOVAngle
  - Global.DebugDraw.camOrthographic
  - Global.DebugDraw.camOrthoSize
  - Global.DebugDraw.camPosition
  - Global.DebugDraw.camRight
  - Global.DebugDraw.camTransform
  - Global.DebugDraw.camUp
  - Global.DebugDraw.Capsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.Clear
  - Global.DebugDraw.color
  - Global.DebugDraw.colorIdentity
  - Global.DebugDraw.Cone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  - Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - Global.DebugDraw.DefaultLayer
  - Global.DebugDraw.DistanceFromCamera(UnityEngine.Vector3@)
  - Global.DebugDraw.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Vector3,System.Int32,System.Single)
  - Global.DebugDraw.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Int32,System.Single)
  - Global.DebugDraw.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},UnityEngine.Vector3,System.Int32,System.Single)
  - Global.DebugDraw.down
  - Global.DebugDraw.Ellipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawItems.DrawEllipseAxes,System.Single)
  - Global.DebugDraw.Ellipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawItems.DrawEllipseAxes,System.Single)
  - Global.DebugDraw.FillArc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.FillArc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.FillEllipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.FillEllipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  - Global.DebugDraw.FillRectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.FillRectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  - Global.DebugDraw.FindAxisVectors(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  - Global.DebugDraw.FindBestAxisVectors(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  - Global.DebugDraw.FindPerpendicular(UnityEngine.Vector3@,UnityEngine.Vector3@)
  - Global.DebugDraw.forward
  - Global.DebugDraw.GetTime
  - Global.DebugDraw.GetTime(System.Single)
  - Global.DebugDraw.InitCamera(UnityEngine.Camera)
  - Global.DebugDraw.isActive
  - Global.DebugDraw.isPlaying
  - Global.DebugDraw.left
  - Global.DebugDraw.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  - Global.DebugDraw.lineMesh
  - Global.DebugDraw.Lines(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  - Global.DebugDraw.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  - Global.DebugDraw.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  - Global.DebugDraw.matrixIdentity
  - Global.DebugDraw.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},UnityEngine.Color,System.Single)
  - Global.DebugDraw.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Collections.Generic.List{System.Int32},System.Single)
  - Global.DebugDraw.Mesh(UnityEngine.Mesh,System.Nullable{UnityEngine.Color},System.Single)
  - Global.DebugDraw.minTextSize
  - Global.DebugDraw.Point(UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.pointMesh
  - Global.DebugDraw.Points(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  - Global.DebugDraw.PopState
  - Global.DebugDraw.positionIdentity
  - Global.DebugDraw.PushState
  - Global.DebugDraw.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Ray(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.RaycastHit,System.Single,System.Single,System.Single)
  - Global.DebugDraw.rayHitColor
  - Global.DebugDraw.rayMissColor
  - Global.DebugDraw.rayNormalColor
  - Global.DebugDraw.Rectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Rectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.right
  - Global.DebugDraw.rotationIdentity
  - Global.DebugDraw.scaleIdentity
  - Global.DebugDraw.SetCulling(UnityEngine.Rendering.CullMode)
  - Global.DebugDraw.SetDepthTesting(System.Boolean)
  - Global.DebugDraw.SetDepthTesting(System.Boolean,System.Boolean)
  - Global.DebugDraw.SetInvertColours(System.Boolean)
  - Global.DebugDraw.Sphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.Text(UnityEngine.Vector3,System.String,UnityEngine.Color,UnityEngine.TextAnchor,System.Single,System.Single)
  - Global.DebugDraw.Text(UnityEngine.Vector3,System.String,UnityEngine.TextAnchor,System.Single,System.Single)
  - Global.DebugDraw.textBaseWorldDistance
  - Global.DebugDraw.textShadowColor
  - Global.DebugDraw.TextStyle
  - Global.DebugDraw.transform
  - Global.DebugDraw.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  - Global.DebugDraw.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  - Global.DebugDraw.triangleMesh
  - Global.DebugDraw.up
  - Global.DebugDraw.useFixedUpdate
  - Global.DebugDraw.WireCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.WireCone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  - Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  - Global.DebugDraw.WireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  - Global.DebugDraw.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  langs:
  - csharp
  - vb
  name: DebugDraw
  nameWithType: DebugDraw
  fullName: DebugDraw
  type: Class
  source:
    id: DebugDraw
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawTimer.cs
    startLine: 8
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>\nA static class that provides various methods for drawing debug visuals.\nThis class should be usable with no setup - simply include the package and call the methods.\n</p>\n<p>\nThe following  compiler directives are available:\n</p>\n<ul><li><strong>DEBUG_DRAW_OFF:</strong> Set this flag to disable the global static DebugDraw instance.\n	When set, the static DebugDraw methods should not be used, but won&apos;t throw errors.\n</li></ul>\n"
  example: []
  syntax:
    content: public static class DebugDraw
    content.vb: Public Module DebugDraw
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Global.DebugDraw.DefaultLayer
  commentId: F:Global.DebugDraw.DefaultLayer
  id: DefaultLayer
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: DefaultLayer
  nameWithType: DebugDraw.DefaultLayer
  fullName: DebugDraw.DefaultLayer
  type: Field
  source:
    id: DefaultLayer
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 44
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static readonly int DefaultLayer
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly DefaultLayer As Integer
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.DebugDraw.colorIdentity
  commentId: F:Global.DebugDraw.colorIdentity
  id: colorIdentity
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: colorIdentity
  nameWithType: DebugDraw.colorIdentity
  fullName: DebugDraw.colorIdentity
  type: Field
  source:
    id: colorIdentity
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 45
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Color colorIdentity
    return:
      type: UnityEngine.Color
    content.vb: Public Shared colorIdentity As Color
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.matrixIdentity
  commentId: F:Global.DebugDraw.matrixIdentity
  id: matrixIdentity
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: matrixIdentity
  nameWithType: DebugDraw.matrixIdentity
  fullName: DebugDraw.matrixIdentity
  type: Field
  source:
    id: matrixIdentity
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 46
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Matrix4x4 matrixIdentity
    return:
      type: UnityEngine.Matrix4x4
    content.vb: Public Shared matrixIdentity As Matrix4x4
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.rotationIdentity
  commentId: F:Global.DebugDraw.rotationIdentity
  id: rotationIdentity
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: rotationIdentity
  nameWithType: DebugDraw.rotationIdentity
  fullName: DebugDraw.rotationIdentity
  type: Field
  source:
    id: rotationIdentity
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 47
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Quaternion rotationIdentity
    return:
      type: UnityEngine.Quaternion
    content.vb: Public Shared rotationIdentity As Quaternion
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.positionIdentity
  commentId: F:Global.DebugDraw.positionIdentity
  id: positionIdentity
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: positionIdentity
  nameWithType: DebugDraw.positionIdentity
  fullName: DebugDraw.positionIdentity
  type: Field
  source:
    id: positionIdentity
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 48
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 positionIdentity
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared positionIdentity As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.scaleIdentity
  commentId: F:Global.DebugDraw.scaleIdentity
  id: scaleIdentity
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: scaleIdentity
  nameWithType: DebugDraw.scaleIdentity
  fullName: DebugDraw.scaleIdentity
  type: Field
  source:
    id: scaleIdentity
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 49
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 scaleIdentity
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared scaleIdentity As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.up
  commentId: F:Global.DebugDraw.up
  id: up
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: up
  nameWithType: DebugDraw.up
  fullName: DebugDraw.up
  type: Field
  source:
    id: up
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 50
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 up
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared up As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.down
  commentId: F:Global.DebugDraw.down
  id: down
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: down
  nameWithType: DebugDraw.down
  fullName: DebugDraw.down
  type: Field
  source:
    id: down
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 51
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 down
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared down As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.right
  commentId: F:Global.DebugDraw.right
  id: right
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: right
  nameWithType: DebugDraw.right
  fullName: DebugDraw.right
  type: Field
  source:
    id: right
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 52
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 right
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared right As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.left
  commentId: F:Global.DebugDraw.left
  id: left
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: left
  nameWithType: DebugDraw.left
  fullName: DebugDraw.left
  type: Field
  source:
    id: left
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 53
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 left
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared left As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.forward
  commentId: F:Global.DebugDraw.forward
  id: forward
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: forward
  nameWithType: DebugDraw.forward
  fullName: DebugDraw.forward
  type: Field
  source:
    id: forward
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 54
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 forward
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared forward As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.back
  commentId: F:Global.DebugDraw.back
  id: back
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: back
  nameWithType: DebugDraw.back
  fullName: DebugDraw.back
  type: Field
  source:
    id: back
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 55
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 back
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared back As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.TextStyle
  commentId: F:Global.DebugDraw.TextStyle
  id: TextStyle
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: TextStyle
  nameWithType: DebugDraw.TextStyle
  fullName: DebugDraw.TextStyle
  type: Field
  source:
    id: TextStyle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 87
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nModify the default properties of all Text.\n"
  example: []
  syntax:
    content: public static readonly GUIStyle TextStyle
    return:
      type: UnityEngine.GUIStyle
    content.vb: Public Shared ReadOnly TextStyle As GUIStyle
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.DebugDraw.useFixedUpdate
  commentId: P:Global.DebugDraw.useFixedUpdate
  id: useFixedUpdate
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: useFixedUpdate
  nameWithType: DebugDraw.useFixedUpdate
  fullName: DebugDraw.useFixedUpdate
  type: Property
  source:
    id: useFixedUpdate
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 93
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nShould DebugDraw update itself during FixedUpdate instead of Update.\nShould be set to true if you are running your game logic and using DebugDraw from FixedUpdate.\n"
  example: []
  syntax:
    content: public static bool useFixedUpdate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property useFixedUpdate As Boolean
  overload: Global.DebugDraw.useFixedUpdate*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.isActive
  commentId: P:Global.DebugDraw.isActive
  id: isActive
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: isActive
  nameWithType: DebugDraw.isActive
  fullName: DebugDraw.isActive
  type: Property
  source:
    id: isActive
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 110
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static bool isActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property isActive As Boolean
  overload: Global.DebugDraw.isActive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.DebugDraw.isPlaying
  commentId: P:Global.DebugDraw.isPlaying
  id: isPlaying
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: isPlaying
  nameWithType: DebugDraw.isPlaying
  fullName: DebugDraw.isPlaying
  type: Property
  source:
    id: isPlaying
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 111
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static bool isPlaying { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property isPlaying As Boolean
  overload: Global.DebugDraw.isPlaying*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.DebugDraw.color
  commentId: P:Global.DebugDraw.color
  id: color
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: color
  nameWithType: DebugDraw.color
  fullName: DebugDraw.color
  type: Property
  source:
    id: color
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 117
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nAll item colors will be multiplied by this.\n"
  example: []
  syntax:
    content: public static Color color { get; set; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public Shared Property color As Color
  overload: Global.DebugDraw.color*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.transform
  commentId: P:Global.DebugDraw.transform
  id: transform
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: transform
  nameWithType: DebugDraw.transform
  fullName: DebugDraw.transform
  type: Property
  source:
    id: transform
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 130
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nAll item will be transformed by this.\n"
  example: []
  syntax:
    content: public static Matrix4x4 transform { get; set; }
    parameters: []
    return:
      type: UnityEngine.Matrix4x4
    content.vb: Public Shared Property transform As Matrix4x4
  overload: Global.DebugDraw.transform*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.textShadowColor
  commentId: F:Global.DebugDraw.textShadowColor
  id: textShadowColor
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: textShadowColor
  nameWithType: DebugDraw.textShadowColor
  fullName: DebugDraw.textShadowColor
  type: Field
  source:
    id: textShadowColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 143
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nSet to null for no shadow\n"
  example: []
  syntax:
    content: public static Color? textShadowColor
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public Shared textShadowColor As Color?
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.minTextSize
  commentId: F:Global.DebugDraw.minTextSize
  id: minTextSize
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: minTextSize
  nameWithType: DebugDraw.minTextSize
  fullName: DebugDraw.minTextSize
  type: Field
  source:
    id: minTextSize
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 148
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nText smaller than this size on screen won&apos;t be rendered.\nOnly applicable if <xref href=\"DebugDrawItems.Text.SetUseWorldSize(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> is set.\n"
  example: []
  syntax:
    content: public static float minTextSize
    return:
      type: System.Single
    content.vb: Public Shared minTextSize As Single
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.textBaseWorldDistance
  commentId: F:Global.DebugDraw.textBaseWorldDistance
  id: textBaseWorldDistance
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: textBaseWorldDistance
  nameWithType: DebugDraw.textBaseWorldDistance
  fullName: DebugDraw.textBaseWorldDistance
  type: Field
  source:
    id: textBaseWorldDistance
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 153
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nAt what distance from the camera will text on screen approximately be it&apos;s original size.\nOnly applicable if <xref href=\"DebugDrawItems.Text.SetUseWorldSize(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> is set.\n"
  example: []
  syntax:
    content: public static float textBaseWorldDistance
    return:
      type: System.Single
    content.vb: Public Shared textBaseWorldDistance As Single
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.pointMesh
  commentId: P:Global.DebugDraw.pointMesh
  id: pointMesh
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: pointMesh
  nameWithType: DebugDraw.pointMesh
  fullName: DebugDraw.pointMesh
  type: Property
  source:
    id: pointMesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 155
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static DebugDrawMesh pointMesh { get; }
    parameters: []
    return:
      type: Global.DebugDrawMesh
    content.vb: Public Shared ReadOnly Property pointMesh As DebugDrawMesh
  overload: Global.DebugDraw.pointMesh*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.DebugDraw.lineMesh
  commentId: P:Global.DebugDraw.lineMesh
  id: lineMesh
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: lineMesh
  nameWithType: DebugDraw.lineMesh
  fullName: DebugDraw.lineMesh
  type: Property
  source:
    id: lineMesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 156
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static DebugDrawMesh lineMesh { get; }
    parameters: []
    return:
      type: Global.DebugDrawMesh
    content.vb: Public Shared ReadOnly Property lineMesh As DebugDrawMesh
  overload: Global.DebugDraw.lineMesh*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.DebugDraw.triangleMesh
  commentId: P:Global.DebugDraw.triangleMesh
  id: triangleMesh
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: triangleMesh
  nameWithType: DebugDraw.triangleMesh
  fullName: DebugDraw.triangleMesh
  type: Property
  source:
    id: triangleMesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 157
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static DebugDrawMesh triangleMesh { get; }
    parameters: []
    return:
      type: Global.DebugDrawMesh
    content.vb: Public Shared ReadOnly Property triangleMesh As DebugDrawMesh
  overload: Global.DebugDraw.triangleMesh*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.DebugDraw.cam
  commentId: P:Global.DebugDraw.cam
  id: cam
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: cam
  nameWithType: DebugDraw.cam
  fullName: DebugDraw.cam
  type: Property
  source:
    id: cam
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 171
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Camera cam { get; }
    parameters: []
    return:
      type: UnityEngine.Camera
    content.vb: Public Shared ReadOnly Property cam As Camera
  overload: Global.DebugDraw.cam*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.DebugDraw.camTransform
  commentId: P:Global.DebugDraw.camTransform
  id: camTransform
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: camTransform
  nameWithType: DebugDraw.camTransform
  fullName: DebugDraw.camTransform
  type: Property
  source:
    id: camTransform
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 172
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Transform camTransform { get; }
    parameters: []
    return:
      type: UnityEngine.Transform
    content.vb: Public Shared ReadOnly Property camTransform As Transform
  overload: Global.DebugDraw.camTransform*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.DebugDraw.camPosition
  commentId: F:Global.DebugDraw.camPosition
  id: camPosition
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: camPosition
  nameWithType: DebugDraw.camPosition
  fullName: DebugDraw.camPosition
  type: Field
  source:
    id: camPosition
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 173
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 camPosition
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared camPosition As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.camForward
  commentId: F:Global.DebugDraw.camForward
  id: camForward
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: camForward
  nameWithType: DebugDraw.camForward
  fullName: DebugDraw.camForward
  type: Field
  source:
    id: camForward
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 174
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 camForward
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared camForward As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.camRight
  commentId: F:Global.DebugDraw.camRight
  id: camRight
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: camRight
  nameWithType: DebugDraw.camRight
  fullName: DebugDraw.camRight
  type: Field
  source:
    id: camRight
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 175
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 camRight
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared camRight As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.camUp
  commentId: F:Global.DebugDraw.camUp
  id: camUp
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: camUp
  nameWithType: DebugDraw.camUp
  fullName: DebugDraw.camUp
  type: Field
  source:
    id: camUp
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 176
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Vector3 camUp
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared camUp As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.camFOV
  commentId: F:Global.DebugDraw.camFOV
  id: camFOV
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: camFOV
  nameWithType: DebugDraw.camFOV
  fullName: DebugDraw.camFOV
  type: Field
  source:
    id: camFOV
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 177
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static float camFOV
    return:
      type: System.Single
    content.vb: Public Shared camFOV As Single
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.camOrthographic
  commentId: F:Global.DebugDraw.camOrthographic
  id: camOrthographic
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: camOrthographic
  nameWithType: DebugDraw.camOrthographic
  fullName: DebugDraw.camOrthographic
  type: Field
  source:
    id: camOrthographic
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 178
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static bool camOrthographic
    return:
      type: System.Boolean
    content.vb: Public Shared camOrthographic As Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.camOrthoSize
  commentId: F:Global.DebugDraw.camOrthoSize
  id: camOrthoSize
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: camOrthoSize
  nameWithType: DebugDraw.camOrthoSize
  fullName: DebugDraw.camOrthoSize
  type: Field
  source:
    id: camOrthoSize
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 179
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static float camOrthoSize
    return:
      type: System.Single
    content.vb: Public Shared camOrthoSize As Single
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.camFOVAngle
  commentId: F:Global.DebugDraw.camFOVAngle
  id: camFOVAngle
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: camFOVAngle
  nameWithType: DebugDraw.camFOVAngle
  fullName: DebugDraw.camFOVAngle
  type: Field
  source:
    id: camFOVAngle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 180
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static float camFOVAngle
    return:
      type: System.Single
    content.vb: Public Shared camFOVAngle As Single
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.InitCamera(UnityEngine.Camera)
  commentId: M:Global.DebugDraw.InitCamera(UnityEngine.Camera)
  id: InitCamera(UnityEngine.Camera)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: InitCamera(Camera)
  nameWithType: DebugDraw.InitCamera(Camera)
  fullName: DebugDraw.InitCamera(UnityEngine.Camera)
  type: Method
  source:
    id: InitCamera
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 481
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDebugDraw caches a reference to Camera.main - call this to update that reference.\nThough this happens automatically when when changing scenes etc.\n"
  example: []
  syntax:
    content: public static void InitCamera(Camera newCam = null)
    parameters:
    - id: newCam
      type: UnityEngine.Camera
      description: Leave as null to use Camera.main
    content.vb: Public Shared Sub InitCamera(newCam As Camera = Nothing)
  overload: Global.DebugDraw.InitCamera*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Clear
  commentId: M:Global.DebugDraw.Clear
  id: Clear
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: DebugDraw.Clear()
  fullName: DebugDraw.Clear()
  type: Method
  source:
    id: Clear
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 525
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nClears all debug draw items.\n"
  example: []
  syntax:
    content: public static void Clear()
    content.vb: Public Shared Sub Clear
  overload: Global.DebugDraw.Clear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.SetInvertColours(System.Boolean)
  commentId: M:Global.DebugDraw.SetInvertColours(System.Boolean)
  id: SetInvertColours(System.Boolean)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: SetInvertColours(Boolean)
  nameWithType: DebugDraw.SetInvertColours(Boolean)
  fullName: DebugDraw.SetInvertColours(System.Boolean)
  type: Method
  source:
    id: SetInvertColours
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 550
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nSets the blend mode to invert destination colors for all debug visuals\n"
  example: []
  syntax:
    content: public static void SetInvertColours(bool invert = true)
    parameters:
    - id: invert
      type: System.Boolean
      description: True to invert colours.
    content.vb: Public Shared Sub SetInvertColours(invert As Boolean = True)
  overload: Global.DebugDraw.SetInvertColours*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.SetCulling(UnityEngine.Rendering.CullMode)
  commentId: M:Global.DebugDraw.SetCulling(UnityEngine.Rendering.CullMode)
  id: SetCulling(UnityEngine.Rendering.CullMode)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: SetCulling(CullMode)
  nameWithType: DebugDraw.SetCulling(CullMode)
  fullName: DebugDraw.SetCulling(UnityEngine.Rendering.CullMode)
  type: Method
  source:
    id: SetCulling
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 564
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nSet the culling mode for all debug visuals\n"
  example: []
  syntax:
    content: public static void SetCulling(CullMode mode)
    parameters:
    - id: mode
      type: UnityEngine.Rendering.CullMode
      description: The cull mode.
    content.vb: Public Shared Sub SetCulling(mode As CullMode)
  overload: Global.DebugDraw.SetCulling*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.SetDepthTesting(System.Boolean)
  commentId: M:Global.DebugDraw.SetDepthTesting(System.Boolean)
  id: SetDepthTesting(System.Boolean)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: SetDepthTesting(Boolean)
  nameWithType: DebugDraw.SetDepthTesting(Boolean)
  fullName: DebugDraw.SetDepthTesting(System.Boolean)
  type: Method
  source:
    id: SetDepthTesting
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 578
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nSet the depth testing for all debug visuals\n"
  example: []
  syntax:
    content: public static void SetDepthTesting(bool enabled = true)
    parameters:
    - id: enabled
      type: System.Boolean
      description: Is depth testing enabled.
    content.vb: Public Shared Sub SetDepthTesting(enabled As Boolean = True)
  overload: Global.DebugDraw.SetDepthTesting*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.SetDepthTesting(System.Boolean,System.Boolean)
  commentId: M:Global.DebugDraw.SetDepthTesting(System.Boolean,System.Boolean)
  id: SetDepthTesting(System.Boolean,System.Boolean)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: SetDepthTesting(Boolean, Boolean)
  nameWithType: DebugDraw.SetDepthTesting(Boolean, Boolean)
  fullName: DebugDraw.SetDepthTesting(System.Boolean, System.Boolean)
  type: Method
  source:
    id: SetDepthTesting
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 588
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nSets the depth testing for all debug visual\n"
  example: []
  syntax:
    content: public static void SetDepthTesting(bool write, bool test)
    parameters:
    - id: write
      type: System.Boolean
      description: Enable depth writes.
    - id: test
      type: System.Boolean
      description: Enable depth tests.
    content.vb: Public Shared Sub SetDepthTesting(write As Boolean, test As Boolean)
  overload: Global.DebugDraw.SetDepthTesting*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.PushState
  commentId: M:Global.DebugDraw.PushState
  id: PushState
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: PushState()
  nameWithType: DebugDraw.PushState()
  fullName: DebugDraw.PushState()
  type: Method
  source:
    id: PushState
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 598
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nStores the current state (color and transform) on the stack.\n"
  example: []
  syntax:
    content: public static void PushState()
    content.vb: Public Shared Sub PushState
  overload: Global.DebugDraw.PushState*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.PopState
  commentId: M:Global.DebugDraw.PopState
  id: PopState
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: PopState()
  nameWithType: DebugDraw.PopState()
  fullName: DebugDraw.PopState()
  type: Method
  source:
    id: PopState
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 615
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nRestores the current state from the stack.\n"
  example: []
  syntax:
    content: public static void PopState()
    content.vb: Public Shared Sub PopState
  overload: Global.DebugDraw.PopState*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.GetTime
  commentId: M:Global.DebugDraw.GetTime
  id: GetTime
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: GetTime()
  nameWithType: DebugDraw.GetTime()
  fullName: DebugDraw.GetTime()
  type: Method
  source:
    id: GetTime
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 627
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static float GetTime()
    return:
      type: System.Single
    content.vb: Public Shared Function GetTime As Single
  overload: Global.DebugDraw.GetTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.GetTime(System.Single)
  commentId: M:Global.DebugDraw.GetTime(System.Single)
  id: GetTime(System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: GetTime(Single)
  nameWithType: DebugDraw.GetTime(Single)
  fullName: DebugDraw.GetTime(System.Single)
  type: Method
  source:
    id: GetTime
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 633
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static float GetTime(float duration)
    parameters:
    - id: duration
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function GetTime(duration As Single) As Single
  overload: Global.DebugDraw.GetTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FindBestAxisVectors(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  commentId: M:Global.DebugDraw.FindBestAxisVectors(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  id: FindBestAxisVectors(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FindBestAxisVectors(ref Vector3, out Vector3, out Vector3)
  nameWithType: DebugDraw.FindBestAxisVectors(ref Vector3, out Vector3, out Vector3)
  fullName: DebugDraw.FindBestAxisVectors(ref UnityEngine.Vector3, out UnityEngine.Vector3, out UnityEngine.Vector3)
  type: Method
  source:
    id: FindBestAxisVectors
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 706
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nFind good arbitrary axis vectors to represent U and V axes of a plane, using this vector as the normal of the plane.\n<param name=\"normal\">The plane&apos;s normal vector.</param>\n<param name=\"up\">The calculated up vector.</param>\n<param name=\"right\">The calculated right vector.</param>\n"
  example: []
  syntax:
    content: public static void FindBestAxisVectors(ref Vector3 normal, out Vector3 up, out Vector3 right)
    parameters:
    - id: normal
      type: UnityEngine.Vector3
    - id: up
      type: UnityEngine.Vector3
    - id: right
      type: UnityEngine.Vector3
    content.vb: Public Shared Sub FindBestAxisVectors(ByRef normal As Vector3, ByRef up As Vector3, ByRef right As Vector3)
  overload: Global.DebugDraw.FindBestAxisVectors*
  nameWithType.vb: DebugDraw.FindBestAxisVectors(ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.FindBestAxisVectors(ByRef UnityEngine.Vector3, ByRef UnityEngine.Vector3, ByRef UnityEngine.Vector3)
  name.vb: FindBestAxisVectors(ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: Global.DebugDraw.FindAxisVectors(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  commentId: M:Global.DebugDraw.FindAxisVectors(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  id: FindAxisVectors(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FindAxisVectors(ref Vector3, ref Vector3, out Vector3, out Vector3)
  nameWithType: DebugDraw.FindAxisVectors(ref Vector3, ref Vector3, out Vector3, out Vector3)
  fullName: DebugDraw.FindAxisVectors(ref UnityEngine.Vector3, ref UnityEngine.Vector3, out UnityEngine.Vector3, out UnityEngine.Vector3)
  type: Method
  source:
    id: FindAxisVectors
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 735
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nFind good arbitrary axis vectors to represent U and V axes of a plane, using this vector as the normal of the plane.\n<param name=\"normal\">The plane&apos;s normal vector.</param>\n<param name=\"up\">The calculated up vector.</param>\n<param name=\"right\">The calculated right vector.</param>\n"
  example: []
  syntax:
    content: public static void FindAxisVectors(ref Vector3 normal, ref Vector3 upAxis, out Vector3 up, out Vector3 right)
    parameters:
    - id: normal
      type: UnityEngine.Vector3
    - id: upAxis
      type: UnityEngine.Vector3
    - id: up
      type: UnityEngine.Vector3
    - id: right
      type: UnityEngine.Vector3
    content.vb: Public Shared Sub FindAxisVectors(ByRef normal As Vector3, ByRef upAxis As Vector3, ByRef up As Vector3, ByRef right As Vector3)
  overload: Global.DebugDraw.FindAxisVectors*
  nameWithType.vb: DebugDraw.FindAxisVectors(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.FindAxisVectors(ByRef UnityEngine.Vector3, ByRef UnityEngine.Vector3, ByRef UnityEngine.Vector3, ByRef UnityEngine.Vector3)
  name.vb: FindAxisVectors(ByRef Vector3, ByRef Vector3, ByRef Vector3, ByRef Vector3)
- uid: Global.DebugDraw.FindPerpendicular(UnityEngine.Vector3@,UnityEngine.Vector3@)
  commentId: M:Global.DebugDraw.FindPerpendicular(UnityEngine.Vector3@,UnityEngine.Vector3@)
  id: FindPerpendicular(UnityEngine.Vector3@,UnityEngine.Vector3@)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FindPerpendicular(ref Vector3, ref Vector3)
  nameWithType: DebugDraw.FindPerpendicular(ref Vector3, ref Vector3)
  fullName: DebugDraw.FindPerpendicular(ref UnityEngine.Vector3, ref UnityEngine.Vector3)
  type: Method
  source:
    id: FindPerpendicular
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 764
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nReturns a vector perpendicular to axis.\n"
  example: []
  syntax:
    content: public static Vector3 FindPerpendicular(ref Vector3 axis, ref Vector3 up)
    parameters:
    - id: axis
      type: UnityEngine.Vector3
      description: ''
    - id: up
      type: UnityEngine.Vector3
      description: ''
    return:
      type: UnityEngine.Vector3
      description: ''
    content.vb: Public Shared Function FindPerpendicular(ByRef axis As Vector3, ByRef up As Vector3) As Vector3
  overload: Global.DebugDraw.FindPerpendicular*
  nameWithType.vb: DebugDraw.FindPerpendicular(ByRef Vector3, ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.FindPerpendicular(ByRef UnityEngine.Vector3, ByRef UnityEngine.Vector3)
  name.vb: FindPerpendicular(ByRef Vector3, ByRef Vector3)
- uid: Global.DebugDraw.DistanceFromCamera(UnityEngine.Vector3@)
  commentId: M:Global.DebugDraw.DistanceFromCamera(UnityEngine.Vector3@)
  id: DistanceFromCamera(UnityEngine.Vector3@)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: DistanceFromCamera(ref Vector3)
  nameWithType: DebugDraw.DistanceFromCamera(ref Vector3)
  fullName: DebugDraw.DistanceFromCamera(ref UnityEngine.Vector3)
  type: Method
  source:
    id: DistanceFromCamera
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 777
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nReturns the distance from the given point to the camera plane.\n"
  example: []
  syntax:
    content: public static float DistanceFromCamera(ref Vector3 position)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function DistanceFromCamera(ByRef position As Vector3) As Single
  overload: Global.DebugDraw.DistanceFromCamera*
  nameWithType.vb: DebugDraw.DistanceFromCamera(ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.DistanceFromCamera(ByRef UnityEngine.Vector3)
  name.vb: DistanceFromCamera(ByRef Vector3)
- uid: Global.DebugDraw.CalculateFrustumHeight(System.Single)
  commentId: M:Global.DebugDraw.CalculateFrustumHeight(System.Single)
  id: CalculateFrustumHeight(System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: CalculateFrustumHeight(Single)
  nameWithType: DebugDraw.CalculateFrustumHeight(Single)
  fullName: DebugDraw.CalculateFrustumHeight(System.Single)
  type: Method
  source:
    id: CalculateFrustumHeight
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 791
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nReturns the camera frustum height at the given distance.\n"
  example: []
  syntax:
    content: public static float CalculateFrustumHeight(float distance)
    parameters:
    - id: distance
      type: System.Single
      description: The distance from the camera.
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function CalculateFrustumHeight(distance As Single) As Single
  overload: Global.DebugDraw.CalculateFrustumHeight*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.AutoResolution(System.Single,System.Single,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.DebugDraw.AutoResolution(System.Single,System.Single,System.Int32,System.Int32,System.Int32)
  id: AutoResolution(System.Single,System.Single,System.Int32,System.Int32,System.Int32)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: AutoResolution(Single, Single, Int32, Int32, Int32)
  nameWithType: DebugDraw.AutoResolution(Single, Single, Int32, Int32, Int32)
  fullName: DebugDraw.AutoResolution(System.Single, System.Single, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: AutoResolution
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDraw.cs
    startLine: 808
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nCalculates a number/resolution based on a size and a distance from the camera.\n"
  example: []
  syntax:
    content: public static int AutoResolution(float distance, float radius, int min, int max, int limit)
    parameters:
    - id: distance
      type: System.Single
      description: The distance from the camera.
    - id: radius
      type: System.Single
      description: The size
    - id: min
      type: System.Int32
      description: The min resolution when size is almost zero relative to the view height.
    - id: max
      type: System.Int32
      description: The resolution when size fills the screen height.
    - id: limit
      type: System.Int32
      description: The max possible resolution as size becomes larger than the view height.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function AutoResolution(distance As Single, radius As Single, min As Integer, max As Integer, limit As Integer) As Integer
  overload: Global.DebugDraw.AutoResolution*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.rayHitColor
  commentId: F:Global.DebugDraw.rayHitColor
  id: rayHitColor
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: rayHitColor
  nameWithType: DebugDraw.rayHitColor
  fullName: DebugDraw.rayHitColor
  type: Field
  source:
    id: rayHitColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 12
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Color rayHitColor
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rayHitColor As Color
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.rayMissColor
  commentId: F:Global.DebugDraw.rayMissColor
  id: rayMissColor
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: rayMissColor
  nameWithType: DebugDraw.rayMissColor
  fullName: DebugDraw.rayMissColor
  type: Field
  source:
    id: rayMissColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 13
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Color rayMissColor
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rayMissColor As Color
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.rayNormalColor
  commentId: F:Global.DebugDraw.rayNormalColor
  id: rayNormalColor
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: rayNormalColor
  nameWithType: DebugDraw.rayNormalColor
  fullName: DebugDraw.rayNormalColor
  type: Field
  source:
    id: rayNormalColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 14
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static Color rayNormalColor
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rayNormalColor As Color
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Ray(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.RaycastHit,System.Single,System.Single,System.Single)
  commentId: M:Global.DebugDraw.Ray(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.RaycastHit,System.Single,System.Single,System.Single)
  id: Ray(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.RaycastHit,System.Single,System.Single,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Ray(Vector3, Vector3, Single, RaycastHit, Single, Single, Single)
  nameWithType: DebugDraw.Ray(Vector3, Vector3, Single, RaycastHit, Single, Single, Single)
  fullName: DebugDraw.Ray(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, UnityEngine.RaycastHit, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: Ray
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 27
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a ray.\n"
  example: []
  syntax:
    content: public static void Ray(Vector3 origin, Vector3 direction, float maxDistance, RaycastHit hitResult, float normalSize = 0F, float arrowSize = 0F, float duration = 0F)
    parameters:
    - id: origin
      type: UnityEngine.Vector3
      description: The ray&apos;s starting position.
    - id: direction
      type: UnityEngine.Vector3
      description: The ray&apos;s direction.
    - id: maxDistance
      type: System.Single
      description: The ray&apos;s max distance.
    - id: hitResult
      type: UnityEngine.RaycastHit
      description: The hit result.
    - id: normalSize
      type: System.Single
      description: If larger than zero draws the hit normal
    - id: arrowSize
      type: System.Single
      description: The size of the arrow head. Set to zero to just draw a line.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    content.vb: Public Shared Sub Ray(origin As Vector3, direction As Vector3, maxDistance As Single, hitResult As RaycastHit, normalSize As Single = 0F, arrowSize As Single = 0F, duration As Single = 0F)
  overload: Global.DebugDraw.Ray*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,DebugDrawItems.ArrowShape,DebugDrawItems.ArrowShape,System.Boolean,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,DebugDrawItems.ArrowShape,DebugDrawItems.ArrowShape,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,DebugDrawItems.ArrowShape,DebugDrawItems.ArrowShape,System.Boolean,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, Color, Single, Single, ArrowShape, ArrowShape, Boolean, Boolean, Single)
  nameWithType: DebugDraw.Arrow(Vector3, Vector3, Color, Color, Single, Single, ArrowShape, ArrowShape, Boolean, Boolean, Single)
  fullName: DebugDraw.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, System.Single, System.Single, DebugDrawItems.ArrowShape, DebugDrawItems.ArrowShape, System.Boolean, System.Boolean, System.Single)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 76
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws an arrow.\n"
  example: []
  syntax:
    content: public static Arrow Arrow(Vector3 p1, Vector3 p2, Color color1, Color color2, float startSize, float endSize, ArrowShape startShape = ArrowShape.Arrow, ArrowShape endShape = ArrowShape.Arrow, bool faceCamera = false, bool autoSize = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line&apos;s colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line&apos;s colour at the end.
    - id: startSize
      type: System.Single
      description: The size of the arrow head at the start of the line.
    - id: endSize
      type: System.Single
      description: The size of the arrow head at the end of the line.
    - id: startShape
      type: DebugDrawItems.ArrowShape
      description: The shape of the head at the start of the line.
    - id: endShape
      type: DebugDrawItems.ArrowShape
      description: The shape of the head at the end of the line.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Shared Function Arrow(p1 As Vector3, p2 As Vector3, color1 As Color, color2 As Color, startSize As Single, endSize As Single, startShape As ArrowShape = ArrowShape.Arrow, endShape As ArrowShape = ArrowShape.Arrow, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0F) As Arrow
  overload: Global.DebugDraw.Arrow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, Color, Single, Single, Boolean, Boolean, Single)
  nameWithType: DebugDraw.Arrow(Vector3, Vector3, Color, Color, Single, Single, Boolean, Boolean, Single)
  fullName: DebugDraw.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, System.Single, System.Single, System.Boolean, System.Boolean, System.Single)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 99
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws an arrow.\n"
  example: []
  syntax:
    content: public static Arrow Arrow(Vector3 p1, Vector3 p2, Color color1, Color color2, float startSize, float endSize, bool faceCamera = false, bool autoSize = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line&apos;s colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line&apos;s colour at the end.
    - id: startSize
      type: System.Single
      description: The size of the arrow head at the start of the line.
    - id: endSize
      type: System.Single
      description: The size of the arrow head at the end of the line.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Shared Function Arrow(p1 As Vector3, p2 As Vector3, color1 As Color, color2 As Color, startSize As Single, endSize As Single, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0F) As Arrow
  overload: Global.DebugDraw.Arrow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, Color, Single, Boolean, Boolean, Single)
  nameWithType: DebugDraw.Arrow(Vector3, Vector3, Color, Color, Single, Boolean, Boolean, Single)
  fullName: DebugDraw.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, System.Single, System.Boolean, System.Boolean, System.Single)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 121
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws an arrow.\n"
  example: []
  syntax:
    content: public static Arrow Arrow(Vector3 p1, Vector3 p2, Color color1, Color color2, float size, bool faceCamera = false, bool autoSize = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line&apos;s colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line&apos;s colour at the end.
    - id: size
      type: System.Single
      description: The size of the arrow head.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Shared Function Arrow(p1 As Vector3, p2 As Vector3, color1 As Color, color2 As Color, size As Single, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0F) As Arrow
  overload: Global.DebugDraw.Arrow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single,System.Boolean,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, Single, Single, Boolean, Boolean, Single)
  nameWithType: DebugDraw.Arrow(Vector3, Vector3, Color, Single, Single, Boolean, Boolean, Single)
  fullName: DebugDraw.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Single, System.Single, System.Boolean, System.Boolean, System.Single)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 143
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws an arrow.\n"
  example: []
  syntax:
    content: public static Arrow Arrow(Vector3 p1, Vector3 p2, Color color, float startSize, float endSize, bool faceCamera = false, bool autoSize = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color
      type: UnityEngine.Color
      description: The arrow&apos;s colour.
    - id: startSize
      type: System.Single
      description: The size of the arrow head at the start of the line.
    - id: endSize
      type: System.Single
      description: The size of the arrow head at the end of the line.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Shared Function Arrow(p1 As Vector3, p2 As Vector3, color As Color, startSize As Single, endSize As Single, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0F) As Arrow
  overload: Global.DebugDraw.Arrow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  id: Arrow(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Arrow(Vector3, Vector3, Color, Single, Boolean, Boolean, Single)
  nameWithType: DebugDraw.Arrow(Vector3, Vector3, Color, Single, Boolean, Boolean, Single)
  fullName: DebugDraw.Arrow(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Single, System.Boolean, System.Boolean, System.Single)
  type: Method
  source:
    id: Arrow
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 164
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws an arrow.\n"
  example: []
  syntax:
    content: public static Arrow Arrow(Vector3 p1, Vector3 p2, Color color, float size, bool faceCamera = false, bool autoSize = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color
      type: UnityEngine.Color
      description: The arrow&apos;s colour.
    - id: size
      type: System.Single
      description: The size of the arrow head.
    - id: faceCamera
      type: System.Boolean
      description: If true the arrow heads will automatically orient themselves to be perpendicular to the camera.
    - id: autoSize
      type: System.Boolean
      description: If true adjusts the size of the arrow heads so it approximately remains the same size on screen.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Arrow
      description: The Arrow object.
    content.vb: Public Shared Function Arrow(p1 As Vector3, p2 As Vector3, color As Color, size As Single, faceCamera As Boolean = False, autoSize As Boolean = False, duration As Single = 0F) As Arrow
  overload: Global.DebugDraw.Arrow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean,System.Single)
  id: Axes(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Axes(Vector3, Quaternion, Vector3, Boolean, Single)
  nameWithType: DebugDraw.Axes(Vector3, Quaternion, Vector3, Boolean, Single)
  fullName: DebugDraw.Axes(UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Vector3, System.Boolean, System.Single)
  type: Method
  source:
    id: Axes
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 183
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws lines along the x, y, and z axes.\n"
  example: []
  syntax:
    content: public static Axes Axes(Vector3 position, Quaternion rotation, Vector3 size, bool doubleSided = false, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The axes origin.
    - id: rotation
      type: UnityEngine.Quaternion
      description: The orientation of the axes.
    - id: size
      type: UnityEngine.Vector3
      description: The size of each axis. Set to zero to not draw an axis.
    - id: doubleSided
      type: System.Boolean
      description: If true the axis line extends in both directions, other only in the positive.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Axes
      description: The Axes object.
    content.vb: Public Shared Function Axes(position As Vector3, rotation As Quaternion, size As Vector3, doubleSided As Boolean = False, duration As Single = 0F) As Axes
  overload: Global.DebugDraw.Axes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Axes(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Single)
  id: Axes(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Axes(Vector3, Quaternion, Single, Boolean, Single)
  nameWithType: DebugDraw.Axes(Vector3, Quaternion, Single, Boolean, Single)
  fullName: DebugDraw.Axes(UnityEngine.Vector3, UnityEngine.Quaternion, System.Single, System.Boolean, System.Single)
  type: Method
  source:
    id: Axes
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 202
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws lines along the x, y, and z axes.\n"
  example: []
  syntax:
    content: public static Axes Axes(Vector3 position, Quaternion rotation, float size, bool doubleSided = false, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The axes origin.
    - id: rotation
      type: UnityEngine.Quaternion
      description: The orientation of the axes.
    - id: size
      type: System.Single
      description: The size of each the axes.
    - id: doubleSided
      type: System.Boolean
      description: If true the axis line extends in both directions, other only in the positive.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Axes
      description: The Axes object.
    content.vb: Public Shared Function Axes(position As Vector3, rotation As Quaternion, size As Single, doubleSided As Boolean = False, duration As Single = 0F) As Axes
  overload: Global.DebugDraw.Axes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Box(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Box(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  id: Box(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Box(Vector3, Single, Color, Single)
  nameWithType: DebugDraw.Box(Vector3, Single, Color, Single)
  fullName: DebugDraw.Box(UnityEngine.Vector3, System.Single, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Box
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 220
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws an axis aligned box.\n"
  example: []
  syntax:
    content: public static Box Box(Vector3 position, float size, Color color, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the box.
    - id: size
      type: System.Single
      description: The half size of the box.
    - id: color
      type: UnityEngine.Color
      description: The color of the box.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Box
      description: The Box object.
    content.vb: Public Shared Function Box(position As Vector3, size As Single, color As Color, duration As Single = 0F) As Box
  overload: Global.DebugDraw.Box*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Box(UnityEngine.Vector3,System.Single,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Box(UnityEngine.Vector3,System.Single,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  id: Box(UnityEngine.Vector3,System.Single,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Box(Vector3, Single, Quaternion, Color, Single)
  nameWithType: DebugDraw.Box(Vector3, Single, Quaternion, Color, Single)
  fullName: DebugDraw.Box(UnityEngine.Vector3, System.Single, UnityEngine.Quaternion, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Box
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 239
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws an axis aligned box.\n"
  example: []
  syntax:
    content: public static Box Box(Vector3 position, float size, Quaternion orientation, Color color, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the box.
    - id: size
      type: System.Single
      description: The half size of the box.
    - id: orientation
      type: UnityEngine.Quaternion
      description: The orientation of the box.
    - id: color
      type: UnityEngine.Color
      description: The color of the box.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Box
      description: The Box object.
    content.vb: Public Shared Function Box(position As Vector3, size As Single, orientation As Quaternion, color As Color, duration As Single = 0F) As Box
  overload: Global.DebugDraw.Box*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Box(Vector3, Vector3, Color, Single)
  nameWithType: DebugDraw.Box(Vector3, Vector3, Color, Single)
  fullName: DebugDraw.Box(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Box
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 257
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws an axis aligned box.\n"
  example: []
  syntax:
    content: public static Box Box(Vector3 position, Vector3 size, Color color, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the box.
    - id: size
      type: UnityEngine.Vector3
      description: The half size of the box.
    - id: color
      type: UnityEngine.Color
      description: The color of the box.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Box
      description: The Box object.
    content.vb: Public Shared Function Box(position As Vector3, size As Vector3, color As Color, duration As Single = 0F) As Box
  overload: Global.DebugDraw.Box*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  id: Box(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Box(Vector3, Vector3, Quaternion, Color, Single)
  nameWithType: DebugDraw.Box(Vector3, Vector3, Quaternion, Color, Single)
  fullName: DebugDraw.Box(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Box
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 276
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws an axis aligned box.\n"
  example: []
  syntax:
    content: public static Box Box(Vector3 position, Vector3 size, Quaternion orientation, Color color, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the box.
    - id: size
      type: UnityEngine.Vector3
      description: The half size of the box.
    - id: orientation
      type: UnityEngine.Quaternion
      description: The orientation of the box.
    - id: color
      type: UnityEngine.Color
      description: The color of the box.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Box
      description: The Box object.
    content.vb: Public Shared Function Box(position As Vector3, size As Vector3, orientation As Quaternion, color As Color, duration As Single = 0F) As Box
  overload: Global.DebugDraw.Box*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Capsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.Capsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: Capsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Capsule(Vector3, Vector3, Single, Color, Int32, Single)
  nameWithType: DebugDraw.Capsule(Vector3, Vector3, Single, Color, Int32, Single)
  fullName: DebugDraw.Capsule(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: Capsule
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 296
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a capsule shell.\n"
  example: []
  syntax:
    content: public static Capsule Capsule(Vector3 p1, Vector3 p2, float radius, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The center of the capsule at the start of the capsule.
    - id: p2
      type: UnityEngine.Vector3
      description: The center of the capsule at the end of the capsule.
    - id: radius
      type: System.Single
      description: The radius of the capsule.
    - id: color
      type: UnityEngine.Color
      description: The color of the capsule.
    - id: segments
      type: System.Int32
      description: The resolution of the capsule. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Capsule
      description: The Capsule object.
    content.vb: Public Shared Function Capsule(p1 As Vector3, p2 As Vector3, radius As Single, color As Color, segments As Integer = 32, duration As Single = 0F) As Capsule
  overload: Global.DebugDraw.Capsule*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.WireCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.WireCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: WireCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: WireCapsule(Vector3, Vector3, Single, Color, Int32, Single)
  nameWithType: DebugDraw.WireCapsule(Vector3, Vector3, Single, Color, Int32, Single)
  fullName: DebugDraw.WireCapsule(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: WireCapsule
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 316
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a full wireframe capsule.\n"
  example: []
  syntax:
    content: public static Capsule WireCapsule(Vector3 p1, Vector3 p2, float radius, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The center of the capsule at the start of the capsule.
    - id: p2
      type: UnityEngine.Vector3
      description: The center of the capsule at the end of the capsule.
    - id: radius
      type: System.Single
      description: The radius of the capsule.
    - id: color
      type: UnityEngine.Color
      description: The color of the capsule.
    - id: segments
      type: System.Int32
      description: The resolution of the capsule. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Capsule
      description: The Capsule object.
    content.vb: Public Shared Function WireCapsule(p1 As Vector3, p2 As Vector3, radius As Single, color As Color, segments As Integer = 32, duration As Single = 0F) As Capsule
  overload: Global.DebugDraw.WireCapsule*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Cone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Cone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  id: Cone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Cone(Vector3, Vector3, Single, Single, Color, Int32, Boolean, Boolean, Single)
  nameWithType: DebugDraw.Cone(Vector3, Vector3, Single, Single, Color, Int32, Boolean, Boolean, Single)
  fullName: DebugDraw.Cone(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, System.Single, UnityEngine.Color, System.Int32, System.Boolean, System.Boolean, System.Single)
  type: Method
  source:
    id: Cone
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 341
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a cone shell.\n"
  example: []
  syntax:
    content: public static Cone Cone(Vector3 origin, Vector3 direction, float length, float angle, Color color, int segments = 32, bool round = false, bool drawCap = false, float duration = 0F)
    parameters:
    - id: origin
      type: UnityEngine.Vector3
      description: The origin point of the cone.
    - id: direction
      type: UnityEngine.Vector3
      description: The direction the cone.
    - id: length
      type: System.Single
      description: The length of the cone.
    - id: angle
      type: System.Single
      description: The angle of the cone.
    - id: color
      type: UnityEngine.Color
      description: The color of the cone.
    - id: segments
      type: System.Int32
      description: The resolution of the cone. If set to zero will be adjusted based on the distance to the camera.
    - id: round
      type: System.Boolean
      description: >-
        If true, the length is treated as the radius of the cone.

        If false the length is the distance from the origin to the centre of the cones cap.
    - id: drawCap
      type: System.Boolean
      description: >-
        Should a cap be drawn on the cone.

        When round is true the cap will be made up of two arcs, otherwise two perpendicular lines.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cone
      description: The Cylinder object.
    content.vb: Public Shared Function Cone(origin As Vector3, direction As Vector3, length As Single, angle As Single, color As Color, segments As Integer = 32, round As Boolean = False, drawCap As Boolean = False, duration As Single = 0F) As Cone
  overload: Global.DebugDraw.Cone*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.WireCone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.WireCone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  id: WireCone(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: WireCone(Vector3, Vector3, Single, Single, Color, Int32, Boolean, Boolean, Single)
  nameWithType: DebugDraw.WireCone(Vector3, Vector3, Single, Single, Color, Int32, Boolean, Boolean, Single)
  fullName: DebugDraw.WireCone(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, System.Single, UnityEngine.Color, System.Int32, System.Boolean, System.Boolean, System.Single)
  type: Method
  source:
    id: WireCone
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 366
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a full wireframe cone.\n"
  example: []
  syntax:
    content: public static Cone WireCone(Vector3 origin, Vector3 direction, float length, float angle, Color color, int segments = 32, bool round = false, bool drawCap = false, float duration = 0F)
    parameters:
    - id: origin
      type: UnityEngine.Vector3
      description: The origin point of the cone.
    - id: direction
      type: UnityEngine.Vector3
      description: The direction the cone.
    - id: length
      type: System.Single
      description: The length of the cone.
    - id: angle
      type: System.Single
      description: The angle of the cone.
    - id: color
      type: UnityEngine.Color
      description: The color of the cone.
    - id: segments
      type: System.Int32
      description: The resolution of the cone. If set to zero will be adjusted based on the distance to the camera.
    - id: round
      type: System.Boolean
      description: >-
        If true, the length is treated as the radius of the cone.

        If false the length is the distance from the origin to the centre of the cones cap.
    - id: drawCap
      type: System.Boolean
      description: >-
        Should a cap be drawn on the cone.

        When round is true the cap will be made up of two arcs, otherwise two perpendicular lines.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cone
      description: The Cylinder object.
    content.vb: Public Shared Function WireCone(origin As Vector3, direction As Vector3, length As Single, angle As Single, color As Color, segments As Integer = 32, round As Boolean = False, drawCap As Boolean = False, duration As Single = 0F) As Cone
  overload: Global.DebugDraw.WireCone*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Cylinder(Vector3, Vector3, Single, Color, Int32, Boolean, Single)
  nameWithType: DebugDraw.Cylinder(Vector3, Vector3, Single, Color, Int32, Boolean, Single)
  fullName: DebugDraw.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, UnityEngine.Color, System.Int32, System.Boolean, System.Single)
  type: Method
  source:
    id: Cylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 387
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a cylinder shell.\n"
  example: []
  syntax:
    content: public static Cylinder Cylinder(Vector3 p1, Vector3 p2, float radius, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius
      type: System.Single
      description: The radius of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Shared Function Cylinder(p1 As Vector3, p2 As Vector3, radius As Single, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0F) As Cylinder
  overload: Global.DebugDraw.Cylinder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Cylinder(Vector3, Vector3, Single, Single, Color, Int32, Boolean, Single)
  nameWithType: DebugDraw.Cylinder(Vector3, Vector3, Single, Single, Color, Int32, Boolean, Single)
  fullName: DebugDraw.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, System.Single, UnityEngine.Color, System.Int32, System.Boolean, System.Single)
  type: Method
  source:
    id: Cylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 409
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a cylinder shell with a different start and end radius.\n"
  example: []
  syntax:
    content: public static Cylinder Cylinder(Vector3 p1, Vector3 p2, float radius1, float radius2, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius1
      type: System.Single
      description: The radius at the start point of the cylinder.
    - id: radius2
      type: System.Single
      description: The radius at the end point of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Shared Function Cylinder(p1 As Vector3, p2 As Vector3, radius1 As Single, radius2 As Single, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0F) As Cylinder
  overload: Global.DebugDraw.Cylinder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Cylinder(Vector3, Vector3, Vector2, Color, Int32, Boolean, Single)
  nameWithType: DebugDraw.Cylinder(Vector3, Vector3, Vector2, Color, Int32, Boolean, Single)
  fullName: DebugDraw.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Color, System.Int32, System.Boolean, System.Single)
  type: Method
  source:
    id: Cylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 430
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a cylinder shell with a different start and end radius.\n"
  example: []
  syntax:
    content: public static Cylinder Cylinder(Vector3 p1, Vector3 p2, Vector2 radius, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius
      type: UnityEngine.Vector2
      description: The radius of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Shared Function Cylinder(p1 As Vector3, p2 As Vector3, radius As Vector2, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0F) As Cylinder
  overload: Global.DebugDraw.Cylinder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: Cylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Cylinder(Vector3, Vector3, Vector2, Vector2, Color, Int32, Boolean, Single)
  nameWithType: DebugDraw.Cylinder(Vector3, Vector3, Vector2, Vector2, Color, Int32, Boolean, Single)
  fullName: DebugDraw.Cylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Color, System.Int32, System.Boolean, System.Single)
  type: Method
  source:
    id: Cylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 452
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a cylinder shell with a different start and end radius.\n"
  example: []
  syntax:
    content: public static Cylinder Cylinder(Vector3 p1, Vector3 p2, Vector2 radius1, Vector2 radius2, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius1
      type: UnityEngine.Vector2
      description: The radius at the start point of the cylinder.
    - id: radius2
      type: UnityEngine.Vector2
      description: The radius at the end point of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Shared Function Cylinder(p1 As Vector3, p2 As Vector3, radius1 As Vector2, radius2 As Vector2, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0F) As Cylinder
  overload: Global.DebugDraw.Cylinder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: WireCylinder(Vector3, Vector3, Single, Color, Int32, Boolean, Single)
  nameWithType: DebugDraw.WireCylinder(Vector3, Vector3, Single, Color, Int32, Boolean, Single)
  fullName: DebugDraw.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, UnityEngine.Color, System.Int32, System.Boolean, System.Single)
  type: Method
  source:
    id: WireCylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 473
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a full wireframe cylinder.\n"
  example: []
  syntax:
    content: public static Cylinder WireCylinder(Vector3 p1, Vector3 p2, float radius, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius
      type: System.Single
      description: The radius of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Shared Function WireCylinder(p1 As Vector3, p2 As Vector3, radius As Single, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0F) As Cylinder
  overload: Global.DebugDraw.WireCylinder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: WireCylinder(Vector3, Vector3, Single, Single, Color, Int32, Boolean, Single)
  nameWithType: DebugDraw.WireCylinder(Vector3, Vector3, Single, Single, Color, Int32, Boolean, Single)
  fullName: DebugDraw.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, System.Single, UnityEngine.Color, System.Int32, System.Boolean, System.Single)
  type: Method
  source:
    id: WireCylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 495
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a full wireframe cylinder with a different start and end radius.\n"
  example: []
  syntax:
    content: public static Cylinder WireCylinder(Vector3 p1, Vector3 p2, float radius1, float radius2, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius1
      type: System.Single
      description: The radius at the start point of the cylinder.
    - id: radius2
      type: System.Single
      description: The radius at the end point of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Shared Function WireCylinder(p1 As Vector3, p2 As Vector3, radius1 As Single, radius2 As Single, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0F) As Cylinder
  overload: Global.DebugDraw.WireCylinder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: WireCylinder(Vector3, Vector3, Vector2, Color, Int32, Boolean, Single)
  nameWithType: DebugDraw.WireCylinder(Vector3, Vector3, Vector2, Color, Int32, Boolean, Single)
  fullName: DebugDraw.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Color, System.Int32, System.Boolean, System.Single)
  type: Method
  source:
    id: WireCylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 516
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a full wireframe cylinder with a different start and end radius.\n"
  example: []
  syntax:
    content: public static Cylinder WireCylinder(Vector3 p1, Vector3 p2, Vector2 radius, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius
      type: UnityEngine.Vector2
      description: The radius of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Shared Function WireCylinder(p1 As Vector3, p2 As Vector3, radius As Vector2, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0F) As Cylinder
  overload: Global.DebugDraw.WireCylinder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  commentId: M:Global.DebugDraw.WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  id: WireCylinder(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Color,System.Int32,System.Boolean,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: WireCylinder(Vector3, Vector3, Vector2, Vector2, Color, Int32, Boolean, Single)
  nameWithType: DebugDraw.WireCylinder(Vector3, Vector3, Vector2, Vector2, Color, Int32, Boolean, Single)
  fullName: DebugDraw.WireCylinder(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Color, System.Int32, System.Boolean, System.Single)
  type: Method
  source:
    id: WireCylinder
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 538
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a full wireframe cylinder with a different start and end radius.\n"
  example: []
  syntax:
    content: public static Cylinder WireCylinder(Vector3 p1, Vector3 p2, Vector2 radius1, Vector2 radius2, Color color, int segments = 32, bool drawEndAxes = false, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start point of the cylinder.
    - id: p2
      type: UnityEngine.Vector3
      description: The end point of the cylinder.
    - id: radius1
      type: UnityEngine.Vector2
      description: The radius at the start point of the cylinder.
    - id: radius2
      type: UnityEngine.Vector2
      description: The radius at the end point of the cylinder.
    - id: color
      type: UnityEngine.Color
      description: The color of the cylinder.
    - id: segments
      type: System.Int32
      description: The resolution of the cylinder. If set to zero will be adjusted based on the distance to the camera.
    - id: drawEndAxes
      type: System.Boolean
      description: Draw axis at each end of the cylinder.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Cylinder
      description: The Cylinder object.
    content.vb: Public Shared Function WireCylinder(p1 As Vector3, p2 As Vector3, radius1 As Vector2, radius2 As Vector2, color As Color, segments As Integer = 32, drawEndAxes As Boolean = False, duration As Single = 0F) As Cylinder
  overload: Global.DebugDraw.WireCylinder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Dot(Vector3, Single, Color, Int32, Single)
  nameWithType: DebugDraw.Dot(Vector3, Single, Color, Int32, Single)
  fullName: DebugDraw.Dot(UnityEngine.Vector3, System.Single, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: Dot
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 558
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a 3D dot that automatically faces the camera.\n"
  example: []
  syntax:
    content: public static Dot Dot(Vector3 position, float radius, Color color, int segments = 0, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The position of the dot.
    - id: radius
      type: System.Single
      description: The size of the dot.
    - id: color
      type: UnityEngine.Color
      description: The color of the dot.
    - id: segments
      type: System.Int32
      description: >-
        The shape/resolution of the dot. 0 or 4 = square, >= 3 = circle.

        If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Dot
      description: The Dot object.
    content.vb: Public Shared Function Dot(position As Vector3, radius As Single, color As Color, segments As Integer = 0, duration As Single = 0F) As Dot
  overload: Global.DebugDraw.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Vector3,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Vector3,System.Int32,System.Single)
  id: Dot(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Vector3,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Dot(Vector3, Single, Color, Vector3, Int32, Single)
  nameWithType: DebugDraw.Dot(Vector3, Single, Color, Vector3, Int32, Single)
  fullName: DebugDraw.Dot(UnityEngine.Vector3, System.Single, UnityEngine.Color, UnityEngine.Vector3, System.Int32, System.Single)
  type: Method
  source:
    id: Dot
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 579
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a 3D dot.\n"
  example: []
  syntax:
    content: public static Dot Dot(Vector3 position, float radius, Color color, Vector3 facing, int segments = 0, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The position of the dot.
    - id: radius
      type: System.Single
      description: The size of the dot.
    - id: color
      type: UnityEngine.Color
      description: The color of the dot.
    - id: facing
      type: UnityEngine.Vector3
      description: The forward direction of the dot. Automatically update if faceCamera is true.
    - id: segments
      type: System.Int32
      description: >-
        The shape/resolution of the dot. 0 = square.

        If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Dot
      description: The Dot object.
    content.vb: Public Shared Function Dot(position As Vector3, radius As Single, color As Color, facing As Vector3, segments As Integer = 0, duration As Single = 0F) As Dot
  overload: Global.DebugDraw.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Int32,System.Single)
  commentId: M:Global.DebugDraw.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Int32,System.Single)
  id: Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Dots(List<Vector3>, List<Single>, List<Color>, Int32, Single)
  nameWithType: DebugDraw.Dots(List<Vector3>, List<Single>, List<Color>, Int32, Single)
  fullName: DebugDraw.Dots(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Single>, System.Collections.Generic.List<UnityEngine.Color>, System.Int32, System.Single)
  type: Method
  source:
    id: Dots
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 598
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nBatch draws 3D dots that automatically faces the camera.\n"
  example: []
  syntax:
    content: public static Dots Dots(List<Vector3> positions, List<float> sizes, List<Color> colors, int segments = 0, float duration = 0F)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of each dot.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The sizes each dot.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors each dot.
    - id: segments
      type: System.Int32
      description: The shape/resolution of the dots. 0 or 4 = square, >= 3 = circle.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Dots
      description: The Dot object.
    content.vb: Public Shared Function Dots(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), segments As Integer = 0, duration As Single = 0F) As Dots
  overload: Global.DebugDraw.Dots*
  nameWithType.vb: DebugDraw.Dots(List(Of Vector3), List(Of Single), List(Of Color), Int32, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.Dots(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Single), System.Collections.Generic.List(Of UnityEngine.Color), System.Int32, System.Single)
  name.vb: Dots(List(Of Vector3), List(Of Single), List(Of Color), Int32, Single)
- uid: Global.DebugDraw.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},UnityEngine.Vector3,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},UnityEngine.Vector3,System.Int32,System.Single)
  id: Dots(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},UnityEngine.Vector3,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Dots(List<Vector3>, List<Single>, List<Color>, Vector3, Int32, Single)
  nameWithType: DebugDraw.Dots(List<Vector3>, List<Single>, List<Color>, Vector3, Int32, Single)
  fullName: DebugDraw.Dots(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Single>, System.Collections.Generic.List<UnityEngine.Color>, UnityEngine.Vector3, System.Int32, System.Single)
  type: Method
  source:
    id: Dots
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 618
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nBatch draws 3D dots.\n"
  example: []
  syntax:
    content: public static Dots Dots(List<Vector3> positions, List<float> sizes, List<Color> colors, Vector3 facing, int segments = 0, float duration = 0F)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of each dot.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The sizes each dot.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors each dot.
    - id: facing
      type: UnityEngine.Vector3
      description: The forward direction of the dot. Automatically update if faceCamera is true.
    - id: segments
      type: System.Int32
      description: The shape/resolution of the dots. 0 = square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Dots
      description: The Dots object.
    content.vb: Public Shared Function Dots(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), facing As Vector3, segments As Integer = 0, duration As Single = 0F) As Dots
  overload: Global.DebugDraw.Dots*
  nameWithType.vb: DebugDraw.Dots(List(Of Vector3), List(Of Single), List(Of Color), Vector3, Int32, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.Dots(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Single), System.Collections.Generic.List(Of UnityEngine.Color), UnityEngine.Vector3, System.Int32, System.Single)
  name.vb: Dots(List(Of Vector3), List(Of Single), List(Of Color), Vector3, Int32, Single)
- uid: Global.DebugDraw.Ellipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawItems.DrawEllipseAxes,System.Single)
  commentId: M:Global.DebugDraw.Ellipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawItems.DrawEllipseAxes,System.Single)
  id: Ellipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawItems.DrawEllipseAxes,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Ellipse(Vector3, Single, Vector3, Color, Int32, DrawEllipseAxes, Single)
  nameWithType: DebugDraw.Ellipse(Vector3, Single, Vector3, Color, Int32, DrawEllipseAxes, Single)
  fullName: DebugDraw.Ellipse(UnityEngine.Vector3, System.Single, UnityEngine.Vector3, UnityEngine.Color, System.Int32, DebugDrawItems.DrawEllipseAxes, System.Single)
  type: Method
  source:
    id: Ellipse
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 639
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire ellipse.\n"
  example: []
  syntax:
    content: public static Ellipse Ellipse(Vector3 position, float radius, Vector3 facing, Color color, int segments = 32, DrawEllipseAxes drawAxes = DrawEllipseAxes.Never, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: radius
      type: System.Single
      description: The radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: drawAxes
      type: DebugDrawItems.DrawEllipseAxes
      description: Options for drawing an X and Y axis inside the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Shared Function Ellipse(position As Vector3, radius As Single, facing As Vector3, color As Color, segments As Integer = 32, drawAxes As DrawEllipseAxes = DrawEllipseAxes.Never, duration As Single = 0F) As Ellipse
  overload: Global.DebugDraw.Ellipse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillEllipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.FillEllipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  id: FillEllipse(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillEllipse(Vector3, Single, Vector3, Color, Int32, Single)
  nameWithType: DebugDraw.FillEllipse(Vector3, Single, Vector3, Color, Int32, Single)
  fullName: DebugDraw.FillEllipse(UnityEngine.Vector3, System.Single, UnityEngine.Vector3, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: FillEllipse
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 659
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled ellipse.\n"
  example: []
  syntax:
    content: public static Ellipse FillEllipse(Vector3 position, float radius, Vector3 facing, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: radius
      type: System.Single
      description: The radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Shared Function FillEllipse(position As Vector3, radius As Single, facing As Vector3, color As Color, segments As Integer = 32, duration As Single = 0F) As Ellipse
  overload: Global.DebugDraw.FillEllipse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Arc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawItems.DrawArcSegments,DebugDrawItems.DrawEllipseAxes,System.Single)
  commentId: M:Global.DebugDraw.Arc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawItems.DrawArcSegments,DebugDrawItems.DrawEllipseAxes,System.Single)
  id: Arc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawItems.DrawArcSegments,DebugDrawItems.DrawEllipseAxes,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Arc(Vector3, Single, Vector3, Single, Single, Color, Int32, DrawArcSegments, DrawEllipseAxes, Single)
  nameWithType: DebugDraw.Arc(Vector3, Single, Vector3, Single, Single, Color, Int32, DrawArcSegments, DrawEllipseAxes, Single)
  fullName: DebugDraw.Arc(UnityEngine.Vector3, System.Single, UnityEngine.Vector3, System.Single, System.Single, UnityEngine.Color, System.Int32, DebugDrawItems.DrawArcSegments, DebugDrawItems.DrawEllipseAxes, System.Single)
  type: Method
  source:
    id: Arc
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 683
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire arc.\n"
  example: []
  syntax:
    content: public static Ellipse Arc(Vector3 position, float radius, Vector3 facing, float startAngle, float endAngle, Color color, int segments = 32, DrawArcSegments drawArcSegments = DrawArcSegments.OpenOnly, DrawEllipseAxes drawAxes = DrawEllipseAxes.Never, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: radius
      type: System.Single
      description: The radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: startAngle
      type: System.Single
      description: The start angle in degrees of the arc.
    - id: endAngle
      type: System.Single
      description: The end angle in degrees of the arc.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: drawArcSegments
      type: DebugDrawItems.DrawArcSegments
      description: Options for connecting the centre of the ellipse and the arc end points.
    - id: drawAxes
      type: DebugDrawItems.DrawEllipseAxes
      description: Options for drawing an X and Y axis inside the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Shared Function Arc(position As Vector3, radius As Single, facing As Vector3, startAngle As Single, endAngle As Single, color As Color, segments As Integer = 32, drawArcSegments As DrawArcSegments = DrawArcSegments.OpenOnly, drawAxes As DrawEllipseAxes = DrawEllipseAxes.Never, duration As Single = 0F) As Ellipse
  overload: Global.DebugDraw.Arc*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillArc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.FillArc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: FillArc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillArc(Vector3, Single, Vector3, Single, Single, Color, Int32, Single)
  nameWithType: DebugDraw.FillArc(Vector3, Single, Vector3, Single, Single, Color, Int32, Single)
  fullName: DebugDraw.FillArc(UnityEngine.Vector3, System.Single, UnityEngine.Vector3, System.Single, System.Single, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: FillArc
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 705
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled arc.\n"
  example: []
  syntax:
    content: public static Ellipse FillArc(Vector3 position, float radius, Vector3 facing, float startAngle, float endAngle, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: radius
      type: System.Single
      description: The radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: startAngle
      type: System.Single
      description: The start angle in degrees of the arc.
    - id: endAngle
      type: System.Single
      description: The end angle in degrees of the arc.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Shared Function FillArc(position As Vector3, radius As Single, facing As Vector3, startAngle As Single, endAngle As Single, color As Color, segments As Integer = 32, duration As Single = 0F) As Ellipse
  overload: Global.DebugDraw.FillArc*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Ellipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawItems.DrawEllipseAxes,System.Single)
  commentId: M:Global.DebugDraw.Ellipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawItems.DrawEllipseAxes,System.Single)
  id: Ellipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,DebugDrawItems.DrawEllipseAxes,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Ellipse(Vector3, Vector2, Vector3, Color, Int32, DrawEllipseAxes, Single)
  nameWithType: DebugDraw.Ellipse(Vector3, Vector2, Vector3, Color, Int32, DrawEllipseAxes, Single)
  fullName: DebugDraw.Ellipse(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, System.Int32, DebugDrawItems.DrawEllipseAxes, System.Single)
  type: Method
  source:
    id: Ellipse
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 726
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire ellipse.\n"
  example: []
  syntax:
    content: public static Ellipse Ellipse(Vector3 position, Vector2 size, Vector3 facing, Color color, int segments = 32, DrawEllipseAxes drawAxes = DrawEllipseAxes.Never, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: size
      type: UnityEngine.Vector2
      description: The size/radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: drawAxes
      type: DebugDrawItems.DrawEllipseAxes
      description: Options for drawing an X and Y axis inside the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Shared Function Ellipse(position As Vector3, size As Vector2, facing As Vector3, color As Color, segments As Integer = 32, drawAxes As DrawEllipseAxes = DrawEllipseAxes.Never, duration As Single = 0F) As Ellipse
  overload: Global.DebugDraw.Ellipse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillEllipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.FillEllipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  id: FillEllipse(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillEllipse(Vector3, Vector2, Vector3, Color, Int32, Single)
  nameWithType: DebugDraw.FillEllipse(Vector3, Vector2, Vector3, Color, Int32, Single)
  fullName: DebugDraw.FillEllipse(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: FillEllipse
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 746
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled ellipse.\n"
  example: []
  syntax:
    content: public static Ellipse FillEllipse(Vector3 position, Vector2 size, Vector3 facing, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: size
      type: UnityEngine.Vector2
      description: The size/radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Shared Function FillEllipse(position As Vector3, size As Vector2, facing As Vector3, color As Color, segments As Integer = 32, duration As Single = 0F) As Ellipse
  overload: Global.DebugDraw.FillEllipse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Arc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawItems.DrawArcSegments,DebugDrawItems.DrawEllipseAxes,System.Single)
  commentId: M:Global.DebugDraw.Arc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawItems.DrawArcSegments,DebugDrawItems.DrawEllipseAxes,System.Single)
  id: Arc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,DebugDrawItems.DrawArcSegments,DebugDrawItems.DrawEllipseAxes,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Arc(Vector3, Vector2, Vector3, Single, Single, Color, Int32, DrawArcSegments, DrawEllipseAxes, Single)
  nameWithType: DebugDraw.Arc(Vector3, Vector2, Vector3, Single, Single, Color, Int32, DrawArcSegments, DrawEllipseAxes, Single)
  fullName: DebugDraw.Arc(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, System.Single, System.Single, UnityEngine.Color, System.Int32, DebugDrawItems.DrawArcSegments, DebugDrawItems.DrawEllipseAxes, System.Single)
  type: Method
  source:
    id: Arc
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 770
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire arc.\n"
  example: []
  syntax:
    content: public static Ellipse Arc(Vector3 position, Vector2 size, Vector3 facing, float startAngle, float endAngle, Color color, int segments = 32, DrawArcSegments drawArcSegments = DrawArcSegments.OpenOnly, DrawEllipseAxes drawAxes = DrawEllipseAxes.Never, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: size
      type: UnityEngine.Vector2
      description: The size/radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: startAngle
      type: System.Single
      description: The start angle in degrees of the arc.
    - id: endAngle
      type: System.Single
      description: The end angle in degrees of the arc.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: drawArcSegments
      type: DebugDrawItems.DrawArcSegments
      description: Options for connecting the centre of the ellipse and the arc end points.
    - id: drawAxes
      type: DebugDrawItems.DrawEllipseAxes
      description: Options for drawing an X and Y axis inside the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Shared Function Arc(position As Vector3, size As Vector2, facing As Vector3, startAngle As Single, endAngle As Single, color As Color, segments As Integer = 32, drawArcSegments As DrawArcSegments = DrawArcSegments.OpenOnly, drawAxes As DrawEllipseAxes = DrawEllipseAxes.Never, duration As Single = 0F) As Ellipse
  overload: Global.DebugDraw.Arc*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillArc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.FillArc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: FillArc(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillArc(Vector3, Vector2, Vector3, Single, Single, Color, Int32, Single)
  nameWithType: DebugDraw.FillArc(Vector3, Vector2, Vector3, Single, Single, Color, Int32, Single)
  fullName: DebugDraw.FillArc(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, System.Single, System.Single, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: FillArc
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 792
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled arc.\n"
  example: []
  syntax:
    content: public static Ellipse FillArc(Vector3 position, Vector2 size, Vector3 facing, float startAngle, float endAngle, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the ellipse.
    - id: size
      type: UnityEngine.Vector2
      description: The size/radius of the ellipse.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the ellipse is facing.
    - id: startAngle
      type: System.Single
      description: The start angle in degrees of the arc.
    - id: endAngle
      type: System.Single
      description: The end angle in degrees of the arc.
    - id: color
      type: UnityEngine.Color
      description: The colour of the ellipse.
    - id: segments
      type: System.Int32
      description: The resolution of the ellipse.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Ellipse
      description: The ellipse object.
    content.vb: Public Shared Function FillArc(position As Vector3, size As Vector2, facing As Vector3, startAngle As Single, endAngle As Single, color As Color, segments As Integer = 32, duration As Single = 0F) As Ellipse
  overload: Global.DebugDraw.FillArc*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Line(Vector3, Vector3, Color, Color, Single)
  nameWithType: DebugDraw.Line(Vector3, Vector3, Color, Color, Single)
  fullName: DebugDraw.Line(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Line
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 811
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a line.\n"
  example: []
  syntax:
    content: public static Line Line(Vector3 p1, Vector3 p2, Color color1, Color color2, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line&apos;s colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line&apos;s colour at the end.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Line
      description: The Line object.
    content.vb: Public Shared Function Line(p1 As Vector3, p2 As Vector3, color1 As Color, color2 As Color, duration As Single = 0F) As Line
  overload: Global.DebugDraw.Line*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Line(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Line(Vector3, Vector3, Color, Single)
  nameWithType: DebugDraw.Line(Vector3, Vector3, Color, Single)
  fullName: DebugDraw.Line(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Line
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 829
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a line.\n"
  example: []
  syntax:
    content: public static Line Line(Vector3 p1, Vector3 p2, Color color, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: color
      type: UnityEngine.Color
      description: The line&apos;s colour.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist.
    return:
      type: DebugDrawItems.Line
      description: The Line object.
    content.vb: Public Shared Function Line(p1 As Vector3, p2 As Vector3, color As Color, duration As Single = 0F) As Line
  overload: Global.DebugDraw.Line*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Line3D(Vector3, Vector3, Single, Color, Color, Single)
  nameWithType: DebugDraw.Line3D(Vector3, Vector3, Single, Color, Color, Single)
  fullName: DebugDraw.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, UnityEngine.Color, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Line3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 849
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a 3D line that orients itself towards the camera.\n"
  example: []
  syntax:
    content: public static Line3D Line3D(Vector3 p1, Vector3 p2, float size, Color color1, Color color2, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: size
      type: System.Single
      description: The line thickness.
    - id: color1
      type: UnityEngine.Color
      description: The line&apos;s colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line&apos;s colour at the end.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Line3D
      description: The Line object.
    content.vb: Public Shared Function Line3D(p1 As Vector3, p2 As Vector3, size As Single, color1 As Color, color2 As Color, duration As Single = 0F) As Line3D
  overload: Global.DebugDraw.Line3D*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  id: Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Line3D(Vector3, Vector3, Single, Color, Single)
  nameWithType: DebugDraw.Line3D(Vector3, Vector3, Single, Color, Single)
  fullName: DebugDraw.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Line3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 868
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a 3D line that orients itself towards the camera.\n"
  example: []
  syntax:
    content: public static Line3D Line3D(Vector3 p1, Vector3 p2, float size, Color color, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: size
      type: System.Single
      description: The line thickness.
    - id: color
      type: UnityEngine.Color
      description: The line&apos;s colour.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist.
    return:
      type: DebugDrawItems.Line3D
      description: The Line3D object.
    content.vb: Public Shared Function Line3D(p1 As Vector3, p2 As Vector3, size As Single, color As Color, duration As Single = 0F) As Line3D
  overload: Global.DebugDraw.Line3D*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Line3D(Vector3, Vector3, Single, Vector3, Color, Color, Single)
  nameWithType: DebugDraw.Line3D(Vector3, Vector3, Single, Vector3, Color, Color, Single)
  fullName: DebugDraw.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Line3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 889
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a 3D line facing the given direction.\n"
  example: []
  syntax:
    content: public static Line3D Line3D(Vector3 p1, Vector3 p2, float size, Vector3 facing, Color color1, Color color2, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: size
      type: System.Single
      description: The line thickness.
    - id: facing
      type: UnityEngine.Vector3
      description: The forward direction of the line.
    - id: color1
      type: UnityEngine.Color
      description: The line&apos;s colour at the start.
    - id: color2
      type: UnityEngine.Color
      description: The line&apos;s colour at the end.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Line3D
      description: The Line object.
    content.vb: Public Shared Function Line3D(p1 As Vector3, p2 As Vector3, size As Single, facing As Vector3, color1 As Color, color2 As Color, duration As Single = 0F) As Line3D
  overload: Global.DebugDraw.Line3D*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Line3D(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Line3D(Vector3, Vector3, Single, Vector3, Color, Single)
  nameWithType: DebugDraw.Line3D(Vector3, Vector3, Single, Vector3, Color, Single)
  fullName: DebugDraw.Line3D(UnityEngine.Vector3, UnityEngine.Vector3, System.Single, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Line3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 909
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a 3D line that orients itself towards the camera.\n"
  example: []
  syntax:
    content: public static Line3D Line3D(Vector3 p1, Vector3 p2, float size, Vector3 facing, Color color, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The start of the line.
    - id: p2
      type: UnityEngine.Vector3
      description: The end of the line.
    - id: size
      type: System.Single
      description: The line thickness.
    - id: facing
      type: UnityEngine.Vector3
      description: The forward direction of the line.
    - id: color
      type: UnityEngine.Color
      description: The line&apos;s colour.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist.
    return:
      type: DebugDrawItems.Line3D
      description: The Line3D object.
    content.vb: Public Shared Function Line3D(p1 As Vector3, p2 As Vector3, size As Single, facing As Vector3, color As Color, duration As Single = 0F) As Line3D
  overload: Global.DebugDraw.Line3D*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Lines(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  commentId: M:Global.DebugDraw.Lines(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  id: Lines(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Lines(List<Vector3>, List<Color>, Single)
  nameWithType: DebugDraw.Lines(List<Vector3>, List<Color>, Single)
  fullName: DebugDraw.Lines(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Color>, System.Single)
  type: Method
  source:
    id: Lines
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 927
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nBatch draw multiple lines from a positions and colors array.\nBoth arrays must be non-null, of the same size, and multiples of two - two entries for each line.\n"
  example: []
  syntax:
    content: public static Lines Lines(List<Vector3> positions, List<Color> colors, float duration = 0F)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Lines
      description: The Line object.
    content.vb: Public Shared Function Lines(positions As List(Of Vector3), colors As List(Of Color), duration As Single = 0F) As Lines
  overload: Global.DebugDraw.Lines*
  nameWithType.vb: DebugDraw.Lines(List(Of Vector3), List(Of Color), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.Lines(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Color), System.Single)
  name.vb: Lines(List(Of Vector3), List(Of Color), Single)
- uid: Global.DebugDraw.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  commentId: M:Global.DebugDraw.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  id: Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Lines3D(List<Vector3>, List<Single>, List<Color>, Single)
  nameWithType: DebugDraw.Lines3D(List<Vector3>, List<Single>, List<Color>, Single)
  fullName: DebugDraw.Lines3D(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Single>, System.Collections.Generic.List<UnityEngine.Color>, System.Single)
  type: Method
  source:
    id: Lines3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 945
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a batch of 3D lines that orients itself towards the camera.\n"
  example: []
  syntax:
    content: public static Lines3D Lines3D(List<Vector3> positions, List<float> sizes, List<Color> colors, float duration = 0F)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The line thickness, one item for each pair of positions and colors.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Lines3D
      description: The Line object.
    content.vb: Public Shared Function Lines3D(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), duration As Single = 0F) As Lines3D
  overload: Global.DebugDraw.Lines3D*
  nameWithType.vb: DebugDraw.Lines3D(List(Of Vector3), List(Of Single), List(Of Color), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.Lines3D(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Single), System.Collections.Generic.List(Of UnityEngine.Color), System.Single)
  name.vb: Lines3D(List(Of Vector3), List(Of Single), List(Of Color), Single)
- uid: Global.DebugDraw.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  commentId: M:Global.DebugDraw.Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  id: Lines3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Lines3D(List<Vector3>, List<Single>, List<Color>, Nullable<Vector3>, Single)
  nameWithType: DebugDraw.Lines3D(List<Vector3>, List<Single>, List<Color>, Nullable<Vector3>, Single)
  fullName: DebugDraw.Lines3D(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Single>, System.Collections.Generic.List<UnityEngine.Color>, System.Nullable<UnityEngine.Vector3>, System.Single)
  type: Method
  source:
    id: Lines3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 965
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a 3D line facing the given direction.\n"
  example: []
  syntax:
    content: public static Lines3D Lines3D(List<Vector3> positions, List<float> sizes, List<Color> colors, Vector3? facing, float duration = 0F)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The line thickness, one item for each pair of positions and colors.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: facing
      type: System.Nullable{UnityEngine.Vector3}
      description: >-
        The forward direction of the line. Automatically updated if faceCamera is true.

        If null the lines will automatically rotate to face the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Lines3D
      description: The Line object.
    content.vb: Public Shared Function Lines3D(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), facing As Vector3?, duration As Single = 0F) As Lines3D
  overload: Global.DebugDraw.Lines3D*
  nameWithType.vb: DebugDraw.Lines3D(List(Of Vector3), List(Of Single), List(Of Color), Nullable(Of Vector3), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.Lines3D(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Single), System.Collections.Generic.List(Of UnityEngine.Color), System.Nullable(Of UnityEngine.Vector3), System.Single)
  name.vb: Lines3D(List(Of Vector3), List(Of Single), List(Of Color), Nullable(Of Vector3), Single)
- uid: Global.DebugDraw.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Collections.Generic.List{System.Int32},System.Single)
  commentId: M:Global.DebugDraw.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Collections.Generic.List{System.Int32},System.Single)
  id: Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Collections.Generic.List{System.Int32},System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Mesh(List<Vector3>, List<Color>, List<Int32>, Single)
  nameWithType: DebugDraw.Mesh(List<Vector3>, List<Color>, List<Int32>, Single)
  fullName: DebugDraw.Mesh(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Color>, System.Collections.Generic.List<System.Int32>, System.Single)
  type: Method
  source:
    id: Mesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 983
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wireframe mesh.\n"
  example: []
  syntax:
    content: public static MeshItem Mesh(List<Vector3> vertices, List<Color> colors, List<int> indices, float duration = 0F)
    parameters:
    - id: vertices
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The list of vertices.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The list of colors.
    - id: indices
      type: System.Collections.Generic.List{System.Int32}
      description: The list of triangle indices.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.MeshItem
      description: The Line object.
    content.vb: Public Shared Function Mesh(vertices As List(Of Vector3), colors As List(Of Color), indices As List(Of Integer), duration As Single = 0F) As MeshItem
  overload: Global.DebugDraw.Mesh*
  nameWithType.vb: DebugDraw.Mesh(List(Of Vector3), List(Of Color), List(Of Int32), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.Mesh(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Color), System.Collections.Generic.List(Of System.Int32), System.Single)
  name.vb: Mesh(List(Of Vector3), List(Of Color), List(Of Int32), Single)
- uid: Global.DebugDraw.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},UnityEngine.Color,System.Single)
  id: Mesh(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Int32},UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Mesh(List<Vector3>, List<Int32>, Color, Single)
  nameWithType: DebugDraw.Mesh(List<Vector3>, List<Int32>, Color, Single)
  fullName: DebugDraw.Mesh(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Int32>, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Mesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1001
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wireframe mesh with a single color.\n"
  example: []
  syntax:
    content: public static MeshItem Mesh(List<Vector3> vertices, List<int> indices, Color color, float duration = 0F)
    parameters:
    - id: vertices
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The list of vertices.
    - id: indices
      type: System.Collections.Generic.List{System.Int32}
      description: The list of triangle indices.
    - id: color
      type: UnityEngine.Color
      description: The color of the mesh.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.MeshItem
      description: The Line object.
    content.vb: Public Shared Function Mesh(vertices As List(Of Vector3), indices As List(Of Integer), color As Color, duration As Single = 0F) As MeshItem
  overload: Global.DebugDraw.Mesh*
  nameWithType.vb: DebugDraw.Mesh(List(Of Vector3), List(Of Int32), Color, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.Mesh(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Int32), UnityEngine.Color, System.Single)
  name.vb: Mesh(List(Of Vector3), List(Of Int32), Color, Single)
- uid: Global.DebugDraw.Mesh(UnityEngine.Mesh,System.Nullable{UnityEngine.Color},System.Single)
  commentId: M:Global.DebugDraw.Mesh(UnityEngine.Mesh,System.Nullable{UnityEngine.Color},System.Single)
  id: Mesh(UnityEngine.Mesh,System.Nullable{UnityEngine.Color},System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Mesh(Mesh, Nullable<Color>, Single)
  nameWithType: DebugDraw.Mesh(Mesh, Nullable<Color>, Single)
  fullName: DebugDraw.Mesh(UnityEngine.Mesh, System.Nullable<UnityEngine.Color>, System.Single)
  type: Method
  source:
    id: Mesh
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1019
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wireframe mesh. This will allocate new lists and fetch the mesh data so it&apos;s advisable to\nnot call this every frame and instead create it once keep a reference to it.\n"
  example: []
  syntax:
    content: public static MeshItem Mesh(Mesh mesh, Color? color, float duration = 0F)
    parameters:
    - id: mesh
      type: UnityEngine.Mesh
      description: The mesh.
    - id: color
      type: System.Nullable{UnityEngine.Color}
      description: The color of the mesh. If null the mesh must have color data associated with it
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.MeshItem
      description: The Line object.
    content.vb: Public Shared Function Mesh(mesh As Mesh, color As Color?, duration As Single = 0F) As MeshItem
  overload: Global.DebugDraw.Mesh*
  nameWithType.vb: DebugDraw.Mesh(Mesh, Nullable(Of Color), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.Mesh(UnityEngine.Mesh, System.Nullable(Of UnityEngine.Color), System.Single)
  name.vb: Mesh(Mesh, Nullable(Of Color), Single)
- uid: Global.DebugDraw.Point(UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Point(UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Point(UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Point(Vector3, Color, Single)
  nameWithType: DebugDraw.Point(Vector3, Color, Single)
  fullName: DebugDraw.Point(UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Point
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1036
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a point that has no size.\n"
  example: []
  syntax:
    content: public static Point Point(Vector3 position, Color color, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The position of the point.
    - id: color
      type: UnityEngine.Color
      description: The point&apos;s.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Point
      description: The Line object.
    content.vb: Public Shared Function Point(position As Vector3, color As Color, duration As Single = 0F) As Point
  overload: Global.DebugDraw.Point*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Points(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  commentId: M:Global.DebugDraw.Points(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  id: Points(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Points(List<Vector3>, List<Color>, Single)
  nameWithType: DebugDraw.Points(List<Vector3>, List<Color>, Single)
  fullName: DebugDraw.Points(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<UnityEngine.Color>, System.Single)
  type: Method
  source:
    id: Points
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1054
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nBatch draw multiple points from a positions and colors array.\nBoth arrays must be non-null and of the same size.\n"
  example: []
  syntax:
    content: public static Points Points(List<Vector3> positions, List<Color> colors, float duration = 0F)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Points
      description: The Line object.
    content.vb: Public Shared Function Points(positions As List(Of Vector3), colors As List(Of Color), duration As Single = 0F) As Points
  overload: Global.DebugDraw.Points*
  nameWithType.vb: DebugDraw.Points(List(Of Vector3), List(Of Color), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDraw.Points(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of UnityEngine.Color), System.Single)
  name.vb: Points(List(Of Vector3), List(Of Color), Single)
- uid: Global.DebugDraw.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Quad(Vector3, Vector3, Vector3, Vector3, Color, Single)
  nameWithType: DebugDraw.Quad(Vector3, Vector3, Vector3, Vector3, Color, Single)
  fullName: DebugDraw.Quad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Quad
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1074
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire quad.\n"
  example: []
  syntax:
    content: public static Quad Quad(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Color color, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the quad.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the quad.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: p4
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: color
      type: UnityEngine.Color
      description: The colour of the quad.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Quad
      description: The ellipse object.
    content.vb: Public Shared Function Quad(p1 As Vector3, p2 As Vector3, p3 As Vector3, p4 As Vector3, color As Color, duration As Single = 0F) As Quad
  overload: Global.DebugDraw.Quad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Quad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Quad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, Single)
  nameWithType: DebugDraw.Quad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, Single)
  fullName: DebugDraw.Quad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Quad
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1097
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire quad.\n"
  example: []
  syntax:
    content: public static Quad Quad(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Color color1, Color color2, Color color3, Color color4, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the quad.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the quad.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: p4
      type: UnityEngine.Vector3
      description: The fourth point of the quad.
    - id: color1
      type: UnityEngine.Color
      description: The color of the quad&apos;s first point..
    - id: color2
      type: UnityEngine.Color
      description: The color of the quad&apos;s second point.
    - id: color3
      type: UnityEngine.Color
      description: The color of the quad&apos;s third point.
    - id: color4
      type: UnityEngine.Color
      description: The color of the quad&apos;s fourth point.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Quad
      description: The ellipse object.
    content.vb: Public Shared Function Quad(p1 As Vector3, p2 As Vector3, p3 As Vector3, p4 As Vector3, color1 As Color, color2 As Color, color3 As Color, color4 As Color, duration As Single = 0F) As Quad
  overload: Global.DebugDraw.Quad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Single)
  nameWithType: DebugDraw.FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Single)
  fullName: DebugDraw.FillQuad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: FillQuad
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1117
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled quad.\n"
  example: []
  syntax:
    content: public static Quad FillQuad(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Color color, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the quad.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the quad.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: p4
      type: UnityEngine.Vector3
      description: The fourth point of the quad.
    - id: color
      type: UnityEngine.Color
      description: The colour of the quad.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Quad
      description: The ellipse object.
    content.vb: Public Shared Function FillQuad(p1 As Vector3, p2 As Vector3, p3 As Vector3, p4 As Vector3, color As Color, duration As Single = 0F) As Quad
  overload: Global.DebugDraw.FillQuad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: FillQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, Single)
  nameWithType: DebugDraw.FillQuad(Vector3, Vector3, Vector3, Vector3, Color, Color, Color, Color, Single)
  fullName: DebugDraw.FillQuad(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: FillQuad
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1140
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled quad.\n"
  example: []
  syntax:
    content: public static Quad FillQuad(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4, Color color1, Color color2, Color color3, Color color4, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the quad.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the quad.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the quad.
    - id: p4
      type: UnityEngine.Vector3
      description: The fourth point of the quad.
    - id: color1
      type: UnityEngine.Color
      description: The color of the quad&apos;s first point..
    - id: color2
      type: UnityEngine.Color
      description: The color of the quad&apos;s second point.
    - id: color3
      type: UnityEngine.Color
      description: The color of the quad&apos;s third point.
    - id: color4
      type: UnityEngine.Color
      description: The color of the quad&apos;s fourth point.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Quad
      description: The ellipse object.
    content.vb: Public Shared Function FillQuad(p1 As Vector3, p2 As Vector3, p3 As Vector3, p4 As Vector3, color1 As Color, color2 As Color, color3 As Color, color4 As Color, duration As Single = 0F) As Quad
  overload: Global.DebugDraw.FillQuad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillRectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.FillRectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: FillRectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillRectangle(Vector3, Single, Vector3, Color, Single)
  nameWithType: DebugDraw.FillRectangle(Vector3, Single, Vector3, Color, Single)
  fullName: DebugDraw.FillRectangle(UnityEngine.Vector3, System.Single, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: FillRectangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1159
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled square.\n"
  example: []
  syntax:
    content: public static Rectangle FillRectangle(Vector3 position, float size, Vector3 facing, Color color, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the square.
    - id: size
      type: System.Single
      description: The half size of the square.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the square is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Rectangle
      description: The ellipse object.
    content.vb: Public Shared Function FillRectangle(position As Vector3, size As Single, facing As Vector3, color As Color, duration As Single = 0F) As Rectangle
  overload: Global.DebugDraw.FillRectangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Rectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Rectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Rectangle(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Rectangle(Vector3, Single, Vector3, Color, Single)
  nameWithType: DebugDraw.Rectangle(Vector3, Single, Vector3, Color, Single)
  fullName: DebugDraw.Rectangle(UnityEngine.Vector3, System.Single, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Rectangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1178
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire square.\n"
  example: []
  syntax:
    content: public static Rectangle Rectangle(Vector3 position, float size, Vector3 facing, Color color, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the square.
    - id: size
      type: System.Single
      description: The half size of the square.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the square is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Rectangle
      description: The ellipse object.
    content.vb: Public Shared Function Rectangle(position As Vector3, size As Single, facing As Vector3, color As Color, duration As Single = 0F) As Rectangle
  overload: Global.DebugDraw.Rectangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillRectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.FillRectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: FillRectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillRectangle(Vector3, Vector2, Vector3, Color, Single)
  nameWithType: DebugDraw.FillRectangle(Vector3, Vector2, Vector3, Color, Single)
  fullName: DebugDraw.FillRectangle(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: FillRectangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1197
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled square.\n"
  example: []
  syntax:
    content: public static Rectangle FillRectangle(Vector3 position, Vector2 size, Vector3 facing, Color color, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the square.
    - id: size
      type: UnityEngine.Vector2
      description: The half size of the square.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the square is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Rectangle
      description: The ellipse object.
    content.vb: Public Shared Function FillRectangle(position As Vector3, size As Vector2, facing As Vector3, color As Color, duration As Single = 0F) As Rectangle
  overload: Global.DebugDraw.FillRectangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Rectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Rectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Rectangle(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Rectangle(Vector3, Vector2, Vector3, Color, Single)
  nameWithType: DebugDraw.Rectangle(Vector3, Vector2, Vector3, Color, Single)
  fullName: DebugDraw.Rectangle(UnityEngine.Vector3, UnityEngine.Vector2, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Rectangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1216
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire square.\n"
  example: []
  syntax:
    content: public static Rectangle Rectangle(Vector3 position, Vector2 size, Vector3 facing, Color color, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the square.
    - id: size
      type: UnityEngine.Vector2
      description: The half size of the square.
    - id: facing
      type: UnityEngine.Vector3
      description: The normal or direction the front of the square is facing.
    - id: color
      type: UnityEngine.Color
      description: The colour of the square.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Rectangle
      description: The ellipse object.
    content.vb: Public Shared Function Rectangle(position As Vector3, size As Vector2, facing As Vector3, color As Color, duration As Single = 0F) As Rectangle
  overload: Global.DebugDraw.Rectangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Sphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.Sphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: Sphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Sphere(Vector3, Single, Color, Int32, Single)
  nameWithType: DebugDraw.Sphere(Vector3, Single, Color, Int32, Single)
  fullName: DebugDraw.Sphere(UnityEngine.Vector3, System.Single, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: Sphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1235
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a sphere comprised of a circle for each axis.\n"
  example: []
  syntax:
    content: public static Sphere Sphere(Vector3 position, float radius, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: System.Single
      description: The radius of the sphere in each axis.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Shared Function Sphere(position As Vector3, radius As Single, color As Color, segments As Integer = 32, duration As Single = 0F) As Sphere
  overload: Global.DebugDraw.Sphere*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  id: Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Sphere(Vector3, Vector3, Color, Int32, Single)
  nameWithType: DebugDraw.Sphere(Vector3, Vector3, Color, Int32, Single)
  fullName: DebugDraw.Sphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: Sphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1254
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a sphere comprised of a circle for each axis.\n"
  example: []
  syntax:
    content: public static Sphere Sphere(Vector3 position, Vector3 radius, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: UnityEngine.Vector3
      description: The radius of the sphere in each axis.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Shared Function Sphere(position As Vector3, radius As Vector3, color As Color, segments As Integer = 32, duration As Single = 0F) As Sphere
  overload: Global.DebugDraw.Sphere*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  id: Sphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Sphere(Vector3, Vector3, Quaternion, Color, Int32, Single)
  nameWithType: DebugDraw.Sphere(Vector3, Vector3, Quaternion, Color, Int32, Single)
  fullName: DebugDraw.Sphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: Sphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1274
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a sphere comprised of a circle for each axis.\n"
  example: []
  syntax:
    content: public static Sphere Sphere(Vector3 position, Vector3 radius, Quaternion orientation, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: UnityEngine.Vector3
      description: The radius of the sphere in each axis.
    - id: orientation
      type: UnityEngine.Quaternion
      description: The orientation of the sphere.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Shared Function Sphere(position As Vector3, radius As Vector3, orientation As Quaternion, color As Color, segments As Integer = 32, duration As Single = 0F) As Sphere
  overload: Global.DebugDraw.Sphere*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.WireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.WireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  id: WireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: WireSphere(Vector3, Single, Color, Int32, Single)
  nameWithType: DebugDraw.WireSphere(Vector3, Single, Color, Int32, Single)
  fullName: DebugDraw.WireSphere(UnityEngine.Vector3, System.Single, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: WireSphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1293
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a full wireframe sphere.\n"
  example: []
  syntax:
    content: public static Sphere WireSphere(Vector3 position, float radius, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: System.Single
      description: The radius of the sphere in each axis.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Shared Function WireSphere(position As Vector3, radius As Single, color As Color, segments As Integer = 32, duration As Single = 0F) As Sphere
  overload: Global.DebugDraw.WireSphere*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  id: WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: WireSphere(Vector3, Vector3, Color, Int32, Single)
  nameWithType: DebugDraw.WireSphere(Vector3, Vector3, Color, Int32, Single)
  fullName: DebugDraw.WireSphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: WireSphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1312
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a full wireframe sphere.\n"
  example: []
  syntax:
    content: public static Sphere WireSphere(Vector3 position, Vector3 radius, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: UnityEngine.Vector3
      description: The radius of the sphere in each axis.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere. If set to zero will be adjusted based on the distance to the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Shared Function WireSphere(position As Vector3, radius As Vector3, color As Color, segments As Integer = 32, duration As Single = 0F) As Sphere
  overload: Global.DebugDraw.WireSphere*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  commentId: M:Global.DebugDraw.WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  id: WireSphere(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Color,System.Int32,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: WireSphere(Vector3, Vector3, Quaternion, Color, Int32, Single)
  nameWithType: DebugDraw.WireSphere(Vector3, Vector3, Quaternion, Color, Int32, Single)
  fullName: DebugDraw.WireSphere(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Color, System.Int32, System.Single)
  type: Method
  source:
    id: WireSphere
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1332
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a full wireframe sphere.\n"
  example: []
  syntax:
    content: public static Sphere WireSphere(Vector3 position, Vector3 radius, Quaternion orientation, Color color, int segments = 32, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The centre of the sphere.
    - id: radius
      type: UnityEngine.Vector3
      description: The radius of the sphere in each axis.
    - id: orientation
      type: UnityEngine.Quaternion
      description: The orientation of the sphere.
    - id: color
      type: UnityEngine.Color
      description: The color of the sphere.
    - id: segments
      type: System.Int32
      description: The resolution of the sphere.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Sphere
      description: The Sphere object.
    content.vb: Public Shared Function WireSphere(position As Vector3, radius As Vector3, orientation As Quaternion, color As Color, segments As Integer = 32, duration As Single = 0F) As Sphere
  overload: Global.DebugDraw.WireSphere*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Text(UnityEngine.Vector3,System.String,UnityEngine.Color,UnityEngine.TextAnchor,System.Single,System.Single)
  commentId: M:Global.DebugDraw.Text(UnityEngine.Vector3,System.String,UnityEngine.Color,UnityEngine.TextAnchor,System.Single,System.Single)
  id: Text(UnityEngine.Vector3,System.String,UnityEngine.Color,UnityEngine.TextAnchor,System.Single,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Text(Vector3, String, Color, TextAnchor, Single, Single)
  nameWithType: DebugDraw.Text(Vector3, String, Color, TextAnchor, Single, Single)
  fullName: DebugDraw.Text(UnityEngine.Vector3, System.String, UnityEngine.Color, UnityEngine.TextAnchor, System.Single, System.Single)
  type: Method
  source:
    id: Text
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1352
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a line.\n"
  example: []
  syntax:
    content: public static Text Text(Vector3 position, string text, Color color, TextAnchor align = TextAnchor.UpperLeft, float scale = 1F, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The world space position of the text.
    - id: text
      type: System.String
      description: The text to display.
    - id: color
      type: UnityEngine.Color
      description: The text color.
    - id: align
      type: UnityEngine.TextAnchor
      description: Where to anchor the text.
    - id: scale
      type: System.Single
      description: The text scale. Set to 1 for default.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Text
      description: The Text object.
    content.vb: Public Shared Function Text(position As Vector3, text As String, color As Color, align As TextAnchor = TextAnchor.UpperLeft, scale As Single = 1F, duration As Single = 0F) As Text
  overload: Global.DebugDraw.Text*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Text(UnityEngine.Vector3,System.String,UnityEngine.TextAnchor,System.Single,System.Single)
  commentId: M:Global.DebugDraw.Text(UnityEngine.Vector3,System.String,UnityEngine.TextAnchor,System.Single,System.Single)
  id: Text(UnityEngine.Vector3,System.String,UnityEngine.TextAnchor,System.Single,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Text(Vector3, String, TextAnchor, Single, Single)
  nameWithType: DebugDraw.Text(Vector3, String, TextAnchor, Single, Single)
  fullName: DebugDraw.Text(UnityEngine.Vector3, System.String, UnityEngine.TextAnchor, System.Single, System.Single)
  type: Method
  source:
    id: Text
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1371
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a line.\n"
  example: []
  syntax:
    content: public static Text Text(Vector3 position, string text, TextAnchor align = TextAnchor.UpperLeft, float scale = 1F, float duration = 0F)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: The world space position of the text.
    - id: text
      type: System.String
      description: The text to display.
    - id: align
      type: UnityEngine.TextAnchor
      description: Where to anchor the text.
    - id: scale
      type: System.Single
      description: The text scale. Set to 1 for default.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist.
    return:
      type: DebugDrawItems.Text
      description: The Text object.
    content.vb: Public Shared Function Text(position As Vector3, text As String, align As TextAnchor = TextAnchor.UpperLeft, scale As Single = 1F, duration As Single = 0F) As Text
  overload: Global.DebugDraw.Text*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Triangle(Vector3, Vector3, Vector3, Color, Single)
  nameWithType: DebugDraw.Triangle(Vector3, Vector3, Vector3, Color, Single)
  fullName: DebugDraw.Triangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Triangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1390
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire triangle.\n"
  example: []
  syntax:
    content: public static Triangle Triangle(Vector3 p1, Vector3 p2, Vector3 p3, Color color, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the triangle.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the triangle.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the triangle.
    - id: color
      type: UnityEngine.Color
      description: The colour of the triangle.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Triangle
      description: The ellipse object.
    content.vb: Public Shared Function Triangle(p1 As Vector3, p2 As Vector3, p3 As Vector3, color As Color, duration As Single = 0F) As Triangle
  overload: Global.DebugDraw.Triangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: Triangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: Triangle(Vector3, Vector3, Vector3, Color, Color, Color, Single)
  nameWithType: DebugDraw.Triangle(Vector3, Vector3, Vector3, Color, Color, Color, Single)
  fullName: DebugDraw.Triangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: Triangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1411
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a wire triangle.\n"
  example: []
  syntax:
    content: public static Triangle Triangle(Vector3 p1, Vector3 p2, Vector3 p3, Color color1, Color color2, Color color3, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the triangle.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the triangle.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the triangle.
    - id: color1
      type: UnityEngine.Color
      description: The color of the triangle&apos;s first point..
    - id: color2
      type: UnityEngine.Color
      description: The color of the triangle&apos;s second point.
    - id: color3
      type: UnityEngine.Color
      description: The color of the triangle&apos;s third point.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Triangle
      description: The ellipse object.
    content.vb: Public Shared Function Triangle(p1 As Vector3, p2 As Vector3, p3 As Vector3, color1 As Color, color2 As Color, color3 As Color, duration As Single = 0F) As Triangle
  overload: Global.DebugDraw.Triangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  id: FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillTriangle(Vector3, Vector3, Vector3, Color, Single)
  nameWithType: DebugDraw.FillTriangle(Vector3, Vector3, Vector3, Color, Single)
  fullName: DebugDraw.FillTriangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: FillTriangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1430
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled triangle.\n"
  example: []
  syntax:
    content: public static Triangle FillTriangle(Vector3 p1, Vector3 p2, Vector3 p3, Color color, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the triangle.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the triangle.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the triangle.
    - id: color
      type: UnityEngine.Color
      description: The colour of the triangle.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Triangle
      description: The ellipse object.
    content.vb: Public Shared Function FillTriangle(p1 As Vector3, p2 As Vector3, p3 As Vector3, color As Color, duration As Single = 0F) As Triangle
  overload: Global.DebugDraw.FillTriangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.DebugDraw.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  commentId: M:Global.DebugDraw.FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  id: FillTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,UnityEngine.Color,System.Single)
  parent: Global.DebugDraw
  langs:
  - csharp
  - vb
  name: FillTriangle(Vector3, Vector3, Vector3, Color, Color, Color, Single)
  nameWithType: DebugDraw.FillTriangle(Vector3, Vector3, Vector3, Color, Color, Color, Single)
  fullName: DebugDraw.FillTriangle(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color, UnityEngine.Color, UnityEngine.Color, System.Single)
  type: Method
  source:
    id: FillTriangle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\DebugDrawMethods.cs
    startLine: 1451
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nDraws a filled triangle.\n"
  example: []
  syntax:
    content: public static Triangle FillTriangle(Vector3 p1, Vector3 p2, Vector3 p3, Color color1, Color color2, Color color3, float duration = 0F)
    parameters:
    - id: p1
      type: UnityEngine.Vector3
      description: The first point of the triangle.
    - id: p2
      type: UnityEngine.Vector3
      description: The second point of the triangle.
    - id: p3
      type: UnityEngine.Vector3
      description: The third point of the triangle.
    - id: color1
      type: UnityEngine.Color
      description: The color of the triangle&apos;s first point..
    - id: color2
      type: UnityEngine.Color
      description: The color of the triangle&apos;s second point.
    - id: color3
      type: UnityEngine.Color
      description: The color of the triangle&apos;s third point.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Triangle
      description: The ellipse object.
    content.vb: Public Shared Function FillTriangle(p1 As Vector3, p2 As Vector3, p3 As Vector3, color1 As Color, color2 As Color, color3 As Color, duration As Single = 0F) As Triangle
  overload: Global.DebugDraw.FillTriangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Matrix4x4
  commentId: T:UnityEngine.Matrix4x4
  parent: UnityEngine
  isExternal: true
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: UnityEngine.Matrix4x4
- uid: UnityEngine.Quaternion
  commentId: T:UnityEngine.Quaternion
  parent: UnityEngine
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: UnityEngine.Quaternion
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine.GUIStyle
  commentId: T:UnityEngine.GUIStyle
  parent: UnityEngine
  isExternal: true
  name: GUIStyle
  nameWithType: GUIStyle
  fullName: UnityEngine.GUIStyle
- uid: Global.DebugDraw.useFixedUpdate*
  commentId: Overload:Global.DebugDraw.useFixedUpdate
  name: useFixedUpdate
  nameWithType: DebugDraw.useFixedUpdate
  fullName: DebugDraw.useFixedUpdate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Global.DebugDraw.isActive*
  commentId: Overload:Global.DebugDraw.isActive
  name: isActive
  nameWithType: DebugDraw.isActive
  fullName: DebugDraw.isActive
- uid: Global.DebugDraw.isPlaying*
  commentId: Overload:Global.DebugDraw.isPlaying
  name: isPlaying
  nameWithType: DebugDraw.isPlaying
  fullName: DebugDraw.isPlaying
- uid: Global.DebugDraw.color*
  commentId: Overload:Global.DebugDraw.color
  name: color
  nameWithType: DebugDraw.color
  fullName: DebugDraw.color
- uid: Global.DebugDraw.transform*
  commentId: Overload:Global.DebugDraw.transform
  name: transform
  nameWithType: DebugDraw.transform
  fullName: DebugDraw.transform
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<UnityEngine.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of UnityEngine.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.Text.SetUseWorldSize(System.Boolean)
  commentId: M:DebugDrawItems.Text.SetUseWorldSize(System.Boolean)
  isExternal: true
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Global.DebugDraw.pointMesh*
  commentId: Overload:Global.DebugDraw.pointMesh
  name: pointMesh
  nameWithType: DebugDraw.pointMesh
  fullName: DebugDraw.pointMesh
- uid: Global.DebugDrawMesh
  commentId: T:Global.DebugDrawMesh
  name: DebugDrawMesh
  nameWithType: DebugDrawMesh
  fullName: DebugDrawMesh
- uid: Global.DebugDraw.lineMesh*
  commentId: Overload:Global.DebugDraw.lineMesh
  name: lineMesh
  nameWithType: DebugDraw.lineMesh
  fullName: DebugDraw.lineMesh
- uid: Global.DebugDraw.triangleMesh*
  commentId: Overload:Global.DebugDraw.triangleMesh
  name: triangleMesh
  nameWithType: DebugDraw.triangleMesh
  fullName: DebugDraw.triangleMesh
- uid: Global.DebugDraw.cam*
  commentId: Overload:Global.DebugDraw.cam
  name: cam
  nameWithType: DebugDraw.cam
  fullName: DebugDraw.cam
- uid: UnityEngine.Camera
  commentId: T:UnityEngine.Camera
  parent: UnityEngine
  isExternal: true
  name: Camera
  nameWithType: Camera
  fullName: UnityEngine.Camera
- uid: Global.DebugDraw.camTransform*
  commentId: Overload:Global.DebugDraw.camTransform
  name: camTransform
  nameWithType: DebugDraw.camTransform
  fullName: DebugDraw.camTransform
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: Global.DebugDraw.InitCamera*
  commentId: Overload:Global.DebugDraw.InitCamera
  name: InitCamera
  nameWithType: DebugDraw.InitCamera
  fullName: DebugDraw.InitCamera
- uid: Global.DebugDraw.Clear*
  commentId: Overload:Global.DebugDraw.Clear
  name: Clear
  nameWithType: DebugDraw.Clear
  fullName: DebugDraw.Clear
- uid: Global.DebugDraw.SetInvertColours*
  commentId: Overload:Global.DebugDraw.SetInvertColours
  name: SetInvertColours
  nameWithType: DebugDraw.SetInvertColours
  fullName: DebugDraw.SetInvertColours
- uid: Global.DebugDraw.SetCulling*
  commentId: Overload:Global.DebugDraw.SetCulling
  name: SetCulling
  nameWithType: DebugDraw.SetCulling
  fullName: DebugDraw.SetCulling
- uid: UnityEngine.Rendering.CullMode
  commentId: T:UnityEngine.Rendering.CullMode
  parent: UnityEngine.Rendering
  isExternal: true
  name: CullMode
  nameWithType: CullMode
  fullName: UnityEngine.Rendering.CullMode
- uid: UnityEngine.Rendering
  commentId: N:UnityEngine.Rendering
  isExternal: true
  name: UnityEngine.Rendering
  nameWithType: UnityEngine.Rendering
  fullName: UnityEngine.Rendering
- uid: Global.DebugDraw.SetDepthTesting*
  commentId: Overload:Global.DebugDraw.SetDepthTesting
  name: SetDepthTesting
  nameWithType: DebugDraw.SetDepthTesting
  fullName: DebugDraw.SetDepthTesting
- uid: Global.DebugDraw.PushState*
  commentId: Overload:Global.DebugDraw.PushState
  name: PushState
  nameWithType: DebugDraw.PushState
  fullName: DebugDraw.PushState
- uid: Global.DebugDraw.PopState*
  commentId: Overload:Global.DebugDraw.PopState
  name: PopState
  nameWithType: DebugDraw.PopState
  fullName: DebugDraw.PopState
- uid: Global.DebugDraw.GetTime*
  commentId: Overload:Global.DebugDraw.GetTime
  name: GetTime
  nameWithType: DebugDraw.GetTime
  fullName: DebugDraw.GetTime
- uid: Global.DebugDraw.FindBestAxisVectors*
  commentId: Overload:Global.DebugDraw.FindBestAxisVectors
  name: FindBestAxisVectors
  nameWithType: DebugDraw.FindBestAxisVectors
  fullName: DebugDraw.FindBestAxisVectors
- uid: Global.DebugDraw.FindAxisVectors*
  commentId: Overload:Global.DebugDraw.FindAxisVectors
  name: FindAxisVectors
  nameWithType: DebugDraw.FindAxisVectors
  fullName: DebugDraw.FindAxisVectors
- uid: Global.DebugDraw.FindPerpendicular*
  commentId: Overload:Global.DebugDraw.FindPerpendicular
  name: FindPerpendicular
  nameWithType: DebugDraw.FindPerpendicular
  fullName: DebugDraw.FindPerpendicular
- uid: Global.DebugDraw.DistanceFromCamera*
  commentId: Overload:Global.DebugDraw.DistanceFromCamera
  name: DistanceFromCamera
  nameWithType: DebugDraw.DistanceFromCamera
  fullName: DebugDraw.DistanceFromCamera
- uid: Global.DebugDraw.CalculateFrustumHeight*
  commentId: Overload:Global.DebugDraw.CalculateFrustumHeight
  name: CalculateFrustumHeight
  nameWithType: DebugDraw.CalculateFrustumHeight
  fullName: DebugDraw.CalculateFrustumHeight
- uid: Global.DebugDraw.AutoResolution*
  commentId: Overload:Global.DebugDraw.AutoResolution
  name: AutoResolution
  nameWithType: DebugDraw.AutoResolution
  fullName: DebugDraw.AutoResolution
- uid: Global.DebugDraw.Ray*
  commentId: Overload:Global.DebugDraw.Ray
  name: Ray
  nameWithType: DebugDraw.Ray
  fullName: DebugDraw.Ray
- uid: UnityEngine.RaycastHit
  commentId: T:UnityEngine.RaycastHit
  parent: UnityEngine
  isExternal: true
  name: RaycastHit
  nameWithType: RaycastHit
  fullName: UnityEngine.RaycastHit
- uid: Global.DebugDraw.Arrow*
  commentId: Overload:Global.DebugDraw.Arrow
  name: Arrow
  nameWithType: DebugDraw.Arrow
  fullName: DebugDraw.Arrow
- uid: DebugDrawItems.ArrowShape
  commentId: T:DebugDrawItems.ArrowShape
  parent: DebugDrawItems
  name: ArrowShape
  nameWithType: ArrowShape
  fullName: DebugDrawItems.ArrowShape
- uid: DebugDrawItems.Arrow
  commentId: T:DebugDrawItems.Arrow
  parent: DebugDrawItems
  name: Arrow
  nameWithType: Arrow
  fullName: DebugDrawItems.Arrow
- uid: DebugDrawItems
  commentId: N:DebugDrawItems
  name: DebugDrawItems
  nameWithType: DebugDrawItems
  fullName: DebugDrawItems
- uid: Global.DebugDraw.Axes*
  commentId: Overload:Global.DebugDraw.Axes
  name: Axes
  nameWithType: DebugDraw.Axes
  fullName: DebugDraw.Axes
- uid: DebugDrawItems.Axes
  commentId: T:DebugDrawItems.Axes
  parent: DebugDrawItems
  name: Axes
  nameWithType: Axes
  fullName: DebugDrawItems.Axes
- uid: Global.DebugDraw.Box*
  commentId: Overload:Global.DebugDraw.Box
  name: Box
  nameWithType: DebugDraw.Box
  fullName: DebugDraw.Box
- uid: DebugDrawItems.Box
  commentId: T:DebugDrawItems.Box
  parent: DebugDrawItems
  name: Box
  nameWithType: Box
  fullName: DebugDrawItems.Box
- uid: Global.DebugDraw.Capsule*
  commentId: Overload:Global.DebugDraw.Capsule
  name: Capsule
  nameWithType: DebugDraw.Capsule
  fullName: DebugDraw.Capsule
- uid: DebugDrawItems.Capsule
  commentId: T:DebugDrawItems.Capsule
  parent: DebugDrawItems
  name: Capsule
  nameWithType: Capsule
  fullName: DebugDrawItems.Capsule
- uid: Global.DebugDraw.WireCapsule*
  commentId: Overload:Global.DebugDraw.WireCapsule
  name: WireCapsule
  nameWithType: DebugDraw.WireCapsule
  fullName: DebugDraw.WireCapsule
- uid: Global.DebugDraw.Cone*
  commentId: Overload:Global.DebugDraw.Cone
  name: Cone
  nameWithType: DebugDraw.Cone
  fullName: DebugDraw.Cone
- uid: DebugDrawItems.Cone
  commentId: T:DebugDrawItems.Cone
  parent: DebugDrawItems
  name: Cone
  nameWithType: Cone
  fullName: DebugDrawItems.Cone
- uid: Global.DebugDraw.WireCone*
  commentId: Overload:Global.DebugDraw.WireCone
  name: WireCone
  nameWithType: DebugDraw.WireCone
  fullName: DebugDraw.WireCone
- uid: Global.DebugDraw.Cylinder*
  commentId: Overload:Global.DebugDraw.Cylinder
  name: Cylinder
  nameWithType: DebugDraw.Cylinder
  fullName: DebugDraw.Cylinder
- uid: DebugDrawItems.Cylinder
  commentId: T:DebugDrawItems.Cylinder
  parent: DebugDrawItems
  name: Cylinder
  nameWithType: Cylinder
  fullName: DebugDrawItems.Cylinder
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.DebugDraw.WireCylinder*
  commentId: Overload:Global.DebugDraw.WireCylinder
  name: WireCylinder
  nameWithType: DebugDraw.WireCylinder
  fullName: DebugDraw.WireCylinder
- uid: Global.DebugDraw.Dot*
  commentId: Overload:Global.DebugDraw.Dot
  name: Dot
  nameWithType: DebugDraw.Dot
  fullName: DebugDraw.Dot
- uid: DebugDrawItems.Dot
  commentId: T:DebugDrawItems.Dot
  parent: DebugDrawItems
  name: Dot
  nameWithType: Dot
  fullName: DebugDrawItems.Dot
- uid: Global.DebugDraw.Dots*
  commentId: Overload:Global.DebugDraw.Dots
  name: Dots
  nameWithType: DebugDraw.Dots
  fullName: DebugDraw.Dots
- uid: System.Collections.Generic.List{UnityEngine.Vector3}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<UnityEngine.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Single}
  commentId: T:System.Collections.Generic.List{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Single>
  nameWithType: List<Single>
  fullName: System.Collections.Generic.List<System.Single>
  nameWithType.vb: List(Of Single)
  fullName.vb: System.Collections.Generic.List(Of System.Single)
  name.vb: List(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{UnityEngine.Color}
  commentId: T:System.Collections.Generic.List{UnityEngine.Color}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Color>
  nameWithType: List<Color>
  fullName: System.Collections.Generic.List<UnityEngine.Color>
  nameWithType.vb: List(Of Color)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Color)
  name.vb: List(Of Color)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.Dots
  commentId: T:DebugDrawItems.Dots
  parent: DebugDrawItems
  name: Dots
  nameWithType: Dots
  fullName: DebugDrawItems.Dots
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.DebugDraw.Ellipse*
  commentId: Overload:Global.DebugDraw.Ellipse
  name: Ellipse
  nameWithType: DebugDraw.Ellipse
  fullName: DebugDraw.Ellipse
- uid: DebugDrawItems.DrawEllipseAxes
  commentId: T:DebugDrawItems.DrawEllipseAxes
  parent: DebugDrawItems
  name: DrawEllipseAxes
  nameWithType: DrawEllipseAxes
  fullName: DebugDrawItems.DrawEllipseAxes
- uid: DebugDrawItems.Ellipse
  commentId: T:DebugDrawItems.Ellipse
  parent: DebugDrawItems
  name: Ellipse
  nameWithType: Ellipse
  fullName: DebugDrawItems.Ellipse
- uid: Global.DebugDraw.FillEllipse*
  commentId: Overload:Global.DebugDraw.FillEllipse
  name: FillEllipse
  nameWithType: DebugDraw.FillEllipse
  fullName: DebugDraw.FillEllipse
- uid: Global.DebugDraw.Arc*
  commentId: Overload:Global.DebugDraw.Arc
  name: Arc
  nameWithType: DebugDraw.Arc
  fullName: DebugDraw.Arc
- uid: DebugDrawItems.DrawArcSegments
  commentId: T:DebugDrawItems.DrawArcSegments
  parent: DebugDrawItems
  name: DrawArcSegments
  nameWithType: DrawArcSegments
  fullName: DebugDrawItems.DrawArcSegments
- uid: Global.DebugDraw.FillArc*
  commentId: Overload:Global.DebugDraw.FillArc
  name: FillArc
  nameWithType: DebugDraw.FillArc
  fullName: DebugDraw.FillArc
- uid: Global.DebugDraw.Line*
  commentId: Overload:Global.DebugDraw.Line
  name: Line
  nameWithType: DebugDraw.Line
  fullName: DebugDraw.Line
- uid: DebugDrawItems.Line
  commentId: T:DebugDrawItems.Line
  parent: DebugDrawItems
  name: Line
  nameWithType: Line
  fullName: DebugDrawItems.Line
- uid: Global.DebugDraw.Line3D*
  commentId: Overload:Global.DebugDraw.Line3D
  name: Line3D
  nameWithType: DebugDraw.Line3D
  fullName: DebugDraw.Line3D
- uid: DebugDrawItems.Line3D
  commentId: T:DebugDrawItems.Line3D
  parent: DebugDrawItems
  name: Line3D
  nameWithType: Line3D
  fullName: DebugDrawItems.Line3D
- uid: Global.DebugDraw.Lines*
  commentId: Overload:Global.DebugDraw.Lines
  name: Lines
  nameWithType: DebugDraw.Lines
  fullName: DebugDraw.Lines
- uid: DebugDrawItems.Lines
  commentId: T:DebugDrawItems.Lines
  parent: DebugDrawItems
  name: Lines
  nameWithType: Lines
  fullName: DebugDrawItems.Lines
- uid: Global.DebugDraw.Lines3D*
  commentId: Overload:Global.DebugDraw.Lines3D
  name: Lines3D
  nameWithType: DebugDraw.Lines3D
  fullName: DebugDraw.Lines3D
- uid: DebugDrawItems.Lines3D
  commentId: T:DebugDrawItems.Lines3D
  parent: DebugDrawItems
  name: Lines3D
  nameWithType: Lines3D
  fullName: DebugDrawItems.Lines3D
- uid: System.Nullable{UnityEngine.Vector3}
  commentId: T:System.Nullable{UnityEngine.Vector3}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Vector3>
  nameWithType: Nullable<Vector3>
  fullName: System.Nullable<UnityEngine.Vector3>
  nameWithType.vb: Nullable(Of Vector3)
  fullName.vb: System.Nullable(Of UnityEngine.Vector3)
  name.vb: Nullable(Of Vector3)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.DebugDraw.Mesh*
  commentId: Overload:Global.DebugDraw.Mesh
  name: Mesh
  nameWithType: DebugDraw.Mesh
  fullName: DebugDraw.Mesh
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.MeshItem
  commentId: T:DebugDrawItems.MeshItem
  parent: DebugDrawItems
  name: MeshItem
  nameWithType: MeshItem
  fullName: DebugDrawItems.MeshItem
- uid: UnityEngine.Mesh
  commentId: T:UnityEngine.Mesh
  parent: UnityEngine
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: UnityEngine.Mesh
- uid: Global.DebugDraw.Point*
  commentId: Overload:Global.DebugDraw.Point
  name: Point
  nameWithType: DebugDraw.Point
  fullName: DebugDraw.Point
- uid: DebugDrawItems.Point
  commentId: T:DebugDrawItems.Point
  parent: DebugDrawItems
  name: Point
  nameWithType: Point
  fullName: DebugDrawItems.Point
- uid: Global.DebugDraw.Points*
  commentId: Overload:Global.DebugDraw.Points
  name: Points
  nameWithType: DebugDraw.Points
  fullName: DebugDraw.Points
- uid: DebugDrawItems.Points
  commentId: T:DebugDrawItems.Points
  parent: DebugDrawItems
  name: Points
  nameWithType: Points
  fullName: DebugDrawItems.Points
- uid: Global.DebugDraw.Quad*
  commentId: Overload:Global.DebugDraw.Quad
  name: Quad
  nameWithType: DebugDraw.Quad
  fullName: DebugDraw.Quad
- uid: DebugDrawItems.Quad
  commentId: T:DebugDrawItems.Quad
  parent: DebugDrawItems
  name: Quad
  nameWithType: Quad
  fullName: DebugDrawItems.Quad
- uid: Global.DebugDraw.FillQuad*
  commentId: Overload:Global.DebugDraw.FillQuad
  name: FillQuad
  nameWithType: DebugDraw.FillQuad
  fullName: DebugDraw.FillQuad
- uid: Global.DebugDraw.FillRectangle*
  commentId: Overload:Global.DebugDraw.FillRectangle
  name: FillRectangle
  nameWithType: DebugDraw.FillRectangle
  fullName: DebugDraw.FillRectangle
- uid: DebugDrawItems.Rectangle
  commentId: T:DebugDrawItems.Rectangle
  parent: DebugDrawItems
  name: Rectangle
  nameWithType: Rectangle
  fullName: DebugDrawItems.Rectangle
- uid: Global.DebugDraw.Rectangle*
  commentId: Overload:Global.DebugDraw.Rectangle
  name: Rectangle
  nameWithType: DebugDraw.Rectangle
  fullName: DebugDraw.Rectangle
- uid: Global.DebugDraw.Sphere*
  commentId: Overload:Global.DebugDraw.Sphere
  name: Sphere
  nameWithType: DebugDraw.Sphere
  fullName: DebugDraw.Sphere
- uid: DebugDrawItems.Sphere
  commentId: T:DebugDrawItems.Sphere
  parent: DebugDrawItems
  name: Sphere
  nameWithType: Sphere
  fullName: DebugDrawItems.Sphere
- uid: Global.DebugDraw.WireSphere*
  commentId: Overload:Global.DebugDraw.WireSphere
  name: WireSphere
  nameWithType: DebugDraw.WireSphere
  fullName: DebugDraw.WireSphere
- uid: Global.DebugDraw.Text*
  commentId: Overload:Global.DebugDraw.Text
  name: Text
  nameWithType: DebugDraw.Text
  fullName: DebugDraw.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UnityEngine.TextAnchor
  commentId: T:UnityEngine.TextAnchor
  parent: UnityEngine
  isExternal: true
  name: TextAnchor
  nameWithType: TextAnchor
  fullName: UnityEngine.TextAnchor
- uid: DebugDrawItems.Text
  commentId: T:DebugDrawItems.Text
  parent: DebugDrawItems
  name: Text
  nameWithType: Text
  fullName: DebugDrawItems.Text
- uid: Global.DebugDraw.Triangle*
  commentId: Overload:Global.DebugDraw.Triangle
  name: Triangle
  nameWithType: DebugDraw.Triangle
  fullName: DebugDraw.Triangle
- uid: DebugDrawItems.Triangle
  commentId: T:DebugDrawItems.Triangle
  parent: DebugDrawItems
  name: Triangle
  nameWithType: Triangle
  fullName: DebugDrawItems.Triangle
- uid: Global.DebugDraw.FillTriangle*
  commentId: Overload:Global.DebugDraw.FillTriangle
  name: FillTriangle
  nameWithType: DebugDraw.FillTriangle
  fullName: DebugDraw.FillTriangle
