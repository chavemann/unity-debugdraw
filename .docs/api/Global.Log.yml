### YamlMime:ManagedReference
items:
- uid: Global.Log
  commentId: T:Global.Log
  id: Log
  parent: Global
  children:
  - Global.Log.Clear
  - Global.Log.defaultLogContext
  - Global.Log.defaultLogType
  - Global.Log.Error(System.Object)
  - Global.Log.Error(System.String)
  - Global.Log.ErrorFormat(System.String,System.Object[])
  - Global.Log.ErrorFormat(UnityEngine.Object,System.String,System.Object[])
  - Global.Log.GetArgString(System.Object[])
  - Global.Log.GetString(System.Boolean)
  - Global.Log.GetString(System.Byte)
  - Global.Log.GetString(System.Char)
  - Global.Log.GetString(System.Collections.IEnumerable)
  - Global.Log.GetString(System.Decimal)
  - Global.Log.GetString(System.Double)
  - Global.Log.GetString(System.IFormattable)
  - Global.Log.GetString(System.Int16)
  - Global.Log.GetString(System.Int32)
  - Global.Log.GetString(System.Int64)
  - Global.Log.GetString(System.Object)
  - Global.Log.GetString(System.SByte)
  - Global.Log.GetString(System.Single)
  - Global.Log.GetString(System.String)
  - Global.Log.GetString(System.UInt16)
  - Global.Log.GetString(System.UInt32)
  - Global.Log.GetString(System.UInt64)
  - Global.Log.GetString(UnityEngine.Object)
  - Global.Log.GetString(UnityEngine.Transform)
  - Global.Log.GetString(UnityEngine.Vector2@)
  - Global.Log.GetString(UnityEngine.Vector3@)
  - Global.Log.GetString(UnityEngine.Vector4@)
  - Global.Log.maxArrayItems
  - Global.Log.maxMessages
  - Global.Log.messageShadowColor
  - Global.Log.MessageStyle
  - Global.Log.nextMessageColor
  - Global.Log.Print(System.Boolean)
  - Global.Log.Print(System.Byte)
  - Global.Log.Print(System.Char)
  - Global.Log.Print(System.Decimal)
  - Global.Log.Print(System.Double)
  - Global.Log.Print(System.Int16)
  - Global.Log.Print(System.Int32)
  - Global.Log.Print(System.Int64)
  - Global.Log.Print(System.Object)
  - Global.Log.Print(System.Object[])
  - Global.Log.Print(System.SByte)
  - Global.Log.Print(System.Single)
  - Global.Log.Print(System.String)
  - Global.Log.Print(System.String,System.Boolean)
  - Global.Log.Print(System.String,System.Byte)
  - Global.Log.Print(System.String,System.Char)
  - Global.Log.Print(System.String,System.Decimal)
  - Global.Log.Print(System.String,System.Double)
  - Global.Log.Print(System.String,System.Int16)
  - Global.Log.Print(System.String,System.Int32)
  - Global.Log.Print(System.String,System.Int64)
  - Global.Log.Print(System.String,System.SByte)
  - Global.Log.Print(System.String,System.Single)
  - Global.Log.Print(System.String,System.String)
  - Global.Log.Print(System.String,System.UInt16)
  - Global.Log.Print(System.String,System.UInt32)
  - Global.Log.Print(System.String,System.UInt64)
  - Global.Log.Print(System.String,UnityEngine.Matrix4x4)
  - Global.Log.Print(System.String,UnityEngine.Object)
  - Global.Log.Print(System.String,UnityEngine.Quaternion)
  - Global.Log.Print(System.String,UnityEngine.Rect)
  - Global.Log.Print(System.String,UnityEngine.RectInt)
  - Global.Log.Print(System.String,UnityEngine.Vector2)
  - Global.Log.Print(System.String,UnityEngine.Vector2Int)
  - Global.Log.Print(System.String,UnityEngine.Vector3)
  - Global.Log.Print(System.String,UnityEngine.Vector3Int)
  - Global.Log.Print(System.String,UnityEngine.Vector4)
  - Global.Log.Print(System.UInt16)
  - Global.Log.Print(System.UInt32)
  - Global.Log.Print(System.UInt64)
  - Global.Log.Print(UnityEngine.GameObject[])
  - Global.Log.Print(UnityEngine.Matrix4x4)
  - Global.Log.Print(UnityEngine.Object)
  - Global.Log.Print(UnityEngine.Object[])
  - Global.Log.Print(UnityEngine.Quaternion)
  - Global.Log.Print(UnityEngine.Rect)
  - Global.Log.Print(UnityEngine.RectInt)
  - Global.Log.Print(UnityEngine.Transform)
  - Global.Log.Print(UnityEngine.Vector2)
  - Global.Log.Print(UnityEngine.Vector2Int)
  - Global.Log.Print(UnityEngine.Vector3)
  - Global.Log.Print(UnityEngine.Vector3Int)
  - Global.Log.Print(UnityEngine.Vector4)
  - Global.Log.Print``1(System.Collections.Generic.IEnumerable{``0})
  - Global.Log.PrintException(System.Exception)
  - Global.Log.PrintException(System.Exception,UnityEngine.Object)
  - Global.Log.PrintFormat(System.String,System.Object[])
  - Global.Log.PrintFormat(UnityEngine.LogType,UnityEngine.LogOption,UnityEngine.Object,System.String,System.Object[])
  - Global.Log.PrintFormat(UnityEngine.Object,System.String,System.Object[])
  - Global.Log.Show(System.Int32,System.Single,System.Boolean)
  - Global.Log.Show(System.Int32,System.Single,System.Byte)
  - Global.Log.Show(System.Int32,System.Single,System.Char)
  - Global.Log.Show(System.Int32,System.Single,System.Decimal)
  - Global.Log.Show(System.Int32,System.Single,System.Double)
  - Global.Log.Show(System.Int32,System.Single,System.Int16)
  - Global.Log.Show(System.Int32,System.Single,System.Int32)
  - Global.Log.Show(System.Int32,System.Single,System.Int64)
  - Global.Log.Show(System.Int32,System.Single,System.Object)
  - Global.Log.Show(System.Int32,System.Single,System.Object[])
  - Global.Log.Show(System.Int32,System.Single,System.SByte)
  - Global.Log.Show(System.Int32,System.Single,System.Single)
  - Global.Log.Show(System.Int32,System.Single,System.String)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.Boolean)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.Byte)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.Char)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.Decimal)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.Double)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.Int16)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.Int32)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.Int64)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.SByte)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.Single)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.String)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.UInt16)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.UInt32)
  - Global.Log.Show(System.Int32,System.Single,System.String,System.UInt64)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Matrix4x4)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Object)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Quaternion)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Rect)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.RectInt)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2Int)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3Int)
  - Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector4)
  - Global.Log.Show(System.Int32,System.Single,System.UInt16)
  - Global.Log.Show(System.Int32,System.Single,System.UInt32)
  - Global.Log.Show(System.Int32,System.Single,System.UInt64)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.GameObject[])
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Matrix4x4)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Object)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Object[])
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Quaternion)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Rect)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.RectInt)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Transform)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector2)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector2Int)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector3)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector3Int)
  - Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector4)
  - Global.Log.Show``1(System.Int32,System.Single,System.Collections.Generic.IEnumerable{``0})
  - Global.Log.ShowFormat(System.Int32,System.Single,System.String,System.Object[])
  - Global.Log.Warn(System.Object)
  - Global.Log.Warn(System.String)
  - Global.Log.WarnFormat(System.String,System.Object[])
  - Global.Log.WarnFormat(UnityEngine.Object,System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: Log
  fullName: Log
  type: Class
  source:
    id: Log
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 7
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nProvides some extended logging overloads, e.g. <xref href=\"Log.Print(System.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\nAlso supports all the same Debug.Log** methods so it can be a drop-in replacement.\n"
  example: []
  syntax:
    content: public static class Log
    content.vb: Public Module Log
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Global.Log.defaultLogContext
  commentId: F:Global.Log.defaultLogContext
  id: defaultLogContext
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: defaultLogContext
  nameWithType: Log.defaultLogContext
  fullName: Log.defaultLogContext
  type: Field
  source:
    id: defaultLogContext
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 25
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nCan be set for all log methods instead of passing individual contexts to each Log call.\n"
  example: []
  syntax:
    content: public static Object defaultLogContext
    return:
      type: UnityEngine.Object
    content.vb: Public Shared defaultLogContext As Object
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.defaultLogType
  commentId: F:Global.Log.defaultLogType
  id: defaultLogType
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: defaultLogType
  nameWithType: Log.defaultLogType
  fullName: Log.defaultLogType
  type: Field
  source:
    id: defaultLogType
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 29
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nThe log type used when using the extended log override methods.\n"
  example: []
  syntax:
    content: public static LogType defaultLogType
    return:
      type: UnityEngine.LogType
    content.vb: Public Shared defaultLogType As LogType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.maxArrayItems
  commentId: F:Global.Log.maxArrayItems
  id: maxArrayItems
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: maxArrayItems
  nameWithType: Log.maxArrayItems
  fullName: Log.maxArrayItems
  type: Field
  source:
    id: maxArrayItems
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 33
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nWhen logging arrays, this controls the maximum number of items that will be displayed\n"
  example: []
  syntax:
    content: public static int maxArrayItems
    return:
      type: System.Int32
    content.vb: Public Shared maxArrayItems As Integer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.maxMessages
  commentId: F:Global.Log.maxMessages
  id: maxMessages
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: maxMessages
  nameWithType: Log.maxMessages
  fullName: Log.maxMessages
  type: Field
  source:
    id: maxMessages
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 38
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nThe max number of on screen messages in the queue - once the queue fills up old messages will be removed.\n"
  example: []
  syntax:
    content: public static int maxMessages
    return:
      type: System.Int32
    content.vb: Public Shared maxMessages As Integer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.messageShadowColor
  commentId: F:Global.Log.messageShadowColor
  id: messageShadowColor
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: messageShadowColor
  nameWithType: Log.messageShadowColor
  fullName: Log.messageShadowColor
  type: Field
  source:
    id: messageShadowColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 43
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nAdds a subtle drop shadow to on screen messages to make them easier to read.\nSet to null to disable.\n"
  example: []
  syntax:
    content: public static Color? messageShadowColor
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public Shared messageShadowColor As Color?
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.nextMessageColor
  commentId: F:Global.Log.nextMessageColor
  id: nextMessageColor
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: nextMessageColor
  nameWithType: Log.nextMessageColor
  fullName: Log.nextMessageColor
  type: Field
  source:
    id: nextMessageColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 48
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nSets the color of only the next on screen message. Will be reset during the next call to Show**.\nSet to null to reset.\n"
  example: []
  syntax:
    content: public static Color? nextMessageColor
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public Shared nextMessageColor As Color?
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.MessageStyle
  commentId: F:Global.Log.MessageStyle
  id: MessageStyle
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: MessageStyle
  nameWithType: Log.MessageStyle
  fullName: Log.MessageStyle
  type: Field
  source:
    id: MessageStyle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 53
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\nUse to adjust the default style of on screen messages.\n"
  example: []
  syntax:
    content: public static readonly GUIStyle MessageStyle
    return:
      type: UnityEngine.GUIStyle
    content.vb: Public Shared ReadOnly MessageStyle As GUIStyle
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.Log.Print(System.String)
  commentId: M:Global.Log.Print(System.String)
  id: Print(System.String)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String)
  nameWithType: Log.Print(String)
  fullName: Log.Print(System.String)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 72
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message)
    parameters:
    - id: message
      type: System.String
      description: String for display.
    content.vb: Public Shared Sub Print(message As String)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Object)
  commentId: M:Global.Log.Print(System.Object)
  id: Print(System.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Object)
  nameWithType: Log.Print(Object)
  fullName: Log.Print(System.Object)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 81
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(object message)
    parameters:
    - id: message
      type: System.Object
      description: String or object to be converted to string representation for display.
    content.vb: Public Shared Sub Print(message As Object)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.PrintFormat(System.String,System.Object[])
  commentId: M:Global.Log.PrintFormat(System.String,System.Object[])
  id: PrintFormat(System.String,System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: PrintFormat(String, Object[])
  nameWithType: Log.PrintFormat(String, Object[])
  fullName: Log.PrintFormat(System.String, System.Object[])
  type: Method
  source:
    id: PrintFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 91
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a formatted message to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void PrintFormat(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub PrintFormat(format As String, ParamArray args As Object())
  overload: Global.Log.PrintFormat*
  nameWithType.vb: Log.PrintFormat(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.PrintFormat(System.String, System.Object())
  name.vb: PrintFormat(String, Object())
- uid: Global.Log.PrintFormat(UnityEngine.Object,System.String,System.Object[])
  commentId: M:Global.Log.PrintFormat(UnityEngine.Object,System.String,System.Object[])
  id: PrintFormat(UnityEngine.Object,System.String,System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: PrintFormat(Object, String, Object[])
  nameWithType: Log.PrintFormat(Object, String, Object[])
  fullName: Log.PrintFormat(UnityEngine.Object, System.String, System.Object[])
  type: Method
  source:
    id: PrintFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 102
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a formatted message to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void PrintFormat(Object context, string format, params object[] args)
    parameters:
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub PrintFormat(context As Object, format As String, ParamArray args As Object())
  overload: Global.Log.PrintFormat*
  nameWithType.vb: Log.PrintFormat(Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.PrintFormat(UnityEngine.Object, System.String, System.Object())
  name.vb: PrintFormat(Object, String, Object())
- uid: Global.Log.PrintFormat(UnityEngine.LogType,UnityEngine.LogOption,UnityEngine.Object,System.String,System.Object[])
  commentId: M:Global.Log.PrintFormat(UnityEngine.LogType,UnityEngine.LogOption,UnityEngine.Object,System.String,System.Object[])
  id: PrintFormat(UnityEngine.LogType,UnityEngine.LogOption,UnityEngine.Object,System.String,System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: PrintFormat(LogType, LogOption, Object, String, Object[])
  nameWithType: Log.PrintFormat(LogType, LogOption, Object, String, Object[])
  fullName: Log.PrintFormat(UnityEngine.LogType, UnityEngine.LogOption, UnityEngine.Object, System.String, System.Object[])
  type: Method
  source:
    id: PrintFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 115
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a formatted message to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void PrintFormat(LogType logType, LogOption logOptions, Object context, string format, params object[] args)
    parameters:
    - id: logType
      type: UnityEngine.LogType
      description: Type of message e.g. warn or error etc.
    - id: logOptions
      type: UnityEngine.LogOption
      description: Option flags to treat the log message special.
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub PrintFormat(logType As LogType, logOptions As LogOption, context As Object, format As String, ParamArray args As Object())
  overload: Global.Log.PrintFormat*
  nameWithType.vb: Log.PrintFormat(LogType, LogOption, Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.PrintFormat(UnityEngine.LogType, UnityEngine.LogOption, UnityEngine.Object, System.String, System.Object())
  name.vb: PrintFormat(LogType, LogOption, Object, String, Object())
- uid: Global.Log.PrintException(System.Exception)
  commentId: M:Global.Log.PrintException(System.Exception)
  id: PrintException(System.Exception)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: PrintException(Exception)
  nameWithType: Log.PrintException(Exception)
  fullName: Log.PrintException(System.Exception)
  type: Method
  source:
    id: PrintException
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 124
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>A variant of Debug.unityLogger.Log that logs an error message to the console.</p>\n"
  example: []
  syntax:
    content: public static void PrintException(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
      description: Runtime Exception.
    content.vb: Public Shared Sub PrintException(exception As Exception)
  overload: Global.Log.PrintException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.PrintException(System.Exception,UnityEngine.Object)
  commentId: M:Global.Log.PrintException(System.Exception,UnityEngine.Object)
  id: PrintException(System.Exception,UnityEngine.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: PrintException(Exception, Object)
  nameWithType: Log.PrintException(Exception, Object)
  fullName: Log.PrintException(System.Exception, UnityEngine.Object)
  type: Method
  source:
    id: PrintException
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 134
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>A variant of Debug.unityLogger.Log that logs an error message to the console.</p>\n"
  example: []
  syntax:
    content: public static void PrintException(Exception exception, Object context)
    parameters:
    - id: exception
      type: System.Exception
      description: Runtime Exception.
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    content.vb: Public Shared Sub PrintException(exception As Exception, context As Object)
  overload: Global.Log.PrintException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Warn(System.String)
  commentId: M:Global.Log.Warn(System.String)
  id: Warn(System.String)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Warn(String)
  nameWithType: Log.Warn(String)
  fullName: Log.Warn(System.String)
  type: Method
  source:
    id: Warn
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 146
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>A variant of Debug.Log that logs a warning message to the console.</p>\n"
  example: []
  syntax:
    content: public static void Warn(string message)
    parameters:
    - id: message
      type: System.String
      description: String for display.
    content.vb: Public Shared Sub Warn(message As String)
  overload: Global.Log.Warn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Warn(System.Object)
  commentId: M:Global.Log.Warn(System.Object)
  id: Warn(System.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Warn(Object)
  nameWithType: Log.Warn(Object)
  fullName: Log.Warn(System.Object)
  type: Method
  source:
    id: Warn
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 155
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>A variant of Debug.Log that logs a warning message to the console.</p>\n"
  example: []
  syntax:
    content: public static void Warn(object message)
    parameters:
    - id: message
      type: System.Object
      description: String or object to be converted to string representation for display.
    content.vb: Public Shared Sub Warn(message As Object)
  overload: Global.Log.Warn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.WarnFormat(System.String,System.Object[])
  commentId: M:Global.Log.WarnFormat(System.String,System.Object[])
  id: WarnFormat(System.String,System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: WarnFormat(String, Object[])
  nameWithType: Log.WarnFormat(String, Object[])
  fullName: Log.WarnFormat(System.String, System.Object[])
  type: Method
  source:
    id: WarnFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 165
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a formatted warning message to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void WarnFormat(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub WarnFormat(format As String, ParamArray args As Object())
  overload: Global.Log.WarnFormat*
  nameWithType.vb: Log.WarnFormat(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.WarnFormat(System.String, System.Object())
  name.vb: WarnFormat(String, Object())
- uid: Global.Log.WarnFormat(UnityEngine.Object,System.String,System.Object[])
  commentId: M:Global.Log.WarnFormat(UnityEngine.Object,System.String,System.Object[])
  id: WarnFormat(UnityEngine.Object,System.String,System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: WarnFormat(Object, String, Object[])
  nameWithType: Log.WarnFormat(Object, String, Object[])
  fullName: Log.WarnFormat(UnityEngine.Object, System.String, System.Object[])
  type: Method
  source:
    id: WarnFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 176
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a formatted warning message to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void WarnFormat(Object context, string format, params object[] args)
    parameters:
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub WarnFormat(context As Object, format As String, ParamArray args As Object())
  overload: Global.Log.WarnFormat*
  nameWithType.vb: Log.WarnFormat(Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.WarnFormat(UnityEngine.Object, System.String, System.Object())
  name.vb: WarnFormat(Object, String, Object())
- uid: Global.Log.Error(System.String)
  commentId: M:Global.Log.Error(System.String)
  id: Error(System.String)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Error(String)
  nameWithType: Log.Error(String)
  fullName: Log.Error(System.String)
  type: Method
  source:
    id: Error
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 189
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>A variant of Debug.Log that logs an error message to the console.</p>\n"
  example: []
  syntax:
    content: public static void Error(string message)
    parameters:
    - id: message
      type: System.String
      description: String for display.
    content.vb: Public Shared Sub Error(message As String)
  overload: Global.Log.Error*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Error(System.Object)
  commentId: M:Global.Log.Error(System.Object)
  id: Error(System.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Error(Object)
  nameWithType: Log.Error(Object)
  fullName: Log.Error(System.Object)
  type: Method
  source:
    id: Error
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 198
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>A variant of Debug.Log that logs an error message to the console.</p>\n"
  example: []
  syntax:
    content: public static void Error(object message)
    parameters:
    - id: message
      type: System.Object
      description: String or object to be converted to string representation for display.
    content.vb: Public Shared Sub Error(message As Object)
  overload: Global.Log.Error*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.ErrorFormat(System.String,System.Object[])
  commentId: M:Global.Log.ErrorFormat(System.String,System.Object[])
  id: ErrorFormat(System.String,System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: ErrorFormat(String, Object[])
  nameWithType: Log.ErrorFormat(String, Object[])
  fullName: Log.ErrorFormat(System.String, System.Object[])
  type: Method
  source:
    id: ErrorFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 208
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>>Logs a formatted error message to the Unity console.</p>\n"
  example: []
  syntax:
    content: public static void ErrorFormat(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub ErrorFormat(format As String, ParamArray args As Object())
  overload: Global.Log.ErrorFormat*
  nameWithType.vb: Log.ErrorFormat(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.ErrorFormat(System.String, System.Object())
  name.vb: ErrorFormat(String, Object())
- uid: Global.Log.ErrorFormat(UnityEngine.Object,System.String,System.Object[])
  commentId: M:Global.Log.ErrorFormat(UnityEngine.Object,System.String,System.Object[])
  id: ErrorFormat(UnityEngine.Object,System.String,System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: ErrorFormat(Object, String, Object[])
  nameWithType: Log.ErrorFormat(Object, String, Object[])
  fullName: Log.ErrorFormat(UnityEngine.Object, System.String, System.Object[])
  type: Method
  source:
    id: ErrorFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 219
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>>Logs a formatted error message to the Unity console.</p>\n"
  example: []
  syntax:
    content: public static void ErrorFormat(Object context, string format, params object[] args)
    parameters:
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub ErrorFormat(context As Object, format As String, ParamArray args As Object())
  overload: Global.Log.ErrorFormat*
  nameWithType.vb: Log.ErrorFormat(Object, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.ErrorFormat(UnityEngine.Object, System.String, System.Object())
  name.vb: ErrorFormat(Object, String, Object())
- uid: Global.Log.GetString(System.Object)
  commentId: M:Global.Log.GetString(System.Object)
  id: GetString(System.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Object)
  nameWithType: Log.GetString(Object)
  fullName: Log.GetString(System.Object)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 232
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(object message)
    parameters:
    - id: message
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Object) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Collections.IEnumerable)
  commentId: M:Global.Log.GetString(System.Collections.IEnumerable)
  id: GetString(System.Collections.IEnumerable)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(IEnumerable)
  nameWithType: Log.GetString(IEnumerable)
  fullName: Log.GetString(System.Collections.IEnumerable)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 259
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(IEnumerable list)
    parameters:
    - id: list
      type: System.Collections.IEnumerable
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(list As IEnumerable) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(UnityEngine.Object)
  commentId: M:Global.Log.GetString(UnityEngine.Object)
  id: GetString(UnityEngine.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Object)
  nameWithType: Log.GetString(Object)
  fullName: Log.GetString(UnityEngine.Object)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 297
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(Object message)
    parameters:
    - id: message
      type: UnityEngine.Object
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Object) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(UnityEngine.Transform)
  commentId: M:Global.Log.GetString(UnityEngine.Transform)
  id: GetString(UnityEngine.Transform)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Transform)
  nameWithType: Log.GetString(Transform)
  fullName: Log.GetString(UnityEngine.Transform)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 298
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(Transform message)
    parameters:
    - id: message
      type: UnityEngine.Transform
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Transform) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.IFormattable)
  commentId: M:Global.Log.GetString(System.IFormattable)
  id: GetString(System.IFormattable)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(IFormattable)
  nameWithType: Log.GetString(IFormattable)
  fullName: Log.GetString(System.IFormattable)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 299
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(IFormattable message)
    parameters:
    - id: message
      type: System.IFormattable
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As IFormattable) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.String)
  commentId: M:Global.Log.GetString(System.String)
  id: GetString(System.String)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(String)
  nameWithType: Log.GetString(String)
  fullName: Log.GetString(System.String)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 300
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(string message)
    parameters:
    - id: message
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As String) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Boolean)
  commentId: M:Global.Log.GetString(System.Boolean)
  id: GetString(System.Boolean)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Boolean)
  nameWithType: Log.GetString(Boolean)
  fullName: Log.GetString(System.Boolean)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 301
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(bool message)
    parameters:
    - id: message
      type: System.Boolean
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Boolean) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Char)
  commentId: M:Global.Log.GetString(System.Char)
  id: GetString(System.Char)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Char)
  nameWithType: Log.GetString(Char)
  fullName: Log.GetString(System.Char)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 302
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(char message)
    parameters:
    - id: message
      type: System.Char
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Char) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.SByte)
  commentId: M:Global.Log.GetString(System.SByte)
  id: GetString(System.SByte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(SByte)
  nameWithType: Log.GetString(SByte)
  fullName: Log.GetString(System.SByte)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 303
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(sbyte message)
    parameters:
    - id: message
      type: System.SByte
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As SByte) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Int16)
  commentId: M:Global.Log.GetString(System.Int16)
  id: GetString(System.Int16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Int16)
  nameWithType: Log.GetString(Int16)
  fullName: Log.GetString(System.Int16)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 304
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(short message)
    parameters:
    - id: message
      type: System.Int16
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Short) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Int32)
  commentId: M:Global.Log.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Int32)
  nameWithType: Log.GetString(Int32)
  fullName: Log.GetString(System.Int32)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 305
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(int message)
    parameters:
    - id: message
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Integer) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Int64)
  commentId: M:Global.Log.GetString(System.Int64)
  id: GetString(System.Int64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Int64)
  nameWithType: Log.GetString(Int64)
  fullName: Log.GetString(System.Int64)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 306
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(long message)
    parameters:
    - id: message
      type: System.Int64
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Long) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Byte)
  commentId: M:Global.Log.GetString(System.Byte)
  id: GetString(System.Byte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Byte)
  nameWithType: Log.GetString(Byte)
  fullName: Log.GetString(System.Byte)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 307
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(byte message)
    parameters:
    - id: message
      type: System.Byte
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Byte) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.UInt16)
  commentId: M:Global.Log.GetString(System.UInt16)
  id: GetString(System.UInt16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(UInt16)
  nameWithType: Log.GetString(UInt16)
  fullName: Log.GetString(System.UInt16)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 308
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(ushort message)
    parameters:
    - id: message
      type: System.UInt16
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As UShort) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.UInt32)
  commentId: M:Global.Log.GetString(System.UInt32)
  id: GetString(System.UInt32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(UInt32)
  nameWithType: Log.GetString(UInt32)
  fullName: Log.GetString(System.UInt32)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 309
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(uint message)
    parameters:
    - id: message
      type: System.UInt32
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As UInteger) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.UInt64)
  commentId: M:Global.Log.GetString(System.UInt64)
  id: GetString(System.UInt64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(UInt64)
  nameWithType: Log.GetString(UInt64)
  fullName: Log.GetString(System.UInt64)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 310
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(ulong message)
    parameters:
    - id: message
      type: System.UInt64
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As ULong) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Single)
  commentId: M:Global.Log.GetString(System.Single)
  id: GetString(System.Single)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Single)
  nameWithType: Log.GetString(Single)
  fullName: Log.GetString(System.Single)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 311
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(float message)
    parameters:
    - id: message
      type: System.Single
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Single) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Double)
  commentId: M:Global.Log.GetString(System.Double)
  id: GetString(System.Double)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Double)
  nameWithType: Log.GetString(Double)
  fullName: Log.GetString(System.Double)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 312
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(double message)
    parameters:
    - id: message
      type: System.Double
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Double) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(System.Decimal)
  commentId: M:Global.Log.GetString(System.Decimal)
  id: GetString(System.Decimal)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(Decimal)
  nameWithType: Log.GetString(Decimal)
  fullName: Log.GetString(System.Decimal)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 313
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(decimal message)
    parameters:
    - id: message
      type: System.Decimal
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Decimal) As Object
  overload: Global.Log.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.GetString(UnityEngine.Vector2@)
  commentId: M:Global.Log.GetString(UnityEngine.Vector2@)
  id: GetString(UnityEngine.Vector2@)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(ref Vector2)
  nameWithType: Log.GetString(ref Vector2)
  fullName: Log.GetString(ref UnityEngine.Vector2)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 314
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(ref Vector2 v)
    parameters:
    - id: v
      type: UnityEngine.Vector2
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(ByRef v As Vector2) As Object
  overload: Global.Log.GetString*
  nameWithType.vb: Log.GetString(ByRef Vector2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.GetString(ByRef UnityEngine.Vector2)
  name.vb: GetString(ByRef Vector2)
- uid: Global.Log.GetString(UnityEngine.Vector3@)
  commentId: M:Global.Log.GetString(UnityEngine.Vector3@)
  id: GetString(UnityEngine.Vector3@)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(ref Vector3)
  nameWithType: Log.GetString(ref Vector3)
  fullName: Log.GetString(ref UnityEngine.Vector3)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 318
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(ref Vector3 v)
    parameters:
    - id: v
      type: UnityEngine.Vector3
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(ByRef v As Vector3) As Object
  overload: Global.Log.GetString*
  nameWithType.vb: Log.GetString(ByRef Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.GetString(ByRef UnityEngine.Vector3)
  name.vb: GetString(ByRef Vector3)
- uid: Global.Log.GetString(UnityEngine.Vector4@)
  commentId: M:Global.Log.GetString(UnityEngine.Vector4@)
  id: GetString(UnityEngine.Vector4@)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetString(ref Vector4)
  nameWithType: Log.GetString(ref Vector4)
  fullName: Log.GetString(ref UnityEngine.Vector4)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 322
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetString(ref Vector4 v)
    parameters:
    - id: v
      type: UnityEngine.Vector4
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(ByRef v As Vector4) As Object
  overload: Global.Log.GetString*
  nameWithType.vb: Log.GetString(ByRef Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.GetString(ByRef UnityEngine.Vector4)
  name.vb: GetString(ByRef Vector4)
- uid: Global.Log.GetArgString(System.Object[])
  commentId: M:Global.Log.GetArgString(System.Object[])
  id: GetArgString(System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: GetArgString(Object[])
  nameWithType: Log.GetArgString(Object[])
  fullName: Log.GetArgString(System.Object[])
  type: Method
  source:
    id: GetArgString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 328
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static object GetArgString(object[] args)
    parameters:
    - id: args
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Public Shared Function GetArgString(args As Object()) As Object
  overload: Global.Log.GetArgString*
  nameWithType.vb: Log.GetArgString(Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.GetArgString(System.Object())
  name.vb: GetArgString(Object())
- uid: Global.Log.Print(UnityEngine.Object)
  commentId: M:Global.Log.Print(UnityEngine.Object)
  id: Print(UnityEngine.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Object)
  nameWithType: Log.Print(Object)
  fullName: Log.Print(UnityEngine.Object)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 355
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs an Object to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Object val)
    parameters:
    - id: val
      type: UnityEngine.Object
      description: Object for display.
    content.vb: Public Shared Sub Print(val As Object)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.Transform)
  commentId: M:Global.Log.Print(UnityEngine.Transform)
  id: Print(UnityEngine.Transform)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Transform)
  nameWithType: Log.Print(Transform)
  fullName: Log.Print(UnityEngine.Transform)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 364
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a Transform to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Transform val)
    parameters:
    - id: val
      type: UnityEngine.Transform
      description: Transform for display.
    content.vb: Public Shared Sub Print(val As Transform)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Boolean)
  commentId: M:Global.Log.Print(System.Boolean)
  id: Print(System.Boolean)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Boolean)
  nameWithType: Log.Print(Boolean)
  fullName: Log.Print(System.Boolean)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 373
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a bool to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(bool val)
    parameters:
    - id: val
      type: System.Boolean
      description: bool for display.
    content.vb: Public Shared Sub Print(val As Boolean)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Char)
  commentId: M:Global.Log.Print(System.Char)
  id: Print(System.Char)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Char)
  nameWithType: Log.Print(Char)
  fullName: Log.Print(System.Char)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 382
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a char to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(char val)
    parameters:
    - id: val
      type: System.Char
      description: char for display.
    content.vb: Public Shared Sub Print(val As Char)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.SByte)
  commentId: M:Global.Log.Print(System.SByte)
  id: Print(System.SByte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(SByte)
  nameWithType: Log.Print(SByte)
  fullName: Log.Print(System.SByte)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 391
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a sbyte to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(sbyte val)
    parameters:
    - id: val
      type: System.SByte
      description: sbyte for display.
    content.vb: Public Shared Sub Print(val As SByte)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Int16)
  commentId: M:Global.Log.Print(System.Int16)
  id: Print(System.Int16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Int16)
  nameWithType: Log.Print(Int16)
  fullName: Log.Print(System.Int16)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 400
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a short to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(short val)
    parameters:
    - id: val
      type: System.Int16
      description: short for display.
    content.vb: Public Shared Sub Print(val As Short)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Int32)
  commentId: M:Global.Log.Print(System.Int32)
  id: Print(System.Int32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Int32)
  nameWithType: Log.Print(Int32)
  fullName: Log.Print(System.Int32)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 409
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs an int to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(int val)
    parameters:
    - id: val
      type: System.Int32
      description: int for display.
    content.vb: Public Shared Sub Print(val As Integer)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Int64)
  commentId: M:Global.Log.Print(System.Int64)
  id: Print(System.Int64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Int64)
  nameWithType: Log.Print(Int64)
  fullName: Log.Print(System.Int64)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 418
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a long to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(long val)
    parameters:
    - id: val
      type: System.Int64
      description: long for display.
    content.vb: Public Shared Sub Print(val As Long)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Byte)
  commentId: M:Global.Log.Print(System.Byte)
  id: Print(System.Byte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Byte)
  nameWithType: Log.Print(Byte)
  fullName: Log.Print(System.Byte)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 427
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a byte to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(byte val)
    parameters:
    - id: val
      type: System.Byte
      description: byte for display.
    content.vb: Public Shared Sub Print(val As Byte)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.UInt16)
  commentId: M:Global.Log.Print(System.UInt16)
  id: Print(System.UInt16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(UInt16)
  nameWithType: Log.Print(UInt16)
  fullName: Log.Print(System.UInt16)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 436
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a ushort to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(ushort val)
    parameters:
    - id: val
      type: System.UInt16
      description: ushort for display.
    content.vb: Public Shared Sub Print(val As UShort)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.UInt32)
  commentId: M:Global.Log.Print(System.UInt32)
  id: Print(System.UInt32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(UInt32)
  nameWithType: Log.Print(UInt32)
  fullName: Log.Print(System.UInt32)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 445
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a uint to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(uint val)
    parameters:
    - id: val
      type: System.UInt32
      description: uint for display.
    content.vb: Public Shared Sub Print(val As UInteger)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.UInt64)
  commentId: M:Global.Log.Print(System.UInt64)
  id: Print(System.UInt64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(UInt64)
  nameWithType: Log.Print(UInt64)
  fullName: Log.Print(System.UInt64)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 454
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a ulong to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(ulong val)
    parameters:
    - id: val
      type: System.UInt64
      description: ulong for display.
    content.vb: Public Shared Sub Print(val As ULong)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Single)
  commentId: M:Global.Log.Print(System.Single)
  id: Print(System.Single)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Single)
  nameWithType: Log.Print(Single)
  fullName: Log.Print(System.Single)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 463
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a float to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(float val)
    parameters:
    - id: val
      type: System.Single
      description: float for display.
    content.vb: Public Shared Sub Print(val As Single)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Double)
  commentId: M:Global.Log.Print(System.Double)
  id: Print(System.Double)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Double)
  nameWithType: Log.Print(Double)
  fullName: Log.Print(System.Double)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 472
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a double to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(double val)
    parameters:
    - id: val
      type: System.Double
      description: double for display.
    content.vb: Public Shared Sub Print(val As Double)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.Decimal)
  commentId: M:Global.Log.Print(System.Decimal)
  id: Print(System.Decimal)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Decimal)
  nameWithType: Log.Print(Decimal)
  fullName: Log.Print(System.Decimal)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 481
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a decimal to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(decimal val)
    parameters:
    - id: val
      type: System.Decimal
      description: decimal for display.
    content.vb: Public Shared Sub Print(val As Decimal)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.Vector2)
  commentId: M:Global.Log.Print(UnityEngine.Vector2)
  id: Print(UnityEngine.Vector2)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Vector2)
  nameWithType: Log.Print(Vector2)
  fullName: Log.Print(UnityEngine.Vector2)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 490
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a Vector2 to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Vector2 val)
    parameters:
    - id: val
      type: UnityEngine.Vector2
      description: Vector2 for display.
    content.vb: Public Shared Sub Print(val As Vector2)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.Vector3)
  commentId: M:Global.Log.Print(UnityEngine.Vector3)
  id: Print(UnityEngine.Vector3)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Vector3)
  nameWithType: Log.Print(Vector3)
  fullName: Log.Print(UnityEngine.Vector3)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 499
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a Vector3 to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Vector3 val)
    parameters:
    - id: val
      type: UnityEngine.Vector3
      description: Vector3 for display.
    content.vb: Public Shared Sub Print(val As Vector3)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.Vector4)
  commentId: M:Global.Log.Print(UnityEngine.Vector4)
  id: Print(UnityEngine.Vector4)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Vector4)
  nameWithType: Log.Print(Vector4)
  fullName: Log.Print(UnityEngine.Vector4)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 508
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a Vector4 to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Vector4 val)
    parameters:
    - id: val
      type: UnityEngine.Vector4
      description: Vector4 for display.
    content.vb: Public Shared Sub Print(val As Vector4)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.Vector2Int)
  commentId: M:Global.Log.Print(UnityEngine.Vector2Int)
  id: Print(UnityEngine.Vector2Int)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Vector2Int)
  nameWithType: Log.Print(Vector2Int)
  fullName: Log.Print(UnityEngine.Vector2Int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 517
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a Vector2Int to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Vector2Int val)
    parameters:
    - id: val
      type: UnityEngine.Vector2Int
      description: Vector2Int for display.
    content.vb: Public Shared Sub Print(val As Vector2Int)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.Vector3Int)
  commentId: M:Global.Log.Print(UnityEngine.Vector3Int)
  id: Print(UnityEngine.Vector3Int)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Vector3Int)
  nameWithType: Log.Print(Vector3Int)
  fullName: Log.Print(UnityEngine.Vector3Int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 526
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a Vector3Int to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Vector3Int val)
    parameters:
    - id: val
      type: UnityEngine.Vector3Int
      description: Vector3Int for display.
    content.vb: Public Shared Sub Print(val As Vector3Int)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.Matrix4x4)
  commentId: M:Global.Log.Print(UnityEngine.Matrix4x4)
  id: Print(UnityEngine.Matrix4x4)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Matrix4x4)
  nameWithType: Log.Print(Matrix4x4)
  fullName: Log.Print(UnityEngine.Matrix4x4)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 535
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a Matrix4x4 to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Matrix4x4 val)
    parameters:
    - id: val
      type: UnityEngine.Matrix4x4
      description: Matrix4x4 for display.
    content.vb: Public Shared Sub Print(val As Matrix4x4)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.Quaternion)
  commentId: M:Global.Log.Print(UnityEngine.Quaternion)
  id: Print(UnityEngine.Quaternion)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Quaternion)
  nameWithType: Log.Print(Quaternion)
  fullName: Log.Print(UnityEngine.Quaternion)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 544
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a Quaternion to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Quaternion val)
    parameters:
    - id: val
      type: UnityEngine.Quaternion
      description: Quaternion for display.
    content.vb: Public Shared Sub Print(val As Quaternion)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.Rect)
  commentId: M:Global.Log.Print(UnityEngine.Rect)
  id: Print(UnityEngine.Rect)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Rect)
  nameWithType: Log.Print(Rect)
  fullName: Log.Print(UnityEngine.Rect)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 553
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a Rect to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Rect val)
    parameters:
    - id: val
      type: UnityEngine.Rect
      description: Rect for display.
    content.vb: Public Shared Sub Print(val As Rect)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(UnityEngine.RectInt)
  commentId: M:Global.Log.Print(UnityEngine.RectInt)
  id: Print(UnityEngine.RectInt)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(RectInt)
  nameWithType: Log.Print(RectInt)
  fullName: Log.Print(UnityEngine.RectInt)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 562
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a RectInt to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(RectInt val)
    parameters:
    - id: val
      type: UnityEngine.RectInt
      description: RectInt for display.
    content.vb: Public Shared Sub Print(val As RectInt)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Global.Log.Print``1(System.Collections.Generic.IEnumerable{``0})
  id: Print``1(System.Collections.Generic.IEnumerable{``0})
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print<T>(IEnumerable<T>)
  nameWithType: Log.Print<T>(IEnumerable<T>)
  fullName: Log.Print<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 571
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a list the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print<T>(IEnumerable<T> list)
    parameters:
    - id: list
      type: System.Collections.Generic.IEnumerable{{T}}
      description: List for display.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Print(Of T)(list As IEnumerable(Of T))
  overload: Global.Log.Print*
  nameWithType.vb: Log.Print(Of T)(IEnumerable(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.Print(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Print(Of T)(IEnumerable(Of T))
- uid: Global.Log.Print(System.Object[])
  commentId: M:Global.Log.Print(System.Object[])
  id: Print(System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Object[])
  nameWithType: Log.Print(Object[])
  fullName: Log.Print(System.Object[])
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 580
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a list of items to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(params object[] args)
    parameters:
    - id: args
      type: System.Object[]
      description: Items for display.
    content.vb: Public Shared Sub Print(ParamArray args As Object())
  overload: Global.Log.Print*
  nameWithType.vb: Log.Print(Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.Print(System.Object())
  name.vb: Print(Object())
- uid: Global.Log.Print(UnityEngine.Object[])
  commentId: M:Global.Log.Print(UnityEngine.Object[])
  id: Print(UnityEngine.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(Object[])
  nameWithType: Log.Print(Object[])
  fullName: Log.Print(UnityEngine.Object[])
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 589
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a list of Objects to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(Object[] args)
    parameters:
    - id: args
      type: UnityEngine.Object[]
      description: Items for display.
    content.vb: Public Shared Sub Print(args As Object())
  overload: Global.Log.Print*
  nameWithType.vb: Log.Print(Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.Print(UnityEngine.Object())
  name.vb: Print(Object())
- uid: Global.Log.Print(UnityEngine.GameObject[])
  commentId: M:Global.Log.Print(UnityEngine.GameObject[])
  id: Print(UnityEngine.GameObject[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(GameObject[])
  nameWithType: Log.Print(GameObject[])
  fullName: Log.Print(UnityEngine.GameObject[])
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 598
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a list of GameObject to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(GameObject[] args)
    parameters:
    - id: args
      type: UnityEngine.GameObject[]
      description: Items for display.
    content.vb: Public Shared Sub Print(args As GameObject())
  overload: Global.Log.Print*
  nameWithType.vb: Log.Print(GameObject())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.Print(UnityEngine.GameObject())
  name.vb: Print(GameObject())
- uid: Global.Log.Print(System.String,UnityEngine.Object)
  commentId: M:Global.Log.Print(System.String,UnityEngine.Object)
  id: Print(System.String,UnityEngine.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Object)
  nameWithType: Log.Print(String, Object)
  fullName: Log.Print(System.String, UnityEngine.Object)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 611
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and bool to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, Object val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Object
      description: bool for display.
    content.vb: Public Shared Sub Print(message As String, val As Object)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.Boolean)
  commentId: M:Global.Log.Print(System.String,System.Boolean)
  id: Print(System.String,System.Boolean)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Boolean)
  nameWithType: Log.Print(String, Boolean)
  fullName: Log.Print(System.String, System.Boolean)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 621
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and bool to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, bool val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Boolean
      description: bool for display.
    content.vb: Public Shared Sub Print(message As String, val As Boolean)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.String)
  commentId: M:Global.Log.Print(System.String,System.String)
  id: Print(System.String,System.String)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, String)
  nameWithType: Log.Print(String, String)
  fullName: Log.Print(System.String, System.String)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 631
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and string to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, string val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.String
      description: bool for display.
    content.vb: Public Shared Sub Print(message As String, val As String)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.Char)
  commentId: M:Global.Log.Print(System.String,System.Char)
  id: Print(System.String,System.Char)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Char)
  nameWithType: Log.Print(String, Char)
  fullName: Log.Print(System.String, System.Char)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 641
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and char to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, char val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Char
      description: char for display.
    content.vb: Public Shared Sub Print(message As String, val As Char)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.SByte)
  commentId: M:Global.Log.Print(System.String,System.SByte)
  id: Print(System.String,System.SByte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, SByte)
  nameWithType: Log.Print(String, SByte)
  fullName: Log.Print(System.String, System.SByte)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 651
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and sbyte to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, sbyte val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.SByte
      description: sbyte for display.
    content.vb: Public Shared Sub Print(message As String, val As SByte)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.Int16)
  commentId: M:Global.Log.Print(System.String,System.Int16)
  id: Print(System.String,System.Int16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Int16)
  nameWithType: Log.Print(String, Int16)
  fullName: Log.Print(System.String, System.Int16)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 661
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and short to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, short val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int16
      description: short for display.
    content.vb: Public Shared Sub Print(message As String, val As Short)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.Int32)
  commentId: M:Global.Log.Print(System.String,System.Int32)
  id: Print(System.String,System.Int32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Int32)
  nameWithType: Log.Print(String, Int32)
  fullName: Log.Print(System.String, System.Int32)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 671
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and int to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, int val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int32
      description: int for display.
    content.vb: Public Shared Sub Print(message As String, val As Integer)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.Int64)
  commentId: M:Global.Log.Print(System.String,System.Int64)
  id: Print(System.String,System.Int64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Int64)
  nameWithType: Log.Print(String, Int64)
  fullName: Log.Print(System.String, System.Int64)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 681
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and long to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, long val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int64
      description: long for display.
    content.vb: Public Shared Sub Print(message As String, val As Long)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.Byte)
  commentId: M:Global.Log.Print(System.String,System.Byte)
  id: Print(System.String,System.Byte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Byte)
  nameWithType: Log.Print(String, Byte)
  fullName: Log.Print(System.String, System.Byte)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 691
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and byte to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, byte val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Byte
      description: byte for display.
    content.vb: Public Shared Sub Print(message As String, val As Byte)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.UInt16)
  commentId: M:Global.Log.Print(System.String,System.UInt16)
  id: Print(System.String,System.UInt16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, UInt16)
  nameWithType: Log.Print(String, UInt16)
  fullName: Log.Print(System.String, System.UInt16)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 701
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and ushort to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, ushort val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt16
      description: ushort for display.
    content.vb: Public Shared Sub Print(message As String, val As UShort)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.UInt32)
  commentId: M:Global.Log.Print(System.String,System.UInt32)
  id: Print(System.String,System.UInt32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, UInt32)
  nameWithType: Log.Print(String, UInt32)
  fullName: Log.Print(System.String, System.UInt32)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 711
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and uint to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, uint val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt32
      description: uint for display.
    content.vb: Public Shared Sub Print(message As String, val As UInteger)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.UInt64)
  commentId: M:Global.Log.Print(System.String,System.UInt64)
  id: Print(System.String,System.UInt64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, UInt64)
  nameWithType: Log.Print(String, UInt64)
  fullName: Log.Print(System.String, System.UInt64)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 721
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and ulong to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, ulong val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt64
      description: ulong for display.
    content.vb: Public Shared Sub Print(message As String, val As ULong)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.Single)
  commentId: M:Global.Log.Print(System.String,System.Single)
  id: Print(System.String,System.Single)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Single)
  nameWithType: Log.Print(String, Single)
  fullName: Log.Print(System.String, System.Single)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 731
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and float to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, float val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Single
      description: float for display.
    content.vb: Public Shared Sub Print(message As String, val As Single)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.Double)
  commentId: M:Global.Log.Print(System.String,System.Double)
  id: Print(System.String,System.Double)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Double)
  nameWithType: Log.Print(String, Double)
  fullName: Log.Print(System.String, System.Double)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 741
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and double to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, double val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Double
      description: double for display.
    content.vb: Public Shared Sub Print(message As String, val As Double)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,System.Decimal)
  commentId: M:Global.Log.Print(System.String,System.Decimal)
  id: Print(System.String,System.Decimal)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Decimal)
  nameWithType: Log.Print(String, Decimal)
  fullName: Log.Print(System.String, System.Decimal)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 751
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and decimal to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, decimal val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Decimal
      description: decimal for display.
    content.vb: Public Shared Sub Print(message As String, val As Decimal)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,UnityEngine.Vector2)
  commentId: M:Global.Log.Print(System.String,UnityEngine.Vector2)
  id: Print(System.String,UnityEngine.Vector2)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Vector2)
  nameWithType: Log.Print(String, Vector2)
  fullName: Log.Print(System.String, UnityEngine.Vector2)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 761
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and Vector2 to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, Vector2 val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector2
      description: Vector2 for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector2)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,UnityEngine.Vector3)
  commentId: M:Global.Log.Print(System.String,UnityEngine.Vector3)
  id: Print(System.String,UnityEngine.Vector3)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Vector3)
  nameWithType: Log.Print(String, Vector3)
  fullName: Log.Print(System.String, UnityEngine.Vector3)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 771
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and Vector3 to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, Vector3 val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector3
      description: Vector3 for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector3)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,UnityEngine.Vector4)
  commentId: M:Global.Log.Print(System.String,UnityEngine.Vector4)
  id: Print(System.String,UnityEngine.Vector4)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Vector4)
  nameWithType: Log.Print(String, Vector4)
  fullName: Log.Print(System.String, UnityEngine.Vector4)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 781
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and Vector4 to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, Vector4 val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector4
      description: Vector4 for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector4)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,UnityEngine.Vector2Int)
  commentId: M:Global.Log.Print(System.String,UnityEngine.Vector2Int)
  id: Print(System.String,UnityEngine.Vector2Int)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Vector2Int)
  nameWithType: Log.Print(String, Vector2Int)
  fullName: Log.Print(System.String, UnityEngine.Vector2Int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 791
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and Vector2Int to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, Vector2Int val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector2Int
      description: Vector2Int for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector2Int)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,UnityEngine.Vector3Int)
  commentId: M:Global.Log.Print(System.String,UnityEngine.Vector3Int)
  id: Print(System.String,UnityEngine.Vector3Int)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Vector3Int)
  nameWithType: Log.Print(String, Vector3Int)
  fullName: Log.Print(System.String, UnityEngine.Vector3Int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 801
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and Vector3Int to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, Vector3Int val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector3Int
      description: Vector3Int for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector3Int)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,UnityEngine.Matrix4x4)
  commentId: M:Global.Log.Print(System.String,UnityEngine.Matrix4x4)
  id: Print(System.String,UnityEngine.Matrix4x4)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Matrix4x4)
  nameWithType: Log.Print(String, Matrix4x4)
  fullName: Log.Print(System.String, UnityEngine.Matrix4x4)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 811
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and Matrix4x4 to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, Matrix4x4 val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Matrix4x4
      description: Matrix4x4 for display.
    content.vb: Public Shared Sub Print(message As String, val As Matrix4x4)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,UnityEngine.Quaternion)
  commentId: M:Global.Log.Print(System.String,UnityEngine.Quaternion)
  id: Print(System.String,UnityEngine.Quaternion)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Quaternion)
  nameWithType: Log.Print(String, Quaternion)
  fullName: Log.Print(System.String, UnityEngine.Quaternion)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 821
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and Quaternion to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, Quaternion val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Quaternion
      description: Quaternion for display.
    content.vb: Public Shared Sub Print(message As String, val As Quaternion)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,UnityEngine.Rect)
  commentId: M:Global.Log.Print(System.String,UnityEngine.Rect)
  id: Print(System.String,UnityEngine.Rect)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, Rect)
  nameWithType: Log.Print(String, Rect)
  fullName: Log.Print(System.String, UnityEngine.Rect)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 831
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and Rect to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, Rect val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Rect
      description: Rect for display.
    content.vb: Public Shared Sub Print(message As String, val As Rect)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Print(System.String,UnityEngine.RectInt)
  commentId: M:Global.Log.Print(System.String,UnityEngine.RectInt)
  id: Print(System.String,UnityEngine.RectInt)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Print(String, RectInt)
  nameWithType: Log.Print(String, RectInt)
  fullName: Log.Print(System.String, UnityEngine.RectInt)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 841
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a message and RectInt to the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Print(string message, RectInt val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.RectInt
      description: RectInt for display.
    content.vb: Public Shared Sub Print(message As String, val As RectInt)
  overload: Global.Log.Print*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Clear
  commentId: M:Global.Log.Clear
  id: Clear
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: Log.Clear()
  fullName: Log.Clear()
  type: Method
  source:
    id: Clear
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 850
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  syntax:
    content: public static void Clear()
    content.vb: Public Shared Sub Clear
  overload: Global.Log.Clear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String)
  id: Show(System.Int32,System.Single,System.String)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String)
  nameWithType: Log.Show(Int32, Single, String)
  fullName: Log.Show(System.Int32, System.Single, System.String)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 20
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: String for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Object)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Object)
  id: Show(System.Int32,System.Single,System.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Object)
  nameWithType: Log.Show(Int32, Single, Object)
  fullName: Log.Show(System.Int32, System.Single, System.Object)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 37
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, object message)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.Object
      description: String or object to be converted to string representation for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As Object)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.ShowFormat(System.Int32,System.Single,System.String,System.Object[])
  commentId: M:Global.Log.ShowFormat(System.Int32,System.Single,System.String,System.Object[])
  id: ShowFormat(System.Int32,System.Single,System.String,System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: ShowFormat(Int32, Single, String, Object[])
  nameWithType: Log.ShowFormat(Int32, Single, String, Object[])
  fullName: Log.ShowFormat(System.Int32, System.Single, System.String, System.Object[])
  type: Method
  source:
    id: ShowFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 55
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a formatted message on the screen.</p>\n"
  example: []
  syntax:
    content: public static void ShowFormat(int id, float duration, string format, params object[] args)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub ShowFormat(id As Integer, duration As Single, format As String, ParamArray args As Object())
  overload: Global.Log.ShowFormat*
  nameWithType.vb: Log.ShowFormat(Int32, Single, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.ShowFormat(System.Int32, System.Single, System.String, System.Object())
  name.vb: ShowFormat(Int32, Single, String, Object())
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Object)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Object)
  id: Show(System.Int32,System.Single,UnityEngine.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Object)
  nameWithType: Log.Show(Int32, Single, Object)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Object)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 72
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints an Object on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Object val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Object
      description: Object for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Object)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Transform)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Transform)
  id: Show(System.Int32,System.Single,UnityEngine.Transform)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Transform)
  nameWithType: Log.Show(Int32, Single, Transform)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Transform)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 89
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a Transform on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Transform val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Transform
      description: Transform for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Transform)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Boolean)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Boolean)
  id: Show(System.Int32,System.Single,System.Boolean)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Boolean)
  nameWithType: Log.Show(Int32, Single, Boolean)
  fullName: Log.Show(System.Int32, System.Single, System.Boolean)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 106
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a bool on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, bool val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Boolean
      description: bool for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Boolean)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Char)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Char)
  id: Show(System.Int32,System.Single,System.Char)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Char)
  nameWithType: Log.Show(Int32, Single, Char)
  fullName: Log.Show(System.Int32, System.Single, System.Char)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 123
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a char on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, char val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Char
      description: char for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Char)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.SByte)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.SByte)
  id: Show(System.Int32,System.Single,System.SByte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, SByte)
  nameWithType: Log.Show(Int32, Single, SByte)
  fullName: Log.Show(System.Int32, System.Single, System.SByte)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 140
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a sbyte on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, sbyte val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.SByte
      description: sbyte for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As SByte)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Int16)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Int16)
  id: Show(System.Int32,System.Single,System.Int16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Int16)
  nameWithType: Log.Show(Int32, Single, Int16)
  fullName: Log.Show(System.Int32, System.Single, System.Int16)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 157
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a short on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, short val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Int16
      description: short for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Short)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Int32)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Int32)
  id: Show(System.Int32,System.Single,System.Int32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Int32)
  nameWithType: Log.Show(Int32, Single, Int32)
  fullName: Log.Show(System.Int32, System.Single, System.Int32)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 174
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints an int on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Int32
      description: int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Integer)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Int64)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Int64)
  id: Show(System.Int32,System.Single,System.Int64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Int64)
  nameWithType: Log.Show(Int32, Single, Int64)
  fullName: Log.Show(System.Int32, System.Single, System.Int64)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 191
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a long on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, long val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Int64
      description: long for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Long)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Byte)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Byte)
  id: Show(System.Int32,System.Single,System.Byte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Byte)
  nameWithType: Log.Show(Int32, Single, Byte)
  fullName: Log.Show(System.Int32, System.Single, System.Byte)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 208
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a byte on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, byte val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Byte
      description: byte for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Byte)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.UInt16)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.UInt16)
  id: Show(System.Int32,System.Single,System.UInt16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, UInt16)
  nameWithType: Log.Show(Int32, Single, UInt16)
  fullName: Log.Show(System.Int32, System.Single, System.UInt16)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 225
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a ushort on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, ushort val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.UInt16
      description: ushort for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As UShort)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.UInt32)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.UInt32)
  id: Show(System.Int32,System.Single,System.UInt32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, UInt32)
  nameWithType: Log.Show(Int32, Single, UInt32)
  fullName: Log.Show(System.Int32, System.Single, System.UInt32)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 242
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a uint on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, uint val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.UInt32
      description: uint for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As UInteger)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.UInt64)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.UInt64)
  id: Show(System.Int32,System.Single,System.UInt64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, UInt64)
  nameWithType: Log.Show(Int32, Single, UInt64)
  fullName: Log.Show(System.Int32, System.Single, System.UInt64)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 259
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a ulong on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, ulong val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.UInt64
      description: ulong for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As ULong)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Single)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Single)
  id: Show(System.Int32,System.Single,System.Single)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Single)
  nameWithType: Log.Show(Int32, Single, Single)
  fullName: Log.Show(System.Int32, System.Single, System.Single)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 276
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a float on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, float val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Single
      description: float for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Single)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Double)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Double)
  id: Show(System.Int32,System.Single,System.Double)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Double)
  nameWithType: Log.Show(Int32, Single, Double)
  fullName: Log.Show(System.Int32, System.Single, System.Double)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 293
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a double on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, double val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Double
      description: double for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Double)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.Decimal)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Decimal)
  id: Show(System.Int32,System.Single,System.Decimal)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Decimal)
  nameWithType: Log.Show(Int32, Single, Decimal)
  fullName: Log.Show(System.Int32, System.Single, System.Decimal)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 310
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a decimal on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, decimal val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Decimal
      description: decimal for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Decimal)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector2)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector2)
  id: Show(System.Int32,System.Single,UnityEngine.Vector2)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Vector2)
  nameWithType: Log.Show(Int32, Single, Vector2)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Vector2)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 327
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a Vector2 on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector2 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector2
      description: Vector2 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector2)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector3)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector3)
  id: Show(System.Int32,System.Single,UnityEngine.Vector3)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Vector3)
  nameWithType: Log.Show(Int32, Single, Vector3)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Vector3)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 344
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a Vector3 on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector3 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector3
      description: Vector3 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector3)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector4)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector4)
  id: Show(System.Int32,System.Single,UnityEngine.Vector4)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Vector4)
  nameWithType: Log.Show(Int32, Single, Vector4)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Vector4)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 361
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a Vector4 on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector4 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector4
      description: Vector4 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector4)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector2Int)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector2Int)
  id: Show(System.Int32,System.Single,UnityEngine.Vector2Int)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Vector2Int)
  nameWithType: Log.Show(Int32, Single, Vector2Int)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Vector2Int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 378
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a Vector2Int on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector2Int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector2Int
      description: Vector2Int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector2Int)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector3Int)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Vector3Int)
  id: Show(System.Int32,System.Single,UnityEngine.Vector3Int)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Vector3Int)
  nameWithType: Log.Show(Int32, Single, Vector3Int)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Vector3Int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 395
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a Vector3Int on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector3Int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector3Int
      description: Vector3Int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector3Int)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Matrix4x4)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Matrix4x4)
  id: Show(System.Int32,System.Single,UnityEngine.Matrix4x4)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Matrix4x4)
  nameWithType: Log.Show(Int32, Single, Matrix4x4)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Matrix4x4)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 412
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a Matrix4x4 on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Matrix4x4 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Matrix4x4
      description: Matrix4x4 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Matrix4x4)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Quaternion)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Quaternion)
  id: Show(System.Int32,System.Single,UnityEngine.Quaternion)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Quaternion)
  nameWithType: Log.Show(Int32, Single, Quaternion)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Quaternion)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 429
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a Quaternion on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Quaternion val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Quaternion
      description: Quaternion for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Quaternion)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Rect)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Rect)
  id: Show(System.Int32,System.Single,UnityEngine.Rect)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Rect)
  nameWithType: Log.Show(Int32, Single, Rect)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Rect)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 446
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a Rect on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Rect val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Rect
      description: Rect for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Rect)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.RectInt)
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.RectInt)
  id: Show(System.Int32,System.Single,UnityEngine.RectInt)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, RectInt)
  nameWithType: Log.Show(Int32, Single, RectInt)
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.RectInt)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 463
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a RectInt on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, RectInt val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.RectInt
      description: RectInt for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As RectInt)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show``1(System.Int32,System.Single,System.Collections.Generic.IEnumerable{``0})
  commentId: M:Global.Log.Show``1(System.Int32,System.Single,System.Collections.Generic.IEnumerable{``0})
  id: Show``1(System.Int32,System.Single,System.Collections.Generic.IEnumerable{``0})
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show<T>(Int32, Single, IEnumerable<T>)
  nameWithType: Log.Show<T>(Int32, Single, IEnumerable<T>)
  fullName: Log.Show<T>(System.Int32, System.Single, System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 480
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Logs a list the Unity Console.</p>\n"
  example: []
  syntax:
    content: public static void Show<T>(int id, float duration, IEnumerable<T> list)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: list
      type: System.Collections.Generic.IEnumerable{{T}}
      description: List for display.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Show(Of T)(id As Integer, duration As Single, list As IEnumerable(Of T))
  overload: Global.Log.Show*
  nameWithType.vb: Log.Show(Of T)(Int32, Single, IEnumerable(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.Show(Of T)(System.Int32, System.Single, System.Collections.Generic.IEnumerable(Of T))
  name.vb: Show(Of T)(Int32, Single, IEnumerable(Of T))
- uid: Global.Log.Show(System.Int32,System.Single,System.Object[])
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.Object[])
  id: Show(System.Int32,System.Single,System.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Object[])
  nameWithType: Log.Show(Int32, Single, Object[])
  fullName: Log.Show(System.Int32, System.Single, System.Object[])
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 497
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a list of items on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, params object[] args)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: args
      type: System.Object[]
      description: Items for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, ParamArray args As Object())
  overload: Global.Log.Show*
  nameWithType.vb: Log.Show(Int32, Single, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.Show(System.Int32, System.Single, System.Object())
  name.vb: Show(Int32, Single, Object())
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.Object[])
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.Object[])
  id: Show(System.Int32,System.Single,UnityEngine.Object[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, Object[])
  nameWithType: Log.Show(Int32, Single, Object[])
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.Object[])
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 514
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a list of Objects on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, Object[] args)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: args
      type: UnityEngine.Object[]
      description: Items for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, args As Object())
  overload: Global.Log.Show*
  nameWithType.vb: Log.Show(Int32, Single, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.Show(System.Int32, System.Single, UnityEngine.Object())
  name.vb: Show(Int32, Single, Object())
- uid: Global.Log.Show(System.Int32,System.Single,UnityEngine.GameObject[])
  commentId: M:Global.Log.Show(System.Int32,System.Single,UnityEngine.GameObject[])
  id: Show(System.Int32,System.Single,UnityEngine.GameObject[])
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, GameObject[])
  nameWithType: Log.Show(Int32, Single, GameObject[])
  fullName: Log.Show(System.Int32, System.Single, UnityEngine.GameObject[])
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 531
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a list of GameObject on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, GameObject[] args)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: args
      type: UnityEngine.GameObject[]
      description: Items for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, args As GameObject())
  overload: Global.Log.Show*
  nameWithType.vb: Log.Show(Int32, Single, GameObject())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Log.Show(System.Int32, System.Single, UnityEngine.GameObject())
  name.vb: Show(Int32, Single, GameObject())
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Object)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Object)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Object)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Object)
  nameWithType: Log.Show(Int32, Single, String, Object)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.Object)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 549
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and bool on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Object val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Object
      description: bool for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Object)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.Boolean)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.Boolean)
  id: Show(System.Int32,System.Single,System.String,System.Boolean)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Boolean)
  nameWithType: Log.Show(Int32, Single, String, Boolean)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.Boolean)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 567
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and bool on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, bool val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Boolean
      description: bool for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Boolean)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.String)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.String)
  id: Show(System.Int32,System.Single,System.String,System.String)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, String)
  nameWithType: Log.Show(Int32, Single, String, String)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.String)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 585
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and string on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, string val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.String
      description: bool for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As String)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.Char)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.Char)
  id: Show(System.Int32,System.Single,System.String,System.Char)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Char)
  nameWithType: Log.Show(Int32, Single, String, Char)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.Char)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 603
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and char on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, char val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Char
      description: char for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Char)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.SByte)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.SByte)
  id: Show(System.Int32,System.Single,System.String,System.SByte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, SByte)
  nameWithType: Log.Show(Int32, Single, String, SByte)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.SByte)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 621
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and sbyte on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, sbyte val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.SByte
      description: sbyte for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As SByte)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.Int16)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.Int16)
  id: Show(System.Int32,System.Single,System.String,System.Int16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Int16)
  nameWithType: Log.Show(Int32, Single, String, Int16)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.Int16)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 639
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and short on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, short val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int16
      description: short for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Short)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.Int32)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.Int32)
  id: Show(System.Int32,System.Single,System.String,System.Int32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Int32)
  nameWithType: Log.Show(Int32, Single, String, Int32)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.Int32)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 657
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and int on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int32
      description: int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Integer)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.Int64)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.Int64)
  id: Show(System.Int32,System.Single,System.String,System.Int64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Int64)
  nameWithType: Log.Show(Int32, Single, String, Int64)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.Int64)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 675
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and long on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, long val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int64
      description: long for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Long)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.Byte)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.Byte)
  id: Show(System.Int32,System.Single,System.String,System.Byte)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Byte)
  nameWithType: Log.Show(Int32, Single, String, Byte)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.Byte)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 693
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and byte on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, byte val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Byte
      description: byte for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Byte)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.UInt16)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.UInt16)
  id: Show(System.Int32,System.Single,System.String,System.UInt16)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, UInt16)
  nameWithType: Log.Show(Int32, Single, String, UInt16)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.UInt16)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 711
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and ushort on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, ushort val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt16
      description: ushort for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As UShort)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.UInt32)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.UInt32)
  id: Show(System.Int32,System.Single,System.String,System.UInt32)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, UInt32)
  nameWithType: Log.Show(Int32, Single, String, UInt32)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.UInt32)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 729
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and uint on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, uint val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt32
      description: uint for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As UInteger)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.UInt64)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.UInt64)
  id: Show(System.Int32,System.Single,System.String,System.UInt64)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, UInt64)
  nameWithType: Log.Show(Int32, Single, String, UInt64)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.UInt64)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 747
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and ulong on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, ulong val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt64
      description: ulong for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As ULong)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.Single)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.Single)
  id: Show(System.Int32,System.Single,System.String,System.Single)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Single)
  nameWithType: Log.Show(Int32, Single, String, Single)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.Single)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 765
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and float on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, float val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Single
      description: float for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Single)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.Double)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.Double)
  id: Show(System.Int32,System.Single,System.String,System.Double)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Double)
  nameWithType: Log.Show(Int32, Single, String, Double)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.Double)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 783
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and double on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, double val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Double
      description: double for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Double)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,System.Decimal)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,System.Decimal)
  id: Show(System.Int32,System.Single,System.String,System.Decimal)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Decimal)
  nameWithType: Log.Show(Int32, Single, String, Decimal)
  fullName: Log.Show(System.Int32, System.Single, System.String, System.Decimal)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 801
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and decimal on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, decimal val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Decimal
      description: decimal for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Decimal)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector2)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Vector2)
  nameWithType: Log.Show(Int32, Single, String, Vector2)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.Vector2)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 819
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and Vector2 on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector2 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector2
      description: Vector2 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector2)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector3)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Vector3)
  nameWithType: Log.Show(Int32, Single, String, Vector3)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.Vector3)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 837
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and Vector3 on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector3 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector3
      description: Vector3 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector3)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector4)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector4)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector4)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Vector4)
  nameWithType: Log.Show(Int32, Single, String, Vector4)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.Vector4)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 855
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and Vector4 on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector4 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector4
      description: Vector4 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector4)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2Int)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2Int)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector2Int)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Vector2Int)
  nameWithType: Log.Show(Int32, Single, String, Vector2Int)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.Vector2Int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 873
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and Vector2Int on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector2Int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector2Int
      description: Vector2Int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector2Int)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3Int)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3Int)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector3Int)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Vector3Int)
  nameWithType: Log.Show(Int32, Single, String, Vector3Int)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.Vector3Int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 891
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and Vector3Int on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector3Int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector3Int
      description: Vector3Int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector3Int)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Matrix4x4)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Matrix4x4)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Matrix4x4)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Matrix4x4)
  nameWithType: Log.Show(Int32, Single, String, Matrix4x4)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.Matrix4x4)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 909
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and Matrix4x4 on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Matrix4x4 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Matrix4x4
      description: Matrix4x4 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Matrix4x4)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Quaternion)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Quaternion)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Quaternion)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Quaternion)
  nameWithType: Log.Show(Int32, Single, String, Quaternion)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.Quaternion)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 927
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and Quaternion on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Quaternion val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Quaternion
      description: Quaternion for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Quaternion)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Rect)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Rect)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Rect)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, Rect)
  nameWithType: Log.Show(Int32, Single, String, Rect)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.Rect)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 945
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and Rect on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Rect val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Rect
      description: Rect for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Rect)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.RectInt)
  commentId: M:Global.Log.Show(System.Int32,System.Single,System.String,UnityEngine.RectInt)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.RectInt)
  parent: Global.Log
  langs:
  - csharp
  - vb
  name: Show(Int32, Single, String, RectInt)
  nameWithType: Log.Show(Int32, Single, String, RectInt)
  fullName: Log.Show(System.Int32, System.Single, System.String, UnityEngine.RectInt)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 963
  assemblies:
  - c.DebugDraw.Runtime
  namespace: Global
  summary: "\n<p>Prints a message and RectInt on the screen.</p>\n"
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, RectInt val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.RectInt
      description: RectInt for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As RectInt)
  overload: Global.Log.Show*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Log.Print(System.Object[])
  commentId: M:Log.Print(System.Object[])
  isExternal: true
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.LogType
  commentId: T:UnityEngine.LogType
  parent: UnityEngine
  isExternal: true
  name: LogType
  nameWithType: LogType
  fullName: UnityEngine.LogType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<UnityEngine.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of UnityEngine.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GUIStyle
  commentId: T:UnityEngine.GUIStyle
  parent: UnityEngine
  isExternal: true
  name: GUIStyle
  nameWithType: GUIStyle
  fullName: UnityEngine.GUIStyle
- uid: Global.Log.Print*
  commentId: Overload:Global.Log.Print
  name: Print
  nameWithType: Log.Print
  fullName: Log.Print
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.Log.PrintFormat*
  commentId: Overload:Global.Log.PrintFormat
  name: PrintFormat
  nameWithType: Log.PrintFormat
  fullName: Log.PrintFormat
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: UnityEngine.LogOption
  commentId: T:UnityEngine.LogOption
  parent: UnityEngine
  isExternal: true
  name: LogOption
  nameWithType: LogOption
  fullName: UnityEngine.LogOption
- uid: Global.Log.PrintException*
  commentId: Overload:Global.Log.PrintException
  name: PrintException
  nameWithType: Log.PrintException
  fullName: Log.PrintException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Global.Log.Warn*
  commentId: Overload:Global.Log.Warn
  name: Warn
  nameWithType: Log.Warn
  fullName: Log.Warn
- uid: Global.Log.WarnFormat*
  commentId: Overload:Global.Log.WarnFormat
  name: WarnFormat
  nameWithType: Log.WarnFormat
  fullName: Log.WarnFormat
- uid: Global.Log.Error*
  commentId: Overload:Global.Log.Error
  name: Error
  nameWithType: Log.Error
  fullName: Log.Error
- uid: Global.Log.ErrorFormat*
  commentId: Overload:Global.Log.ErrorFormat
  name: ErrorFormat
  nameWithType: Log.ErrorFormat
  fullName: Log.ErrorFormat
- uid: Global.Log.GetString*
  commentId: Overload:Global.Log.GetString
  name: GetString
  nameWithType: Log.GetString
  fullName: Log.GetString
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine.Vector4
  commentId: T:UnityEngine.Vector4
  parent: UnityEngine
  isExternal: true
  name: Vector4
  nameWithType: Vector4
  fullName: UnityEngine.Vector4
- uid: Global.Log.GetArgString*
  commentId: Overload:Global.Log.GetArgString
  name: GetArgString
  nameWithType: Log.GetArgString
  fullName: Log.GetArgString
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine.Vector3Int
  commentId: T:UnityEngine.Vector3Int
  parent: UnityEngine
  isExternal: true
  name: Vector3Int
  nameWithType: Vector3Int
  fullName: UnityEngine.Vector3Int
- uid: UnityEngine.Matrix4x4
  commentId: T:UnityEngine.Matrix4x4
  parent: UnityEngine
  isExternal: true
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: UnityEngine.Matrix4x4
- uid: UnityEngine.Quaternion
  commentId: T:UnityEngine.Quaternion
  parent: UnityEngine
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: UnityEngine.Quaternion
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: UnityEngine.RectInt
  commentId: T:UnityEngine.RectInt
  parent: UnityEngine
  isExternal: true
  name: RectInt
  nameWithType: RectInt
  fullName: UnityEngine.RectInt
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: UnityEngine.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: UnityEngine.Object[]
  nameWithType.vb: Object()
  fullName.vb: UnityEngine.Object()
  name.vb: Object()
  spec.csharp:
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: UnityEngine.GameObject[]
  isExternal: true
  name: GameObject[]
  nameWithType: GameObject[]
  fullName: UnityEngine.GameObject[]
  nameWithType.vb: GameObject()
  fullName.vb: UnityEngine.GameObject()
  name.vb: GameObject()
  spec.csharp:
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Global.Log.Clear*
  commentId: Overload:Global.Log.Clear
  name: Clear
  nameWithType: Log.Clear
  fullName: Log.Clear
- uid: Global.Log.Show*
  commentId: Overload:Global.Log.Show
  name: Show
  nameWithType: Log.Show
  fullName: Log.Show
- uid: Global.Log.ShowFormat*
  commentId: Overload:Global.Log.ShowFormat
  name: ShowFormat
  nameWithType: Log.ShowFormat
  fullName: Log.ShowFormat
