### YamlMime:ManagedReference
items:
- uid: DebugDrawItems.Lines3D
  commentId: T:DebugDrawItems.Lines3D
  id: Lines3D
  parent: DebugDrawItems
  children:
  - DebugDrawItems.Lines3D.autoSize
  - DebugDrawItems.Lines3D.colors
  - DebugDrawItems.Lines3D.facing
  - DebugDrawItems.Lines3D.Get(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  - DebugDrawItems.Lines3D.Get(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  - DebugDrawItems.Lines3D.positions
  - DebugDrawItems.Lines3D.SetAutoSize(System.Boolean)
  - DebugDrawItems.Lines3D.SetFacing(System.Nullable{UnityEngine.Vector3})
  - DebugDrawItems.Lines3D.sizes
  langs:
  - csharp
  - vb
  name: Lines3D
  nameWithType: Lines3D
  fullName: DebugDrawItems.Lines3D
  type: Class
  source:
    id: Lines3D
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 13
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nBatch draw multiple 3d lines.\nBoth the positions, and colors list must be non null and the same size.\nEach line must have two entries, one for the the start point and one for the end.\nThe sizes list must have item for each two in the positions list.\n"
  example: []
  syntax:
    content: 'public class Lines3D : BaseItem'
    content.vb: >-
      Public Class Lines3D
          Inherits BaseItem
  inheritance:
  - System.Object
  - DebugDrawItems.BaseItem
  inheritedMembers:
  - DebugDrawItems.BaseItem.BaseAutoSizeDistanceFactor
  - DebugDrawItems.BaseItem.color
  - DebugDrawItems.BaseItem.SetDuration``1(System.Single)
  - DebugDrawItems.BaseItem.SetDuration(System.Single)
  - DebugDrawItems.BaseItem.SetGlobalTransform(UnityEngine.Matrix4x4)
  - DebugDrawItems.BaseItem.ClearGlobalTransform
  - DebugDrawItems.BaseItem.SetGlobalColor(UnityEngine.Color)
  - DebugDrawItems.BaseItem.ClearGlobalColor
  - DebugDrawItems.BaseItem.GetColor(UnityEngine.Color@)
  - DebugDrawItems.BaseItem.Remove
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DebugDrawItems.Lines3D.positions
  commentId: F:DebugDrawItems.Lines3D.positions
  id: positions
  parent: DebugDrawItems.Lines3D
  langs:
  - csharp
  - vb
  name: positions
  nameWithType: Lines3D.positions
  fullName: DebugDrawItems.Lines3D.positions
  type: Field
  source:
    id: positions
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 20
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nThe positions of the start and end points of each line.\n"
  example: []
  syntax:
    content: public List<Vector3> positions
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    content.vb: Public positions As List(Of Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DebugDrawItems.Lines3D.sizes
  commentId: F:DebugDrawItems.Lines3D.sizes
  id: sizes
  parent: DebugDrawItems.Lines3D
  langs:
  - csharp
  - vb
  name: sizes
  nameWithType: Lines3D.sizes
  fullName: DebugDrawItems.Lines3D.sizes
  type: Field
  source:
    id: sizes
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 24
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nThe line thickness, one item for each pair of positions and colors.\n"
  example: []
  syntax:
    content: public List<float> sizes
    return:
      type: System.Collections.Generic.List{System.Single}
    content.vb: Public sizes As List(Of Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DebugDrawItems.Lines3D.colors
  commentId: F:DebugDrawItems.Lines3D.colors
  id: colors
  parent: DebugDrawItems.Lines3D
  langs:
  - csharp
  - vb
  name: colors
  nameWithType: Lines3D.colors
  fullName: DebugDrawItems.Lines3D.colors
  type: Field
  source:
    id: colors
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 28
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nThe colors of the start and end points of each line.\n"
  example: []
  syntax:
    content: public List<Color> colors
    return:
      type: System.Collections.Generic.List{UnityEngine.Color}
    content.vb: Public colors As List(Of Color)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DebugDrawItems.Lines3D.autoSize
  commentId: F:DebugDrawItems.Lines3D.autoSize
  id: autoSize
  parent: DebugDrawItems.Lines3D
  langs:
  - csharp
  - vb
  name: autoSize
  nameWithType: Lines3D.autoSize
  fullName: DebugDrawItems.Lines3D.autoSize
  type: Field
  source:
    id: autoSize
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 32
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nIf true adjusts the size of the line so it approximately remains the same size on screen.\n"
  example: []
  syntax:
    content: public bool autoSize
    return:
      type: System.Boolean
    content.vb: Public autoSize As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DebugDrawItems.Lines3D.facing
  commentId: F:DebugDrawItems.Lines3D.facing
  id: facing
  parent: DebugDrawItems.Lines3D
  langs:
  - csharp
  - vb
  name: facing
  nameWithType: Lines3D.facing
  fullName: DebugDrawItems.Lines3D.facing
  type: Field
  source:
    id: facing
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 37
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nThe forward direction of the line. Automatically updated if faceCamera is true.\nIf null the lines will automatically rotate to face the camera.\n"
  example: []
  syntax:
    content: public Vector3? facing
    return:
      type: System.Nullable{UnityEngine.Vector3}
    content.vb: Public facing As Vector3?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DebugDrawItems.Lines3D.Get(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  commentId: M:DebugDrawItems.Lines3D.Get(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  id: Get(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Single)
  parent: DebugDrawItems.Lines3D
  langs:
  - csharp
  - vb
  name: Get(List<Vector3>, List<Single>, List<Color>, Single)
  nameWithType: Lines3D.Get(List<Vector3>, List<Single>, List<Color>, Single)
  fullName: DebugDrawItems.Lines3D.Get(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Single>, System.Collections.Generic.List<UnityEngine.Color>, System.Single)
  type: Method
  source:
    id: Get
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 50
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nDraws a batch of 3D lines that orients itself towards the camera.\n"
  example: []
  syntax:
    content: public static Lines3D Get(List<Vector3> positions, List<float> sizes, List<Color> colors, float duration = 0F)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The line thickness, one item for each pair of positions and colors.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Lines3D
      description: The Line object.
    content.vb: Public Shared Function Get(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), duration As Single = 0F) As Lines3D
  overload: DebugDrawItems.Lines3D.Get*
  nameWithType.vb: Lines3D.Get(List(Of Vector3), List(Of Single), List(Of Color), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDrawItems.Lines3D.Get(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Single), System.Collections.Generic.List(Of UnityEngine.Color), System.Single)
  name.vb: Get(List(Of Vector3), List(Of Single), List(Of Color), Single)
- uid: DebugDrawItems.Lines3D.Get(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  commentId: M:DebugDrawItems.Lines3D.Get(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  id: Get(System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{UnityEngine.Color},System.Nullable{UnityEngine.Vector3},System.Single)
  parent: DebugDrawItems.Lines3D
  langs:
  - csharp
  - vb
  name: Get(List<Vector3>, List<Single>, List<Color>, Nullable<Vector3>, Single)
  nameWithType: Lines3D.Get(List<Vector3>, List<Single>, List<Color>, Nullable<Vector3>, Single)
  fullName: DebugDrawItems.Lines3D.Get(System.Collections.Generic.List<UnityEngine.Vector3>, System.Collections.Generic.List<System.Single>, System.Collections.Generic.List<UnityEngine.Color>, System.Nullable<UnityEngine.Vector3>, System.Single)
  type: Method
  source:
    id: Get
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 74
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nDraws a 3D line facing the given direction.\n"
  example: []
  syntax:
    content: public static Lines3D Get(List<Vector3> positions, List<float> sizes, List<Color> colors, Vector3? facing, float duration = 0F)
    parameters:
    - id: positions
      type: System.Collections.Generic.List{UnityEngine.Vector3}
      description: The positions of the start and end points of each line.
    - id: sizes
      type: System.Collections.Generic.List{System.Single}
      description: The line thickness, one item for each pair of positions and colors.
    - id: colors
      type: System.Collections.Generic.List{UnityEngine.Color}
      description: The colors of the start and end points of each line.
    - id: facing
      type: System.Nullable{UnityEngine.Vector3}
      description: >-
        The forward direction of the line. Automatically updated if faceCamera is true.

        If null the lines will automatically rotate to face the camera.
    - id: duration
      type: System.Single
      description: How long the item will last in seconds. Set to 0 for only the next frame, and negative to persist forever.
    return:
      type: DebugDrawItems.Lines3D
      description: The Line object.
    content.vb: Public Shared Function Get(positions As List(Of Vector3), sizes As List(Of Single), colors As List(Of Color), facing As Vector3?, duration As Single = 0F) As Lines3D
  overload: DebugDrawItems.Lines3D.Get*
  nameWithType.vb: Lines3D.Get(List(Of Vector3), List(Of Single), List(Of Color), Nullable(Of Vector3), Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DebugDrawItems.Lines3D.Get(System.Collections.Generic.List(Of UnityEngine.Vector3), System.Collections.Generic.List(Of System.Single), System.Collections.Generic.List(Of UnityEngine.Color), System.Nullable(Of UnityEngine.Vector3), System.Single)
  name.vb: Get(List(Of Vector3), List(Of Single), List(Of Color), Nullable(Of Vector3), Single)
- uid: DebugDrawItems.Lines3D.SetAutoSize(System.Boolean)
  commentId: M:DebugDrawItems.Lines3D.SetAutoSize(System.Boolean)
  id: SetAutoSize(System.Boolean)
  parent: DebugDrawItems.Lines3D
  langs:
  - csharp
  - vb
  name: SetAutoSize(Boolean)
  nameWithType: Lines3D.SetAutoSize(Boolean)
  fullName: DebugDrawItems.Lines3D.SetAutoSize(System.Boolean)
  type: Method
  source:
    id: SetAutoSize
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 96
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nIf true adjusts the size of the lines so it approximately remains the same size on screen.\n"
  example: []
  syntax:
    content: public Lines3D SetAutoSize(bool autoSize = true)
    parameters:
    - id: autoSize
      type: System.Boolean
      description: ''
    return:
      type: DebugDrawItems.Lines3D
      description: ''
    content.vb: Public Function SetAutoSize(autoSize As Boolean = True) As Lines3D
  overload: DebugDrawItems.Lines3D.SetAutoSize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DebugDrawItems.Lines3D.SetFacing(System.Nullable{UnityEngine.Vector3})
  commentId: M:DebugDrawItems.Lines3D.SetFacing(System.Nullable{UnityEngine.Vector3})
  id: SetFacing(System.Nullable{UnityEngine.Vector3})
  parent: DebugDrawItems.Lines3D
  langs:
  - csharp
  - vb
  name: SetFacing(Nullable<Vector3>)
  nameWithType: Lines3D.SetFacing(Nullable<Vector3>)
  fullName: DebugDrawItems.Lines3D.SetFacing(System.Nullable<UnityEngine.Vector3>)
  type: Method
  source:
    id: SetFacing
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Items\Lines3D.cs
    startLine: 108
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawItems
  summary: "\nIf null the line will automatically rotate to face the camera.\n"
  example: []
  syntax:
    content: public Lines3D SetFacing(Vector3? facing)
    parameters:
    - id: facing
      type: System.Nullable{UnityEngine.Vector3}
      description: ''
    return:
      type: DebugDrawItems.Lines3D
      description: ''
    content.vb: Public Function SetFacing(facing As Vector3?) As Lines3D
  overload: DebugDrawItems.Lines3D.SetFacing*
  nameWithType.vb: Lines3D.SetFacing(Nullable(Of Vector3))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DebugDrawItems.Lines3D.SetFacing(System.Nullable(Of UnityEngine.Vector3))
  name.vb: SetFacing(Nullable(Of Vector3))
references:
- uid: DebugDrawItems
  commentId: N:DebugDrawItems
  name: DebugDrawItems
  nameWithType: DebugDrawItems
  fullName: DebugDrawItems
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DebugDrawItems.BaseItem
  commentId: T:DebugDrawItems.BaseItem
  parent: DebugDrawItems
  name: BaseItem
  nameWithType: BaseItem
  fullName: DebugDrawItems.BaseItem
- uid: DebugDrawItems.BaseItem.BaseAutoSizeDistanceFactor
  commentId: F:DebugDrawItems.BaseItem.BaseAutoSizeDistanceFactor
  parent: DebugDrawItems.BaseItem
  name: BaseAutoSizeDistanceFactor
  nameWithType: BaseItem.BaseAutoSizeDistanceFactor
  fullName: DebugDrawItems.BaseItem.BaseAutoSizeDistanceFactor
- uid: DebugDrawItems.BaseItem.color
  commentId: F:DebugDrawItems.BaseItem.color
  parent: DebugDrawItems.BaseItem
  name: color
  nameWithType: BaseItem.color
  fullName: DebugDrawItems.BaseItem.color
- uid: DebugDrawItems.BaseItem.SetDuration``1(System.Single)
  commentId: M:DebugDrawItems.BaseItem.SetDuration``1(System.Single)
  parent: DebugDrawItems.BaseItem
  isExternal: true
  name: SetDuration<T>(Single)
  nameWithType: BaseItem.SetDuration<T>(Single)
  fullName: DebugDrawItems.BaseItem.SetDuration<T>(System.Single)
  nameWithType.vb: BaseItem.SetDuration(Of T)(Single)
  fullName.vb: DebugDrawItems.BaseItem.SetDuration(Of T)(System.Single)
  name.vb: SetDuration(Of T)(Single)
  spec.csharp:
  - uid: DebugDrawItems.BaseItem.SetDuration``1(System.Single)
    name: SetDuration<T>
    nameWithType: BaseItem.SetDuration<T>
    fullName: DebugDrawItems.BaseItem.SetDuration<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DebugDrawItems.BaseItem.SetDuration``1(System.Single)
    name: SetDuration(Of T)
    nameWithType: BaseItem.SetDuration(Of T)
    fullName: DebugDrawItems.BaseItem.SetDuration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.BaseItem.SetDuration(System.Single)
  commentId: M:DebugDrawItems.BaseItem.SetDuration(System.Single)
  parent: DebugDrawItems.BaseItem
  isExternal: true
  name: SetDuration(Single)
  nameWithType: BaseItem.SetDuration(Single)
  fullName: DebugDrawItems.BaseItem.SetDuration(System.Single)
  spec.csharp:
  - uid: DebugDrawItems.BaseItem.SetDuration(System.Single)
    name: SetDuration
    nameWithType: BaseItem.SetDuration
    fullName: DebugDrawItems.BaseItem.SetDuration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DebugDrawItems.BaseItem.SetDuration(System.Single)
    name: SetDuration
    nameWithType: BaseItem.SetDuration
    fullName: DebugDrawItems.BaseItem.SetDuration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.BaseItem.SetGlobalTransform(UnityEngine.Matrix4x4)
  commentId: M:DebugDrawItems.BaseItem.SetGlobalTransform(UnityEngine.Matrix4x4)
  parent: DebugDrawItems.BaseItem
  isExternal: true
  name: SetGlobalTransform(Matrix4x4)
  nameWithType: BaseItem.SetGlobalTransform(Matrix4x4)
  fullName: DebugDrawItems.BaseItem.SetGlobalTransform(UnityEngine.Matrix4x4)
  spec.csharp:
  - uid: DebugDrawItems.BaseItem.SetGlobalTransform(UnityEngine.Matrix4x4)
    name: SetGlobalTransform
    nameWithType: BaseItem.SetGlobalTransform
    fullName: DebugDrawItems.BaseItem.SetGlobalTransform
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: UnityEngine.Matrix4x4
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DebugDrawItems.BaseItem.SetGlobalTransform(UnityEngine.Matrix4x4)
    name: SetGlobalTransform
    nameWithType: BaseItem.SetGlobalTransform
    fullName: DebugDrawItems.BaseItem.SetGlobalTransform
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: UnityEngine.Matrix4x4
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.BaseItem.ClearGlobalTransform
  commentId: M:DebugDrawItems.BaseItem.ClearGlobalTransform
  parent: DebugDrawItems.BaseItem
  name: ClearGlobalTransform()
  nameWithType: BaseItem.ClearGlobalTransform()
  fullName: DebugDrawItems.BaseItem.ClearGlobalTransform()
  spec.csharp:
  - uid: DebugDrawItems.BaseItem.ClearGlobalTransform
    name: ClearGlobalTransform
    nameWithType: BaseItem.ClearGlobalTransform
    fullName: DebugDrawItems.BaseItem.ClearGlobalTransform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DebugDrawItems.BaseItem.ClearGlobalTransform
    name: ClearGlobalTransform
    nameWithType: BaseItem.ClearGlobalTransform
    fullName: DebugDrawItems.BaseItem.ClearGlobalTransform
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.BaseItem.SetGlobalColor(UnityEngine.Color)
  commentId: M:DebugDrawItems.BaseItem.SetGlobalColor(UnityEngine.Color)
  parent: DebugDrawItems.BaseItem
  isExternal: true
  name: SetGlobalColor(Color)
  nameWithType: BaseItem.SetGlobalColor(Color)
  fullName: DebugDrawItems.BaseItem.SetGlobalColor(UnityEngine.Color)
  spec.csharp:
  - uid: DebugDrawItems.BaseItem.SetGlobalColor(UnityEngine.Color)
    name: SetGlobalColor
    nameWithType: BaseItem.SetGlobalColor
    fullName: DebugDrawItems.BaseItem.SetGlobalColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DebugDrawItems.BaseItem.SetGlobalColor(UnityEngine.Color)
    name: SetGlobalColor
    nameWithType: BaseItem.SetGlobalColor
    fullName: DebugDrawItems.BaseItem.SetGlobalColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.BaseItem.ClearGlobalColor
  commentId: M:DebugDrawItems.BaseItem.ClearGlobalColor
  parent: DebugDrawItems.BaseItem
  name: ClearGlobalColor()
  nameWithType: BaseItem.ClearGlobalColor()
  fullName: DebugDrawItems.BaseItem.ClearGlobalColor()
  spec.csharp:
  - uid: DebugDrawItems.BaseItem.ClearGlobalColor
    name: ClearGlobalColor
    nameWithType: BaseItem.ClearGlobalColor
    fullName: DebugDrawItems.BaseItem.ClearGlobalColor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DebugDrawItems.BaseItem.ClearGlobalColor
    name: ClearGlobalColor
    nameWithType: BaseItem.ClearGlobalColor
    fullName: DebugDrawItems.BaseItem.ClearGlobalColor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.BaseItem.GetColor(UnityEngine.Color@)
  commentId: M:DebugDrawItems.BaseItem.GetColor(UnityEngine.Color@)
  parent: DebugDrawItems.BaseItem
  isExternal: true
  name: GetColor(Color)
  nameWithType: BaseItem.GetColor(Color)
  fullName: DebugDrawItems.BaseItem.GetColor(UnityEngine.Color)
  spec.csharp:
  - uid: DebugDrawItems.BaseItem.GetColor(UnityEngine.Color@)
    name: GetColor
    nameWithType: BaseItem.GetColor
    fullName: DebugDrawItems.BaseItem.GetColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DebugDrawItems.BaseItem.GetColor(UnityEngine.Color@)
    name: GetColor
    nameWithType: BaseItem.GetColor
    fullName: DebugDrawItems.BaseItem.GetColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.BaseItem.Remove
  commentId: M:DebugDrawItems.BaseItem.Remove
  parent: DebugDrawItems.BaseItem
  name: Remove()
  nameWithType: BaseItem.Remove()
  fullName: DebugDrawItems.BaseItem.Remove()
  spec.csharp:
  - uid: DebugDrawItems.BaseItem.Remove
    name: Remove
    nameWithType: BaseItem.Remove
    fullName: DebugDrawItems.BaseItem.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DebugDrawItems.BaseItem.Remove
    name: Remove
    nameWithType: BaseItem.Remove
    fullName: DebugDrawItems.BaseItem.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{UnityEngine.Vector3}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<UnityEngine.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{System.Single}
  commentId: T:System.Collections.Generic.List{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Single>
  nameWithType: List<Single>
  fullName: System.Collections.Generic.List<System.Single>
  nameWithType.vb: List(Of Single)
  fullName.vb: System.Collections.Generic.List(Of System.Single)
  name.vb: List(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{UnityEngine.Color}
  commentId: T:System.Collections.Generic.List{UnityEngine.Color}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Color>
  nameWithType: List<Color>
  fullName: System.Collections.Generic.List<UnityEngine.Color>
  nameWithType.vb: List(Of Color)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Color)
  name.vb: List(Of Color)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{UnityEngine.Vector3}
  commentId: T:System.Nullable{UnityEngine.Vector3}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Vector3>
  nameWithType: Nullable<Vector3>
  fullName: System.Nullable<UnityEngine.Vector3>
  nameWithType.vb: Nullable(Of Vector3)
  fullName.vb: System.Nullable(Of UnityEngine.Vector3)
  name.vb: Nullable(Of Vector3)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DebugDrawItems.Lines3D.Get*
  commentId: Overload:DebugDrawItems.Lines3D.Get
  name: Get
  nameWithType: Lines3D.Get
  fullName: DebugDrawItems.Lines3D.Get
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: DebugDrawItems.Lines3D
  commentId: T:DebugDrawItems.Lines3D
  parent: DebugDrawItems
  name: Lines3D
  nameWithType: Lines3D
  fullName: DebugDrawItems.Lines3D
- uid: DebugDrawItems.Lines3D.SetAutoSize*
  commentId: Overload:DebugDrawItems.Lines3D.SetAutoSize
  name: SetAutoSize
  nameWithType: Lines3D.SetAutoSize
  fullName: DebugDrawItems.Lines3D.SetAutoSize
- uid: DebugDrawItems.Lines3D.SetFacing*
  commentId: Overload:DebugDrawItems.Lines3D.SetFacing
  name: SetFacing
  nameWithType: Lines3D.SetFacing
  fullName: DebugDrawItems.Lines3D.SetFacing
