### YamlMime:ManagedReference
items:
- uid: DebugDrawUtils.Log
  commentId: T:DebugDrawUtils.Log
  id: Log
  parent: DebugDrawUtils
  children:
  - DebugDrawUtils.Log.Clear
  - DebugDrawUtils.Log.Error(System.Object)
  - DebugDrawUtils.Log.Error(System.String)
  - DebugDrawUtils.Log.ErrorFormat(System.String,System.Object[])
  - DebugDrawUtils.Log.ErrorFormat(UnityEngine.Object,System.String,System.Object[])
  - DebugDrawUtils.Log.GetArgString(System.Object[])
  - DebugDrawUtils.Log.GetDictString``2(System.Collections.Generic.IDictionary{``0,``1})
  - DebugDrawUtils.Log.GetKeyValuePairsString(System.Object[])
  - DebugDrawUtils.Log.GetString(System.Boolean)
  - DebugDrawUtils.Log.GetString(System.Byte)
  - DebugDrawUtils.Log.GetString(System.Char)
  - DebugDrawUtils.Log.GetString(System.Collections.IEnumerable)
  - DebugDrawUtils.Log.GetString(System.Decimal)
  - DebugDrawUtils.Log.GetString(System.Double)
  - DebugDrawUtils.Log.GetString(System.IFormattable)
  - DebugDrawUtils.Log.GetString(System.Int16)
  - DebugDrawUtils.Log.GetString(System.Int32)
  - DebugDrawUtils.Log.GetString(System.Int64)
  - DebugDrawUtils.Log.GetString(System.Object)
  - DebugDrawUtils.Log.GetString(System.SByte)
  - DebugDrawUtils.Log.GetString(System.Single)
  - DebugDrawUtils.Log.GetString(System.String)
  - DebugDrawUtils.Log.GetString(System.UInt16)
  - DebugDrawUtils.Log.GetString(System.UInt32)
  - DebugDrawUtils.Log.GetString(System.UInt64)
  - DebugDrawUtils.Log.GetString(UnityEngine.Object)
  - DebugDrawUtils.Log.GetString(UnityEngine.Transform)
  - DebugDrawUtils.Log.GetString(UnityEngine.Vector2@)
  - DebugDrawUtils.Log.GetString(UnityEngine.Vector3@)
  - DebugDrawUtils.Log.GetString(UnityEngine.Vector4@)
  - DebugDrawUtils.Log.MessageStyle
  - DebugDrawUtils.Log.Print(System.Boolean)
  - DebugDrawUtils.Log.Print(System.Byte)
  - DebugDrawUtils.Log.Print(System.Char)
  - DebugDrawUtils.Log.Print(System.Decimal)
  - DebugDrawUtils.Log.Print(System.Double)
  - DebugDrawUtils.Log.Print(System.Int16)
  - DebugDrawUtils.Log.Print(System.Int32)
  - DebugDrawUtils.Log.Print(System.Int64)
  - DebugDrawUtils.Log.Print(System.Object)
  - DebugDrawUtils.Log.Print(System.Object[])
  - DebugDrawUtils.Log.Print(System.SByte)
  - DebugDrawUtils.Log.Print(System.Single)
  - DebugDrawUtils.Log.Print(System.String)
  - DebugDrawUtils.Log.Print(System.String,System.Boolean)
  - DebugDrawUtils.Log.Print(System.String,System.Byte)
  - DebugDrawUtils.Log.Print(System.String,System.Char)
  - DebugDrawUtils.Log.Print(System.String,System.Decimal)
  - DebugDrawUtils.Log.Print(System.String,System.Double)
  - DebugDrawUtils.Log.Print(System.String,System.Int16)
  - DebugDrawUtils.Log.Print(System.String,System.Int32)
  - DebugDrawUtils.Log.Print(System.String,System.Int64)
  - DebugDrawUtils.Log.Print(System.String,System.SByte)
  - DebugDrawUtils.Log.Print(System.String,System.Single)
  - DebugDrawUtils.Log.Print(System.String,System.String)
  - DebugDrawUtils.Log.Print(System.String,System.UInt16)
  - DebugDrawUtils.Log.Print(System.String,System.UInt32)
  - DebugDrawUtils.Log.Print(System.String,System.UInt64)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.Matrix4x4)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.Object)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.Quaternion)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.Rect)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.RectInt)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector2)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector2Int)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector3)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector3Int)
  - DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector4)
  - DebugDrawUtils.Log.Print(System.UInt16)
  - DebugDrawUtils.Log.Print(System.UInt32)
  - DebugDrawUtils.Log.Print(System.UInt64)
  - DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  - DebugDrawUtils.Log.Print(UnityEngine.Matrix4x4)
  - DebugDrawUtils.Log.Print(UnityEngine.Object)
  - DebugDrawUtils.Log.Print(UnityEngine.Object[])
  - DebugDrawUtils.Log.Print(UnityEngine.Quaternion)
  - DebugDrawUtils.Log.Print(UnityEngine.Rect)
  - DebugDrawUtils.Log.Print(UnityEngine.RectInt)
  - DebugDrawUtils.Log.Print(UnityEngine.Transform)
  - DebugDrawUtils.Log.Print(UnityEngine.Vector2)
  - DebugDrawUtils.Log.Print(UnityEngine.Vector2Int)
  - DebugDrawUtils.Log.Print(UnityEngine.Vector3)
  - DebugDrawUtils.Log.Print(UnityEngine.Vector3Int)
  - DebugDrawUtils.Log.Print(UnityEngine.Vector4)
  - DebugDrawUtils.Log.PrintException(System.Exception)
  - DebugDrawUtils.Log.PrintException(System.Exception,UnityEngine.Object)
  - DebugDrawUtils.Log.PrintFormat(System.String,System.Object[])
  - DebugDrawUtils.Log.PrintFormat(UnityEngine.LogType,UnityEngine.LogOption,UnityEngine.Object,System.String,System.Object[])
  - DebugDrawUtils.Log.PrintFormat(UnityEngine.Object,System.String,System.Object[])
  - DebugDrawUtils.Log.PrintKeyValue(System.Object[])
  - DebugDrawUtils.Log.Print``1(System.Collections.Generic.IEnumerable{``0})
  - DebugDrawUtils.Log.Print``2(System.Collections.Generic.IDictionary{``0,``1})
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Boolean)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Byte)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Char)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Decimal)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Double)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Int16)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Int32)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Int64)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Object)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Object[])
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.SByte)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Single)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Boolean)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Byte)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Char)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Decimal)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Double)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Int16)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Int32)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Int64)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.SByte)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Single)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.String)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.UInt16)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.UInt32)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.UInt64)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Matrix4x4)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Object)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Quaternion)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Rect)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.RectInt)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2Int)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3Int)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector4)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.UInt16)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.UInt32)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,System.UInt64)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.GameObject[])
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Matrix4x4)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Object)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Object[])
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Quaternion)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Rect)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.RectInt)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Transform)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector2)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector2Int)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector3)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector3Int)
  - DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector4)
  - DebugDrawUtils.Log.ShowFormat(System.Int32,System.Single,System.String,System.Object[])
  - DebugDrawUtils.Log.Show``1(System.Int32,System.Single,System.Collections.Generic.IEnumerable{``0})
  - DebugDrawUtils.Log.Time(System.String)
  - DebugDrawUtils.Log.TimeEnd
  - DebugDrawUtils.Log.TimeStop
  - DebugDrawUtils.Log.Warn(System.Object)
  - DebugDrawUtils.Log.Warn(System.String)
  - DebugDrawUtils.Log.WarnFormat(System.String,System.Object[])
  - DebugDrawUtils.Log.WarnFormat(UnityEngine.Object,System.String,System.Object[])
  - DebugDrawUtils.Log.defaultLogContext
  - DebugDrawUtils.Log.defaultLogType
  - DebugDrawUtils.Log.maxArrayItems
  - DebugDrawUtils.Log.maxMessages
  - DebugDrawUtils.Log.messageShadowColor
  - DebugDrawUtils.Log.nextMessageColor
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: Log
  fullName: DebugDrawUtils.Log
  type: Class
  source:
    id: Log
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 11
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Provides some extended logging overloads, e.g. <xref href="DebugDrawUtils.Log.Print(UnityEngine.GameObject%5b%5d)" data-throw-if-not-resolved="false"></xref>.

    Also supports all the same Debug.Log** methods so it can be a drop-in replacement.
  example: []
  syntax:
    content: public static class Log
    content.vb: Public Module Log
  inheritance:
  - System.Object
- uid: DebugDrawUtils.Log.defaultLogContext
  commentId: F:DebugDrawUtils.Log.defaultLogContext
  id: defaultLogContext
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: defaultLogContext
  nameWithType: Log.defaultLogContext
  fullName: DebugDrawUtils.Log.defaultLogContext
  type: Field
  source:
    id: defaultLogContext
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 34
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Can be set for all log methods instead of passing individual contexts to each Log call.
  example: []
  syntax:
    content: public static Object defaultLogContext
    return:
      type: UnityEngine.Object
    content.vb: Public Shared defaultLogContext As [Object]
- uid: DebugDrawUtils.Log.defaultLogType
  commentId: F:DebugDrawUtils.Log.defaultLogType
  id: defaultLogType
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: defaultLogType
  nameWithType: Log.defaultLogType
  fullName: DebugDrawUtils.Log.defaultLogType
  type: Field
  source:
    id: defaultLogType
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 39
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: The log type used when using the extended log override methods.
  example: []
  syntax:
    content: public static LogType defaultLogType
    return:
      type: UnityEngine.LogType
    content.vb: Public Shared defaultLogType As LogType
- uid: DebugDrawUtils.Log.maxArrayItems
  commentId: F:DebugDrawUtils.Log.maxArrayItems
  id: maxArrayItems
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: maxArrayItems
  nameWithType: Log.maxArrayItems
  fullName: DebugDrawUtils.Log.maxArrayItems
  type: Field
  source:
    id: maxArrayItems
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 44
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: When logging arrays, this controls the maximum number of items that will be displayed
  example: []
  syntax:
    content: public static int maxArrayItems
    return:
      type: System.Int32
    content.vb: Public Shared maxArrayItems As Integer
- uid: DebugDrawUtils.Log.maxMessages
  commentId: F:DebugDrawUtils.Log.maxMessages
  id: maxMessages
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: maxMessages
  nameWithType: Log.maxMessages
  fullName: DebugDrawUtils.Log.maxMessages
  type: Field
  source:
    id: maxMessages
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 49
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: The max number of on screen messages in the queue - once the queue fills up old messages will be removed.
  example: []
  syntax:
    content: public static int maxMessages
    return:
      type: System.Int32
    content.vb: Public Shared maxMessages As Integer
- uid: DebugDrawUtils.Log.messageShadowColor
  commentId: F:DebugDrawUtils.Log.messageShadowColor
  id: messageShadowColor
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: messageShadowColor
  nameWithType: Log.messageShadowColor
  fullName: DebugDrawUtils.Log.messageShadowColor
  type: Field
  source:
    id: messageShadowColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 55
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Adds a subtle drop shadow to on screen messages to make them easier to read.

    Set to null to disable.
  example: []
  syntax:
    content: public static Color? messageShadowColor
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public Shared messageShadowColor As Color?
- uid: DebugDrawUtils.Log.nextMessageColor
  commentId: F:DebugDrawUtils.Log.nextMessageColor
  id: nextMessageColor
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: nextMessageColor
  nameWithType: Log.nextMessageColor
  fullName: DebugDrawUtils.Log.nextMessageColor
  type: Field
  source:
    id: nextMessageColor
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 61
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    Sets the color of only the next on screen message. Will be reset during the next call to Show**.

    Set to null to reset.
  example: []
  syntax:
    content: public static Color? nextMessageColor
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public Shared nextMessageColor As Color?
- uid: DebugDrawUtils.Log.MessageStyle
  commentId: F:DebugDrawUtils.Log.MessageStyle
  id: MessageStyle
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: MessageStyle
  nameWithType: Log.MessageStyle
  fullName: DebugDrawUtils.Log.MessageStyle
  type: Field
  source:
    id: MessageStyle
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 66
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: Use to adjust the default style of on screen messages.
  example: []
  syntax:
    content: public static readonly GUIStyle MessageStyle
    return:
      type: UnityEngine.GUIStyle
    content.vb: Public Shared ReadOnly MessageStyle As GUIStyle
- uid: DebugDrawUtils.Log.Print(System.String)
  commentId: M:DebugDrawUtils.Log.Print(System.String)
  id: Print(System.String)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string)
  nameWithType: Log.Print(string)
  fullName: DebugDrawUtils.Log.Print(string)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 87
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message)
    parameters:
    - id: message
      type: System.String
      description: String for display.
    content.vb: Public Shared Sub Print(message As String)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String)
  fullName.vb: DebugDrawUtils.Log.Print(String)
  name.vb: Print(String)
- uid: DebugDrawUtils.Log.Print(System.Object)
  commentId: M:DebugDrawUtils.Log.Print(System.Object)
  id: Print(System.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(object)
  nameWithType: Log.Print(object)
  fullName: DebugDrawUtils.Log.Print(object)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 96
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(object message)
    parameters:
    - id: message
      type: System.Object
      description: String or object to be converted to string representation for display.
    content.vb: Public Shared Sub Print(message As Object)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Object)
  fullName.vb: DebugDrawUtils.Log.Print(Object)
  name.vb: Print(Object)
- uid: DebugDrawUtils.Log.PrintFormat(System.String,System.Object[])
  commentId: M:DebugDrawUtils.Log.PrintFormat(System.String,System.Object[])
  id: PrintFormat(System.String,System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: PrintFormat(string, params object[])
  nameWithType: Log.PrintFormat(string, params object[])
  fullName: DebugDrawUtils.Log.PrintFormat(string, params object[])
  type: Method
  source:
    id: PrintFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 106
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a formatted message to the Unity Console.</p>
  example: []
  syntax:
    content: public static void PrintFormat(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub PrintFormat(format As String, ParamArray args As Object())
  overload: DebugDrawUtils.Log.PrintFormat*
  nameWithType.vb: Log.PrintFormat(String, ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.PrintFormat(String, ParamArray Object())
  name.vb: PrintFormat(String, ParamArray Object())
- uid: DebugDrawUtils.Log.PrintFormat(UnityEngine.Object,System.String,System.Object[])
  commentId: M:DebugDrawUtils.Log.PrintFormat(UnityEngine.Object,System.String,System.Object[])
  id: PrintFormat(UnityEngine.Object,System.String,System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: PrintFormat(Object, string, params object[])
  nameWithType: Log.PrintFormat(Object, string, params object[])
  fullName: DebugDrawUtils.Log.PrintFormat(UnityEngine.Object, string, params object[])
  type: Method
  source:
    id: PrintFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 117
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a formatted message to the Unity Console.</p>
  example: []
  syntax:
    content: public static void PrintFormat(Object context, string format, params object[] args)
    parameters:
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub PrintFormat(context As [Object], format As String, ParamArray args As Object())
  overload: DebugDrawUtils.Log.PrintFormat*
  nameWithType.vb: Log.PrintFormat(Object, String, ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.PrintFormat(UnityEngine.Object, String, ParamArray Object())
  name.vb: PrintFormat(Object, String, ParamArray Object())
- uid: DebugDrawUtils.Log.PrintFormat(UnityEngine.LogType,UnityEngine.LogOption,UnityEngine.Object,System.String,System.Object[])
  commentId: M:DebugDrawUtils.Log.PrintFormat(UnityEngine.LogType,UnityEngine.LogOption,UnityEngine.Object,System.String,System.Object[])
  id: PrintFormat(UnityEngine.LogType,UnityEngine.LogOption,UnityEngine.Object,System.String,System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: PrintFormat(LogType, LogOption, Object, string, params object[])
  nameWithType: Log.PrintFormat(LogType, LogOption, Object, string, params object[])
  fullName: DebugDrawUtils.Log.PrintFormat(UnityEngine.LogType, UnityEngine.LogOption, UnityEngine.Object, string, params object[])
  type: Method
  source:
    id: PrintFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 130
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a formatted message to the Unity Console.</p>
  example: []
  syntax:
    content: public static void PrintFormat(LogType logType, LogOption logOptions, Object context, string format, params object[] args)
    parameters:
    - id: logType
      type: UnityEngine.LogType
      description: Type of message e.g. warn or error etc.
    - id: logOptions
      type: UnityEngine.LogOption
      description: Option flags to treat the log message special.
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub PrintFormat(logType As LogType, logOptions As LogOption, context As [Object], format As String, ParamArray args As Object())
  overload: DebugDrawUtils.Log.PrintFormat*
  nameWithType.vb: Log.PrintFormat(LogType, LogOption, Object, String, ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.PrintFormat(UnityEngine.LogType, UnityEngine.LogOption, UnityEngine.Object, String, ParamArray Object())
  name.vb: PrintFormat(LogType, LogOption, Object, String, ParamArray Object())
- uid: DebugDrawUtils.Log.PrintException(System.Exception)
  commentId: M:DebugDrawUtils.Log.PrintException(System.Exception)
  id: PrintException(System.Exception)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: PrintException(Exception)
  nameWithType: Log.PrintException(Exception)
  fullName: DebugDrawUtils.Log.PrintException(System.Exception)
  type: Method
  source:
    id: PrintException
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 139
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>A variant of Debug.unityLogger.Log that logs an error message to the console.</p>
  example: []
  syntax:
    content: public static void PrintException(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
      description: Runtime Exception.
    content.vb: Public Shared Sub PrintException(exception As Exception)
  overload: DebugDrawUtils.Log.PrintException*
- uid: DebugDrawUtils.Log.PrintException(System.Exception,UnityEngine.Object)
  commentId: M:DebugDrawUtils.Log.PrintException(System.Exception,UnityEngine.Object)
  id: PrintException(System.Exception,UnityEngine.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: PrintException(Exception, Object)
  nameWithType: Log.PrintException(Exception, Object)
  fullName: DebugDrawUtils.Log.PrintException(System.Exception, UnityEngine.Object)
  type: Method
  source:
    id: PrintException
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 149
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>A variant of Debug.unityLogger.Log that logs an error message to the console.</p>
  example: []
  syntax:
    content: public static void PrintException(Exception exception, Object context)
    parameters:
    - id: exception
      type: System.Exception
      description: Runtime Exception.
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    content.vb: Public Shared Sub PrintException(exception As Exception, context As [Object])
  overload: DebugDrawUtils.Log.PrintException*
- uid: DebugDrawUtils.Log.Warn(System.String)
  commentId: M:DebugDrawUtils.Log.Warn(System.String)
  id: Warn(System.String)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Warn(string)
  nameWithType: Log.Warn(string)
  fullName: DebugDrawUtils.Log.Warn(string)
  type: Method
  source:
    id: Warn
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 161
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>A variant of Debug.Log that logs a warning message to the console.</p>
  example: []
  syntax:
    content: public static void Warn(string message)
    parameters:
    - id: message
      type: System.String
      description: String for display.
    content.vb: Public Shared Sub Warn(message As String)
  overload: DebugDrawUtils.Log.Warn*
  nameWithType.vb: Log.Warn(String)
  fullName.vb: DebugDrawUtils.Log.Warn(String)
  name.vb: Warn(String)
- uid: DebugDrawUtils.Log.Warn(System.Object)
  commentId: M:DebugDrawUtils.Log.Warn(System.Object)
  id: Warn(System.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Warn(object)
  nameWithType: Log.Warn(object)
  fullName: DebugDrawUtils.Log.Warn(object)
  type: Method
  source:
    id: Warn
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 170
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>A variant of Debug.Log that logs a warning message to the console.</p>
  example: []
  syntax:
    content: public static void Warn(object message)
    parameters:
    - id: message
      type: System.Object
      description: String or object to be converted to string representation for display.
    content.vb: Public Shared Sub Warn(message As Object)
  overload: DebugDrawUtils.Log.Warn*
  nameWithType.vb: Log.Warn(Object)
  fullName.vb: DebugDrawUtils.Log.Warn(Object)
  name.vb: Warn(Object)
- uid: DebugDrawUtils.Log.WarnFormat(System.String,System.Object[])
  commentId: M:DebugDrawUtils.Log.WarnFormat(System.String,System.Object[])
  id: WarnFormat(System.String,System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: WarnFormat(string, params object[])
  nameWithType: Log.WarnFormat(string, params object[])
  fullName: DebugDrawUtils.Log.WarnFormat(string, params object[])
  type: Method
  source:
    id: WarnFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 180
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a formatted warning message to the Unity Console.</p>
  example: []
  syntax:
    content: public static void WarnFormat(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub WarnFormat(format As String, ParamArray args As Object())
  overload: DebugDrawUtils.Log.WarnFormat*
  nameWithType.vb: Log.WarnFormat(String, ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.WarnFormat(String, ParamArray Object())
  name.vb: WarnFormat(String, ParamArray Object())
- uid: DebugDrawUtils.Log.WarnFormat(UnityEngine.Object,System.String,System.Object[])
  commentId: M:DebugDrawUtils.Log.WarnFormat(UnityEngine.Object,System.String,System.Object[])
  id: WarnFormat(UnityEngine.Object,System.String,System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: WarnFormat(Object, string, params object[])
  nameWithType: Log.WarnFormat(Object, string, params object[])
  fullName: DebugDrawUtils.Log.WarnFormat(UnityEngine.Object, string, params object[])
  type: Method
  source:
    id: WarnFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 191
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a formatted warning message to the Unity Console.</p>
  example: []
  syntax:
    content: public static void WarnFormat(Object context, string format, params object[] args)
    parameters:
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub WarnFormat(context As [Object], format As String, ParamArray args As Object())
  overload: DebugDrawUtils.Log.WarnFormat*
  nameWithType.vb: Log.WarnFormat(Object, String, ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.WarnFormat(UnityEngine.Object, String, ParamArray Object())
  name.vb: WarnFormat(Object, String, ParamArray Object())
- uid: DebugDrawUtils.Log.Error(System.String)
  commentId: M:DebugDrawUtils.Log.Error(System.String)
  id: Error(System.String)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Error(string)
  nameWithType: Log.Error(string)
  fullName: DebugDrawUtils.Log.Error(string)
  type: Method
  source:
    id: Error
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 204
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>A variant of Debug.Log that logs an error message to the console.</p>
  example: []
  syntax:
    content: public static void Error(string message)
    parameters:
    - id: message
      type: System.String
      description: String for display.
    content.vb: Public Shared Sub [Error](message As String)
  overload: DebugDrawUtils.Log.Error*
  nameWithType.vb: Log.Error(String)
  fullName.vb: DebugDrawUtils.Log.Error(String)
  name.vb: Error(String)
- uid: DebugDrawUtils.Log.Error(System.Object)
  commentId: M:DebugDrawUtils.Log.Error(System.Object)
  id: Error(System.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Error(object)
  nameWithType: Log.Error(object)
  fullName: DebugDrawUtils.Log.Error(object)
  type: Method
  source:
    id: Error
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 213
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>A variant of Debug.Log that logs an error message to the console.</p>
  example: []
  syntax:
    content: public static void Error(object message)
    parameters:
    - id: message
      type: System.Object
      description: String or object to be converted to string representation for display.
    content.vb: Public Shared Sub [Error](message As Object)
  overload: DebugDrawUtils.Log.Error*
  nameWithType.vb: Log.Error(Object)
  fullName.vb: DebugDrawUtils.Log.Error(Object)
  name.vb: Error(Object)
- uid: DebugDrawUtils.Log.ErrorFormat(System.String,System.Object[])
  commentId: M:DebugDrawUtils.Log.ErrorFormat(System.String,System.Object[])
  id: ErrorFormat(System.String,System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: ErrorFormat(string, params object[])
  nameWithType: Log.ErrorFormat(string, params object[])
  fullName: DebugDrawUtils.Log.ErrorFormat(string, params object[])
  type: Method
  source:
    id: ErrorFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 223
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>&gt;Logs a formatted error message to the Unity console.</p>
  example: []
  syntax:
    content: public static void ErrorFormat(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub ErrorFormat(format As String, ParamArray args As Object())
  overload: DebugDrawUtils.Log.ErrorFormat*
  nameWithType.vb: Log.ErrorFormat(String, ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.ErrorFormat(String, ParamArray Object())
  name.vb: ErrorFormat(String, ParamArray Object())
- uid: DebugDrawUtils.Log.ErrorFormat(UnityEngine.Object,System.String,System.Object[])
  commentId: M:DebugDrawUtils.Log.ErrorFormat(UnityEngine.Object,System.String,System.Object[])
  id: ErrorFormat(UnityEngine.Object,System.String,System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: ErrorFormat(Object, string, params object[])
  nameWithType: Log.ErrorFormat(Object, string, params object[])
  fullName: DebugDrawUtils.Log.ErrorFormat(UnityEngine.Object, string, params object[])
  type: Method
  source:
    id: ErrorFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 234
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>&gt;Logs a formatted error message to the Unity console.</p>
  example: []
  syntax:
    content: public static void ErrorFormat(Object context, string format, params object[] args)
    parameters:
    - id: context
      type: UnityEngine.Object
      description: Object to which the message applies.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub ErrorFormat(context As [Object], format As String, ParamArray args As Object())
  overload: DebugDrawUtils.Log.ErrorFormat*
  nameWithType.vb: Log.ErrorFormat(Object, String, ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.ErrorFormat(UnityEngine.Object, String, ParamArray Object())
  name.vb: ErrorFormat(Object, String, ParamArray Object())
- uid: DebugDrawUtils.Log.GetString(System.Object)
  commentId: M:DebugDrawUtils.Log.GetString(System.Object)
  id: GetString(System.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(object)
  nameWithType: Log.GetString(object)
  fullName: DebugDrawUtils.Log.GetString(object)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 251
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(object message)
    parameters:
    - id: message
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Object) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Object)
  fullName.vb: DebugDrawUtils.Log.GetString(Object)
  name.vb: GetString(Object)
- uid: DebugDrawUtils.Log.GetString(System.Collections.IEnumerable)
  commentId: M:DebugDrawUtils.Log.GetString(System.Collections.IEnumerable)
  id: GetString(System.Collections.IEnumerable)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(IEnumerable)
  nameWithType: Log.GetString(IEnumerable)
  fullName: DebugDrawUtils.Log.GetString(System.Collections.IEnumerable)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 278
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(IEnumerable list)
    parameters:
    - id: list
      type: System.Collections.IEnumerable
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(list As IEnumerable) As Object
  overload: DebugDrawUtils.Log.GetString*
- uid: DebugDrawUtils.Log.GetDictString``2(System.Collections.Generic.IDictionary{``0,``1})
  commentId: M:DebugDrawUtils.Log.GetDictString``2(System.Collections.Generic.IDictionary{``0,``1})
  id: GetDictString``2(System.Collections.Generic.IDictionary{``0,``1})
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetDictString<TK, TV>(IDictionary<TK, TV>)
  nameWithType: Log.GetDictString<TK, TV>(IDictionary<TK, TV>)
  fullName: DebugDrawUtils.Log.GetDictString<TK, TV>(System.Collections.Generic.IDictionary<TK, TV>)
  type: Method
  source:
    id: GetDictString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 316
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetDictString<TK, TV>(IDictionary<TK, TV> dict)
    parameters:
    - id: dict
      type: System.Collections.Generic.IDictionary{{TK},{TV}}
    typeParameters:
    - id: TK
    - id: TV
    return:
      type: System.Object
    content.vb: Public Shared Function GetDictString(Of TK, TV)(dict As IDictionary(Of TK, TV)) As Object
  overload: DebugDrawUtils.Log.GetDictString*
  nameWithType.vb: Log.GetDictString(Of TK, TV)(IDictionary(Of TK, TV))
  fullName.vb: DebugDrawUtils.Log.GetDictString(Of TK, TV)(System.Collections.Generic.IDictionary(Of TK, TV))
  name.vb: GetDictString(Of TK, TV)(IDictionary(Of TK, TV))
- uid: DebugDrawUtils.Log.GetKeyValuePairsString(System.Object[])
  commentId: M:DebugDrawUtils.Log.GetKeyValuePairsString(System.Object[])
  id: GetKeyValuePairsString(System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetKeyValuePairsString(params object[])
  nameWithType: Log.GetKeyValuePairsString(params object[])
  fullName: DebugDrawUtils.Log.GetKeyValuePairsString(params object[])
  type: Method
  source:
    id: GetKeyValuePairsString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 356
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetKeyValuePairsString(params object[] args)
    parameters:
    - id: args
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Public Shared Function GetKeyValuePairsString(ParamArray args As Object()) As Object
  overload: DebugDrawUtils.Log.GetKeyValuePairsString*
  nameWithType.vb: Log.GetKeyValuePairsString(ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.GetKeyValuePairsString(ParamArray Object())
  name.vb: GetKeyValuePairsString(ParamArray Object())
- uid: DebugDrawUtils.Log.GetString(UnityEngine.Object)
  commentId: M:DebugDrawUtils.Log.GetString(UnityEngine.Object)
  id: GetString(UnityEngine.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(Object)
  nameWithType: Log.GetString(Object)
  fullName: DebugDrawUtils.Log.GetString(UnityEngine.Object)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 397
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(Object message)
    parameters:
    - id: message
      type: UnityEngine.Object
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As [Object]) As Object
  overload: DebugDrawUtils.Log.GetString*
- uid: DebugDrawUtils.Log.GetString(UnityEngine.Transform)
  commentId: M:DebugDrawUtils.Log.GetString(UnityEngine.Transform)
  id: GetString(UnityEngine.Transform)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(Transform)
  nameWithType: Log.GetString(Transform)
  fullName: DebugDrawUtils.Log.GetString(UnityEngine.Transform)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 398
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(Transform message)
    parameters:
    - id: message
      type: UnityEngine.Transform
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Transform) As Object
  overload: DebugDrawUtils.Log.GetString*
- uid: DebugDrawUtils.Log.GetString(System.IFormattable)
  commentId: M:DebugDrawUtils.Log.GetString(System.IFormattable)
  id: GetString(System.IFormattable)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(IFormattable)
  nameWithType: Log.GetString(IFormattable)
  fullName: DebugDrawUtils.Log.GetString(System.IFormattable)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 399
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(IFormattable message)
    parameters:
    - id: message
      type: System.IFormattable
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As IFormattable) As Object
  overload: DebugDrawUtils.Log.GetString*
- uid: DebugDrawUtils.Log.GetString(System.String)
  commentId: M:DebugDrawUtils.Log.GetString(System.String)
  id: GetString(System.String)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(string)
  nameWithType: Log.GetString(string)
  fullName: DebugDrawUtils.Log.GetString(string)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 400
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(string message)
    parameters:
    - id: message
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As String) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(String)
  fullName.vb: DebugDrawUtils.Log.GetString(String)
  name.vb: GetString(String)
- uid: DebugDrawUtils.Log.GetString(System.Boolean)
  commentId: M:DebugDrawUtils.Log.GetString(System.Boolean)
  id: GetString(System.Boolean)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(bool)
  nameWithType: Log.GetString(bool)
  fullName: DebugDrawUtils.Log.GetString(bool)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 401
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(bool message)
    parameters:
    - id: message
      type: System.Boolean
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Boolean) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Boolean)
  fullName.vb: DebugDrawUtils.Log.GetString(Boolean)
  name.vb: GetString(Boolean)
- uid: DebugDrawUtils.Log.GetString(System.Char)
  commentId: M:DebugDrawUtils.Log.GetString(System.Char)
  id: GetString(System.Char)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(char)
  nameWithType: Log.GetString(char)
  fullName: DebugDrawUtils.Log.GetString(char)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 402
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(char message)
    parameters:
    - id: message
      type: System.Char
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Char) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Char)
  fullName.vb: DebugDrawUtils.Log.GetString(Char)
  name.vb: GetString(Char)
- uid: DebugDrawUtils.Log.GetString(System.SByte)
  commentId: M:DebugDrawUtils.Log.GetString(System.SByte)
  id: GetString(System.SByte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(sbyte)
  nameWithType: Log.GetString(sbyte)
  fullName: DebugDrawUtils.Log.GetString(sbyte)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 403
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(sbyte message)
    parameters:
    - id: message
      type: System.SByte
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As SByte) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(SByte)
  fullName.vb: DebugDrawUtils.Log.GetString(SByte)
  name.vb: GetString(SByte)
- uid: DebugDrawUtils.Log.GetString(System.Int16)
  commentId: M:DebugDrawUtils.Log.GetString(System.Int16)
  id: GetString(System.Int16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(short)
  nameWithType: Log.GetString(short)
  fullName: DebugDrawUtils.Log.GetString(short)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 404
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(short message)
    parameters:
    - id: message
      type: System.Int16
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Short) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Short)
  fullName.vb: DebugDrawUtils.Log.GetString(Short)
  name.vb: GetString(Short)
- uid: DebugDrawUtils.Log.GetString(System.Int32)
  commentId: M:DebugDrawUtils.Log.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(int)
  nameWithType: Log.GetString(int)
  fullName: DebugDrawUtils.Log.GetString(int)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 405
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(int message)
    parameters:
    - id: message
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Integer) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Integer)
  fullName.vb: DebugDrawUtils.Log.GetString(Integer)
  name.vb: GetString(Integer)
- uid: DebugDrawUtils.Log.GetString(System.Int64)
  commentId: M:DebugDrawUtils.Log.GetString(System.Int64)
  id: GetString(System.Int64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(long)
  nameWithType: Log.GetString(long)
  fullName: DebugDrawUtils.Log.GetString(long)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 406
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(long message)
    parameters:
    - id: message
      type: System.Int64
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Long) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Long)
  fullName.vb: DebugDrawUtils.Log.GetString(Long)
  name.vb: GetString(Long)
- uid: DebugDrawUtils.Log.GetString(System.Byte)
  commentId: M:DebugDrawUtils.Log.GetString(System.Byte)
  id: GetString(System.Byte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(byte)
  nameWithType: Log.GetString(byte)
  fullName: DebugDrawUtils.Log.GetString(byte)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 407
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(byte message)
    parameters:
    - id: message
      type: System.Byte
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Byte) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Byte)
  fullName.vb: DebugDrawUtils.Log.GetString(Byte)
  name.vb: GetString(Byte)
- uid: DebugDrawUtils.Log.GetString(System.UInt16)
  commentId: M:DebugDrawUtils.Log.GetString(System.UInt16)
  id: GetString(System.UInt16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(ushort)
  nameWithType: Log.GetString(ushort)
  fullName: DebugDrawUtils.Log.GetString(ushort)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 408
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(ushort message)
    parameters:
    - id: message
      type: System.UInt16
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As UShort) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(UShort)
  fullName.vb: DebugDrawUtils.Log.GetString(UShort)
  name.vb: GetString(UShort)
- uid: DebugDrawUtils.Log.GetString(System.UInt32)
  commentId: M:DebugDrawUtils.Log.GetString(System.UInt32)
  id: GetString(System.UInt32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(uint)
  nameWithType: Log.GetString(uint)
  fullName: DebugDrawUtils.Log.GetString(uint)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 409
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(uint message)
    parameters:
    - id: message
      type: System.UInt32
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As UInteger) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(UInteger)
  fullName.vb: DebugDrawUtils.Log.GetString(UInteger)
  name.vb: GetString(UInteger)
- uid: DebugDrawUtils.Log.GetString(System.UInt64)
  commentId: M:DebugDrawUtils.Log.GetString(System.UInt64)
  id: GetString(System.UInt64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(ulong)
  nameWithType: Log.GetString(ulong)
  fullName: DebugDrawUtils.Log.GetString(ulong)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 410
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(ulong message)
    parameters:
    - id: message
      type: System.UInt64
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As ULong) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(ULong)
  fullName.vb: DebugDrawUtils.Log.GetString(ULong)
  name.vb: GetString(ULong)
- uid: DebugDrawUtils.Log.GetString(System.Single)
  commentId: M:DebugDrawUtils.Log.GetString(System.Single)
  id: GetString(System.Single)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(float)
  nameWithType: Log.GetString(float)
  fullName: DebugDrawUtils.Log.GetString(float)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 411
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(float message)
    parameters:
    - id: message
      type: System.Single
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Single) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Single)
  fullName.vb: DebugDrawUtils.Log.GetString(Single)
  name.vb: GetString(Single)
- uid: DebugDrawUtils.Log.GetString(System.Double)
  commentId: M:DebugDrawUtils.Log.GetString(System.Double)
  id: GetString(System.Double)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(double)
  nameWithType: Log.GetString(double)
  fullName: DebugDrawUtils.Log.GetString(double)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 412
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(double message)
    parameters:
    - id: message
      type: System.Double
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Double) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Double)
  fullName.vb: DebugDrawUtils.Log.GetString(Double)
  name.vb: GetString(Double)
- uid: DebugDrawUtils.Log.GetString(System.Decimal)
  commentId: M:DebugDrawUtils.Log.GetString(System.Decimal)
  id: GetString(System.Decimal)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(decimal)
  nameWithType: Log.GetString(decimal)
  fullName: DebugDrawUtils.Log.GetString(decimal)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 413
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(decimal message)
    parameters:
    - id: message
      type: System.Decimal
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(message As Decimal) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Decimal)
  fullName.vb: DebugDrawUtils.Log.GetString(Decimal)
  name.vb: GetString(Decimal)
- uid: DebugDrawUtils.Log.GetString(UnityEngine.Vector2@)
  commentId: M:DebugDrawUtils.Log.GetString(UnityEngine.Vector2@)
  id: GetString(UnityEngine.Vector2@)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(ref Vector2)
  nameWithType: Log.GetString(ref Vector2)
  fullName: DebugDrawUtils.Log.GetString(ref UnityEngine.Vector2)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 415
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(ref Vector2 v)
    parameters:
    - id: v
      type: UnityEngine.Vector2
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(v As Vector2) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Vector2)
  fullName.vb: DebugDrawUtils.Log.GetString(UnityEngine.Vector2)
  name.vb: GetString(Vector2)
- uid: DebugDrawUtils.Log.GetString(UnityEngine.Vector3@)
  commentId: M:DebugDrawUtils.Log.GetString(UnityEngine.Vector3@)
  id: GetString(UnityEngine.Vector3@)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(ref Vector3)
  nameWithType: Log.GetString(ref Vector3)
  fullName: DebugDrawUtils.Log.GetString(ref UnityEngine.Vector3)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 420
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(ref Vector3 v)
    parameters:
    - id: v
      type: UnityEngine.Vector3
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(v As Vector3) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Vector3)
  fullName.vb: DebugDrawUtils.Log.GetString(UnityEngine.Vector3)
  name.vb: GetString(Vector3)
- uid: DebugDrawUtils.Log.GetString(UnityEngine.Vector4@)
  commentId: M:DebugDrawUtils.Log.GetString(UnityEngine.Vector4@)
  id: GetString(UnityEngine.Vector4@)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetString(ref Vector4)
  nameWithType: Log.GetString(ref Vector4)
  fullName: DebugDrawUtils.Log.GetString(ref UnityEngine.Vector4)
  type: Method
  source:
    id: GetString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 426
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetString(ref Vector4 v)
    parameters:
    - id: v
      type: UnityEngine.Vector4
    return:
      type: System.Object
    content.vb: Public Shared Function GetString(v As Vector4) As Object
  overload: DebugDrawUtils.Log.GetString*
  nameWithType.vb: Log.GetString(Vector4)
  fullName.vb: DebugDrawUtils.Log.GetString(UnityEngine.Vector4)
  name.vb: GetString(Vector4)
- uid: DebugDrawUtils.Log.GetArgString(System.Object[])
  commentId: M:DebugDrawUtils.Log.GetArgString(System.Object[])
  id: GetArgString(System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: GetArgString(object[])
  nameWithType: Log.GetArgString(object[])
  fullName: DebugDrawUtils.Log.GetArgString(object[])
  type: Method
  source:
    id: GetArgString
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 432
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static object GetArgString(object[] args)
    parameters:
    - id: args
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Public Shared Function GetArgString(args As Object()) As Object
  overload: DebugDrawUtils.Log.GetArgString*
  nameWithType.vb: Log.GetArgString(Object())
  fullName.vb: DebugDrawUtils.Log.GetArgString(Object())
  name.vb: GetArgString(Object())
- uid: DebugDrawUtils.Log.Print(UnityEngine.Object)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Object)
  id: Print(UnityEngine.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Object)
  nameWithType: Log.Print(Object)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Object)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 459
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs an Object to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Object val)
    parameters:
    - id: val
      type: UnityEngine.Object
      description: Object for display.
    content.vb: Public Shared Sub Print(val As [Object])
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(UnityEngine.Transform)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Transform)
  id: Print(UnityEngine.Transform)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Transform)
  nameWithType: Log.Print(Transform)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Transform)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 468
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a Transform to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Transform val)
    parameters:
    - id: val
      type: UnityEngine.Transform
      description: Transform for display.
    content.vb: Public Shared Sub Print(val As Transform)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(System.Boolean)
  commentId: M:DebugDrawUtils.Log.Print(System.Boolean)
  id: Print(System.Boolean)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(bool)
  nameWithType: Log.Print(bool)
  fullName: DebugDrawUtils.Log.Print(bool)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 477
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a bool to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(bool val)
    parameters:
    - id: val
      type: System.Boolean
      description: bool for display.
    content.vb: Public Shared Sub Print(val As Boolean)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Boolean)
  fullName.vb: DebugDrawUtils.Log.Print(Boolean)
  name.vb: Print(Boolean)
- uid: DebugDrawUtils.Log.Print(System.Char)
  commentId: M:DebugDrawUtils.Log.Print(System.Char)
  id: Print(System.Char)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(char)
  nameWithType: Log.Print(char)
  fullName: DebugDrawUtils.Log.Print(char)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 486
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a char to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(char val)
    parameters:
    - id: val
      type: System.Char
      description: char for display.
    content.vb: Public Shared Sub Print(val As Char)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Char)
  fullName.vb: DebugDrawUtils.Log.Print(Char)
  name.vb: Print(Char)
- uid: DebugDrawUtils.Log.Print(System.SByte)
  commentId: M:DebugDrawUtils.Log.Print(System.SByte)
  id: Print(System.SByte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(sbyte)
  nameWithType: Log.Print(sbyte)
  fullName: DebugDrawUtils.Log.Print(sbyte)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 495
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a sbyte to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(sbyte val)
    parameters:
    - id: val
      type: System.SByte
      description: sbyte for display.
    content.vb: Public Shared Sub Print(val As SByte)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(SByte)
  fullName.vb: DebugDrawUtils.Log.Print(SByte)
  name.vb: Print(SByte)
- uid: DebugDrawUtils.Log.Print(System.Int16)
  commentId: M:DebugDrawUtils.Log.Print(System.Int16)
  id: Print(System.Int16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(short)
  nameWithType: Log.Print(short)
  fullName: DebugDrawUtils.Log.Print(short)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 504
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a short to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(short val)
    parameters:
    - id: val
      type: System.Int16
      description: short for display.
    content.vb: Public Shared Sub Print(val As Short)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Short)
  fullName.vb: DebugDrawUtils.Log.Print(Short)
  name.vb: Print(Short)
- uid: DebugDrawUtils.Log.Print(System.Int32)
  commentId: M:DebugDrawUtils.Log.Print(System.Int32)
  id: Print(System.Int32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(int)
  nameWithType: Log.Print(int)
  fullName: DebugDrawUtils.Log.Print(int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 513
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs an int to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(int val)
    parameters:
    - id: val
      type: System.Int32
      description: int for display.
    content.vb: Public Shared Sub Print(val As Integer)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Integer)
  fullName.vb: DebugDrawUtils.Log.Print(Integer)
  name.vb: Print(Integer)
- uid: DebugDrawUtils.Log.Print(System.Int64)
  commentId: M:DebugDrawUtils.Log.Print(System.Int64)
  id: Print(System.Int64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(long)
  nameWithType: Log.Print(long)
  fullName: DebugDrawUtils.Log.Print(long)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 522
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a long to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(long val)
    parameters:
    - id: val
      type: System.Int64
      description: long for display.
    content.vb: Public Shared Sub Print(val As Long)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Long)
  fullName.vb: DebugDrawUtils.Log.Print(Long)
  name.vb: Print(Long)
- uid: DebugDrawUtils.Log.Print(System.Byte)
  commentId: M:DebugDrawUtils.Log.Print(System.Byte)
  id: Print(System.Byte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(byte)
  nameWithType: Log.Print(byte)
  fullName: DebugDrawUtils.Log.Print(byte)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 531
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a byte to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(byte val)
    parameters:
    - id: val
      type: System.Byte
      description: byte for display.
    content.vb: Public Shared Sub Print(val As Byte)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Byte)
  fullName.vb: DebugDrawUtils.Log.Print(Byte)
  name.vb: Print(Byte)
- uid: DebugDrawUtils.Log.Print(System.UInt16)
  commentId: M:DebugDrawUtils.Log.Print(System.UInt16)
  id: Print(System.UInt16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(ushort)
  nameWithType: Log.Print(ushort)
  fullName: DebugDrawUtils.Log.Print(ushort)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 540
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a ushort to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(ushort val)
    parameters:
    - id: val
      type: System.UInt16
      description: ushort for display.
    content.vb: Public Shared Sub Print(val As UShort)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(UShort)
  fullName.vb: DebugDrawUtils.Log.Print(UShort)
  name.vb: Print(UShort)
- uid: DebugDrawUtils.Log.Print(System.UInt32)
  commentId: M:DebugDrawUtils.Log.Print(System.UInt32)
  id: Print(System.UInt32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(uint)
  nameWithType: Log.Print(uint)
  fullName: DebugDrawUtils.Log.Print(uint)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 549
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a uint to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(uint val)
    parameters:
    - id: val
      type: System.UInt32
      description: uint for display.
    content.vb: Public Shared Sub Print(val As UInteger)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(UInteger)
  fullName.vb: DebugDrawUtils.Log.Print(UInteger)
  name.vb: Print(UInteger)
- uid: DebugDrawUtils.Log.Print(System.UInt64)
  commentId: M:DebugDrawUtils.Log.Print(System.UInt64)
  id: Print(System.UInt64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(ulong)
  nameWithType: Log.Print(ulong)
  fullName: DebugDrawUtils.Log.Print(ulong)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 558
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a ulong to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(ulong val)
    parameters:
    - id: val
      type: System.UInt64
      description: ulong for display.
    content.vb: Public Shared Sub Print(val As ULong)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(ULong)
  fullName.vb: DebugDrawUtils.Log.Print(ULong)
  name.vb: Print(ULong)
- uid: DebugDrawUtils.Log.Print(System.Single)
  commentId: M:DebugDrawUtils.Log.Print(System.Single)
  id: Print(System.Single)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(float)
  nameWithType: Log.Print(float)
  fullName: DebugDrawUtils.Log.Print(float)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 567
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a float to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(float val)
    parameters:
    - id: val
      type: System.Single
      description: float for display.
    content.vb: Public Shared Sub Print(val As Single)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Single)
  fullName.vb: DebugDrawUtils.Log.Print(Single)
  name.vb: Print(Single)
- uid: DebugDrawUtils.Log.Print(System.Double)
  commentId: M:DebugDrawUtils.Log.Print(System.Double)
  id: Print(System.Double)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(double)
  nameWithType: Log.Print(double)
  fullName: DebugDrawUtils.Log.Print(double)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 576
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a double to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(double val)
    parameters:
    - id: val
      type: System.Double
      description: double for display.
    content.vb: Public Shared Sub Print(val As Double)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Double)
  fullName.vb: DebugDrawUtils.Log.Print(Double)
  name.vb: Print(Double)
- uid: DebugDrawUtils.Log.Print(System.Decimal)
  commentId: M:DebugDrawUtils.Log.Print(System.Decimal)
  id: Print(System.Decimal)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(decimal)
  nameWithType: Log.Print(decimal)
  fullName: DebugDrawUtils.Log.Print(decimal)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 585
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a decimal to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(decimal val)
    parameters:
    - id: val
      type: System.Decimal
      description: decimal for display.
    content.vb: Public Shared Sub Print(val As Decimal)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Decimal)
  fullName.vb: DebugDrawUtils.Log.Print(Decimal)
  name.vb: Print(Decimal)
- uid: DebugDrawUtils.Log.Print(UnityEngine.Vector2)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Vector2)
  id: Print(UnityEngine.Vector2)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Vector2)
  nameWithType: Log.Print(Vector2)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Vector2)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 594
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a Vector2 to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Vector2 val)
    parameters:
    - id: val
      type: UnityEngine.Vector2
      description: Vector2 for display.
    content.vb: Public Shared Sub Print(val As Vector2)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(UnityEngine.Vector3)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Vector3)
  id: Print(UnityEngine.Vector3)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Vector3)
  nameWithType: Log.Print(Vector3)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Vector3)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 603
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a Vector3 to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Vector3 val)
    parameters:
    - id: val
      type: UnityEngine.Vector3
      description: Vector3 for display.
    content.vb: Public Shared Sub Print(val As Vector3)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(UnityEngine.Vector4)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Vector4)
  id: Print(UnityEngine.Vector4)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Vector4)
  nameWithType: Log.Print(Vector4)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Vector4)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 612
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a Vector4 to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Vector4 val)
    parameters:
    - id: val
      type: UnityEngine.Vector4
      description: Vector4 for display.
    content.vb: Public Shared Sub Print(val As Vector4)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(UnityEngine.Vector2Int)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Vector2Int)
  id: Print(UnityEngine.Vector2Int)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Vector2Int)
  nameWithType: Log.Print(Vector2Int)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Vector2Int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 621
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a Vector2Int to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Vector2Int val)
    parameters:
    - id: val
      type: UnityEngine.Vector2Int
      description: Vector2Int for display.
    content.vb: Public Shared Sub Print(val As Vector2Int)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(UnityEngine.Vector3Int)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Vector3Int)
  id: Print(UnityEngine.Vector3Int)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Vector3Int)
  nameWithType: Log.Print(Vector3Int)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Vector3Int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 630
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a Vector3Int to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Vector3Int val)
    parameters:
    - id: val
      type: UnityEngine.Vector3Int
      description: Vector3Int for display.
    content.vb: Public Shared Sub Print(val As Vector3Int)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(UnityEngine.Matrix4x4)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Matrix4x4)
  id: Print(UnityEngine.Matrix4x4)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Matrix4x4)
  nameWithType: Log.Print(Matrix4x4)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Matrix4x4)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 639
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a Matrix4x4 to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Matrix4x4 val)
    parameters:
    - id: val
      type: UnityEngine.Matrix4x4
      description: Matrix4x4 for display.
    content.vb: Public Shared Sub Print(val As Matrix4x4)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(UnityEngine.Quaternion)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Quaternion)
  id: Print(UnityEngine.Quaternion)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Quaternion)
  nameWithType: Log.Print(Quaternion)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Quaternion)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 648
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a Quaternion to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Quaternion val)
    parameters:
    - id: val
      type: UnityEngine.Quaternion
      description: Quaternion for display.
    content.vb: Public Shared Sub Print(val As Quaternion)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(UnityEngine.Rect)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Rect)
  id: Print(UnityEngine.Rect)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Rect)
  nameWithType: Log.Print(Rect)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Rect)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 657
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a Rect to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Rect val)
    parameters:
    - id: val
      type: UnityEngine.Rect
      description: Rect for display.
    content.vb: Public Shared Sub Print(val As Rect)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print(UnityEngine.RectInt)
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.RectInt)
  id: Print(UnityEngine.RectInt)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(RectInt)
  nameWithType: Log.Print(RectInt)
  fullName: DebugDrawUtils.Log.Print(UnityEngine.RectInt)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 666
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a RectInt to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(RectInt val)
    parameters:
    - id: val
      type: UnityEngine.RectInt
      description: RectInt for display.
    content.vb: Public Shared Sub Print(val As RectInt)
  overload: DebugDrawUtils.Log.Print*
- uid: DebugDrawUtils.Log.Print``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:DebugDrawUtils.Log.Print``1(System.Collections.Generic.IEnumerable{``0})
  id: Print``1(System.Collections.Generic.IEnumerable{``0})
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print<T>(IEnumerable<T>)
  nameWithType: Log.Print<T>(IEnumerable<T>)
  fullName: DebugDrawUtils.Log.Print<T>(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 675
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a list the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print<T>(IEnumerable<T> list)
    parameters:
    - id: list
      type: System.Collections.Generic.IEnumerable{{T}}
      description: List for display.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Print(Of T)(list As IEnumerable(Of T))
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Of T)(IEnumerable(Of T))
  fullName.vb: DebugDrawUtils.Log.Print(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Print(Of T)(IEnumerable(Of T))
- uid: DebugDrawUtils.Log.Print``2(System.Collections.Generic.IDictionary{``0,``1})
  commentId: M:DebugDrawUtils.Log.Print``2(System.Collections.Generic.IDictionary{``0,``1})
  id: Print``2(System.Collections.Generic.IDictionary{``0,``1})
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print<TK, TV>(IDictionary<TK, TV>)
  nameWithType: Log.Print<TK, TV>(IDictionary<TK, TV>)
  fullName: DebugDrawUtils.Log.Print<TK, TV>(System.Collections.Generic.IDictionary<TK, TV>)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 684
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a dictionary to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print<TK, TV>(IDictionary<TK, TV> dict)
    parameters:
    - id: dict
      type: System.Collections.Generic.IDictionary{{TK},{TV}}
      description: Dictionary for display.
    typeParameters:
    - id: TK
    - id: TV
    content.vb: Public Shared Sub Print(Of TK, TV)(dict As IDictionary(Of TK, TV))
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Of TK, TV)(IDictionary(Of TK, TV))
  fullName.vb: DebugDrawUtils.Log.Print(Of TK, TV)(System.Collections.Generic.IDictionary(Of TK, TV))
  name.vb: Print(Of TK, TV)(IDictionary(Of TK, TV))
- uid: DebugDrawUtils.Log.PrintKeyValue(System.Object[])
  commentId: M:DebugDrawUtils.Log.PrintKeyValue(System.Object[])
  id: PrintKeyValue(System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: PrintKeyValue(params object[])
  nameWithType: Log.PrintKeyValue(params object[])
  fullName: DebugDrawUtils.Log.PrintKeyValue(params object[])
  type: Method
  source:
    id: PrintKeyValue
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 693
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs pairs of KEY:VALUE to the Unity Console.</p>
  example: []
  syntax:
    content: public static void PrintKeyValue(params object[] args)
    parameters:
    - id: args
      type: System.Object[]
      description: Pairs of Key, Values to log.
    content.vb: Public Shared Sub PrintKeyValue(ParamArray args As Object())
  overload: DebugDrawUtils.Log.PrintKeyValue*
  nameWithType.vb: Log.PrintKeyValue(ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.PrintKeyValue(ParamArray Object())
  name.vb: PrintKeyValue(ParamArray Object())
- uid: DebugDrawUtils.Log.Print(System.Object[])
  commentId: M:DebugDrawUtils.Log.Print(System.Object[])
  id: Print(System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(params object[])
  nameWithType: Log.Print(params object[])
  fullName: DebugDrawUtils.Log.Print(params object[])
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 702
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a list of items to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(params object[] args)
    parameters:
    - id: args
      type: System.Object[]
      description: Items for display.
    content.vb: Public Shared Sub Print(ParamArray args As Object())
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.Print(ParamArray Object())
  name.vb: Print(ParamArray Object())
- uid: DebugDrawUtils.Log.Print(UnityEngine.Object[])
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.Object[])
  id: Print(UnityEngine.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(Object[])
  nameWithType: Log.Print(Object[])
  fullName: DebugDrawUtils.Log.Print(UnityEngine.Object[])
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 711
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a list of Objects to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(Object[] args)
    parameters:
    - id: args
      type: UnityEngine.Object[]
      description: Items for display.
    content.vb: Public Shared Sub Print(args As [Object]())
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(Object())
  fullName.vb: DebugDrawUtils.Log.Print(UnityEngine.Object())
  name.vb: Print(Object())
- uid: DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  id: Print(UnityEngine.GameObject[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(GameObject[])
  nameWithType: Log.Print(GameObject[])
  fullName: DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 720
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a list of GameObject to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(GameObject[] args)
    parameters:
    - id: args
      type: UnityEngine.GameObject[]
      description: Items for display.
    content.vb: Public Shared Sub Print(args As GameObject())
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(GameObject())
  fullName.vb: DebugDrawUtils.Log.Print(UnityEngine.GameObject())
  name.vb: Print(GameObject())
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.Object)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.Object)
  id: Print(System.String,UnityEngine.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, Object)
  nameWithType: Log.Print(string, Object)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.Object)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 733
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and bool to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, Object val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Object
      description: bool for display.
    content.vb: Public Shared Sub Print(message As String, val As [Object])
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Object)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.Object)
  name.vb: Print(String, Object)
- uid: DebugDrawUtils.Log.Print(System.String,System.Boolean)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.Boolean)
  id: Print(System.String,System.Boolean)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, bool)
  nameWithType: Log.Print(string, bool)
  fullName: DebugDrawUtils.Log.Print(string, bool)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 743
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and bool to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, bool val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Boolean
      description: bool for display.
    content.vb: Public Shared Sub Print(message As String, val As Boolean)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Boolean)
  fullName.vb: DebugDrawUtils.Log.Print(String, Boolean)
  name.vb: Print(String, Boolean)
- uid: DebugDrawUtils.Log.Print(System.String,System.String)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.String)
  id: Print(System.String,System.String)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, string)
  nameWithType: Log.Print(string, string)
  fullName: DebugDrawUtils.Log.Print(string, string)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 753
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and string to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, string val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.String
      description: bool for display.
    content.vb: Public Shared Sub Print(message As String, val As String)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, String)
  fullName.vb: DebugDrawUtils.Log.Print(String, String)
  name.vb: Print(String, String)
- uid: DebugDrawUtils.Log.Print(System.String,System.Char)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.Char)
  id: Print(System.String,System.Char)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, char)
  nameWithType: Log.Print(string, char)
  fullName: DebugDrawUtils.Log.Print(string, char)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 763
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and char to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, char val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Char
      description: char for display.
    content.vb: Public Shared Sub Print(message As String, val As Char)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Char)
  fullName.vb: DebugDrawUtils.Log.Print(String, Char)
  name.vb: Print(String, Char)
- uid: DebugDrawUtils.Log.Print(System.String,System.SByte)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.SByte)
  id: Print(System.String,System.SByte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, sbyte)
  nameWithType: Log.Print(string, sbyte)
  fullName: DebugDrawUtils.Log.Print(string, sbyte)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 773
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and sbyte to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, sbyte val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.SByte
      description: sbyte for display.
    content.vb: Public Shared Sub Print(message As String, val As SByte)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, SByte)
  fullName.vb: DebugDrawUtils.Log.Print(String, SByte)
  name.vb: Print(String, SByte)
- uid: DebugDrawUtils.Log.Print(System.String,System.Int16)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.Int16)
  id: Print(System.String,System.Int16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, short)
  nameWithType: Log.Print(string, short)
  fullName: DebugDrawUtils.Log.Print(string, short)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 783
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and short to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, short val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int16
      description: short for display.
    content.vb: Public Shared Sub Print(message As String, val As Short)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Short)
  fullName.vb: DebugDrawUtils.Log.Print(String, Short)
  name.vb: Print(String, Short)
- uid: DebugDrawUtils.Log.Print(System.String,System.Int32)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.Int32)
  id: Print(System.String,System.Int32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, int)
  nameWithType: Log.Print(string, int)
  fullName: DebugDrawUtils.Log.Print(string, int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 793
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and int to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, int val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int32
      description: int for display.
    content.vb: Public Shared Sub Print(message As String, val As Integer)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Integer)
  fullName.vb: DebugDrawUtils.Log.Print(String, Integer)
  name.vb: Print(String, Integer)
- uid: DebugDrawUtils.Log.Print(System.String,System.Int64)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.Int64)
  id: Print(System.String,System.Int64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, long)
  nameWithType: Log.Print(string, long)
  fullName: DebugDrawUtils.Log.Print(string, long)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 803
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and long to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, long val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int64
      description: long for display.
    content.vb: Public Shared Sub Print(message As String, val As Long)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Long)
  fullName.vb: DebugDrawUtils.Log.Print(String, Long)
  name.vb: Print(String, Long)
- uid: DebugDrawUtils.Log.Print(System.String,System.Byte)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.Byte)
  id: Print(System.String,System.Byte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, byte)
  nameWithType: Log.Print(string, byte)
  fullName: DebugDrawUtils.Log.Print(string, byte)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 813
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and byte to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, byte val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Byte
      description: byte for display.
    content.vb: Public Shared Sub Print(message As String, val As Byte)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Byte)
  fullName.vb: DebugDrawUtils.Log.Print(String, Byte)
  name.vb: Print(String, Byte)
- uid: DebugDrawUtils.Log.Print(System.String,System.UInt16)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.UInt16)
  id: Print(System.String,System.UInt16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, ushort)
  nameWithType: Log.Print(string, ushort)
  fullName: DebugDrawUtils.Log.Print(string, ushort)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 823
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and ushort to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, ushort val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt16
      description: ushort for display.
    content.vb: Public Shared Sub Print(message As String, val As UShort)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, UShort)
  fullName.vb: DebugDrawUtils.Log.Print(String, UShort)
  name.vb: Print(String, UShort)
- uid: DebugDrawUtils.Log.Print(System.String,System.UInt32)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.UInt32)
  id: Print(System.String,System.UInt32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, uint)
  nameWithType: Log.Print(string, uint)
  fullName: DebugDrawUtils.Log.Print(string, uint)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 833
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and uint to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, uint val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt32
      description: uint for display.
    content.vb: Public Shared Sub Print(message As String, val As UInteger)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, UInteger)
  fullName.vb: DebugDrawUtils.Log.Print(String, UInteger)
  name.vb: Print(String, UInteger)
- uid: DebugDrawUtils.Log.Print(System.String,System.UInt64)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.UInt64)
  id: Print(System.String,System.UInt64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, ulong)
  nameWithType: Log.Print(string, ulong)
  fullName: DebugDrawUtils.Log.Print(string, ulong)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 843
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and ulong to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, ulong val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt64
      description: ulong for display.
    content.vb: Public Shared Sub Print(message As String, val As ULong)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, ULong)
  fullName.vb: DebugDrawUtils.Log.Print(String, ULong)
  name.vb: Print(String, ULong)
- uid: DebugDrawUtils.Log.Print(System.String,System.Single)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.Single)
  id: Print(System.String,System.Single)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, float)
  nameWithType: Log.Print(string, float)
  fullName: DebugDrawUtils.Log.Print(string, float)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 853
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and float to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, float val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Single
      description: float for display.
    content.vb: Public Shared Sub Print(message As String, val As Single)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Single)
  fullName.vb: DebugDrawUtils.Log.Print(String, Single)
  name.vb: Print(String, Single)
- uid: DebugDrawUtils.Log.Print(System.String,System.Double)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.Double)
  id: Print(System.String,System.Double)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, double)
  nameWithType: Log.Print(string, double)
  fullName: DebugDrawUtils.Log.Print(string, double)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 863
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and double to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, double val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Double
      description: double for display.
    content.vb: Public Shared Sub Print(message As String, val As Double)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Double)
  fullName.vb: DebugDrawUtils.Log.Print(String, Double)
  name.vb: Print(String, Double)
- uid: DebugDrawUtils.Log.Print(System.String,System.Decimal)
  commentId: M:DebugDrawUtils.Log.Print(System.String,System.Decimal)
  id: Print(System.String,System.Decimal)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, decimal)
  nameWithType: Log.Print(string, decimal)
  fullName: DebugDrawUtils.Log.Print(string, decimal)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 873
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and decimal to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, decimal val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Decimal
      description: decimal for display.
    content.vb: Public Shared Sub Print(message As String, val As Decimal)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Decimal)
  fullName.vb: DebugDrawUtils.Log.Print(String, Decimal)
  name.vb: Print(String, Decimal)
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector2)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector2)
  id: Print(System.String,UnityEngine.Vector2)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, Vector2)
  nameWithType: Log.Print(string, Vector2)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.Vector2)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 883
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and Vector2 to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, Vector2 val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector2
      description: Vector2 for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector2)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Vector2)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.Vector2)
  name.vb: Print(String, Vector2)
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector3)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector3)
  id: Print(System.String,UnityEngine.Vector3)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, Vector3)
  nameWithType: Log.Print(string, Vector3)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.Vector3)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 893
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and Vector3 to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, Vector3 val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector3
      description: Vector3 for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector3)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Vector3)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.Vector3)
  name.vb: Print(String, Vector3)
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector4)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector4)
  id: Print(System.String,UnityEngine.Vector4)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, Vector4)
  nameWithType: Log.Print(string, Vector4)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.Vector4)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 903
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and Vector4 to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, Vector4 val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector4
      description: Vector4 for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector4)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Vector4)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.Vector4)
  name.vb: Print(String, Vector4)
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector2Int)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector2Int)
  id: Print(System.String,UnityEngine.Vector2Int)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, Vector2Int)
  nameWithType: Log.Print(string, Vector2Int)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.Vector2Int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 913
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and Vector2Int to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, Vector2Int val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector2Int
      description: Vector2Int for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector2Int)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Vector2Int)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.Vector2Int)
  name.vb: Print(String, Vector2Int)
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector3Int)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.Vector3Int)
  id: Print(System.String,UnityEngine.Vector3Int)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, Vector3Int)
  nameWithType: Log.Print(string, Vector3Int)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.Vector3Int)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 923
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and Vector3Int to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, Vector3Int val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector3Int
      description: Vector3Int for display.
    content.vb: Public Shared Sub Print(message As String, val As Vector3Int)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Vector3Int)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.Vector3Int)
  name.vb: Print(String, Vector3Int)
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.Matrix4x4)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.Matrix4x4)
  id: Print(System.String,UnityEngine.Matrix4x4)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, Matrix4x4)
  nameWithType: Log.Print(string, Matrix4x4)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.Matrix4x4)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 933
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and Matrix4x4 to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, Matrix4x4 val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Matrix4x4
      description: Matrix4x4 for display.
    content.vb: Public Shared Sub Print(message As String, val As Matrix4x4)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Matrix4x4)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.Matrix4x4)
  name.vb: Print(String, Matrix4x4)
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.Quaternion)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.Quaternion)
  id: Print(System.String,UnityEngine.Quaternion)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, Quaternion)
  nameWithType: Log.Print(string, Quaternion)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.Quaternion)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 943
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and Quaternion to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, Quaternion val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Quaternion
      description: Quaternion for display.
    content.vb: Public Shared Sub Print(message As String, val As Quaternion)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Quaternion)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.Quaternion)
  name.vb: Print(String, Quaternion)
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.Rect)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.Rect)
  id: Print(System.String,UnityEngine.Rect)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, Rect)
  nameWithType: Log.Print(string, Rect)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.Rect)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 953
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and Rect to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, Rect val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Rect
      description: Rect for display.
    content.vb: Public Shared Sub Print(message As String, val As Rect)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, Rect)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.Rect)
  name.vb: Print(String, Rect)
- uid: DebugDrawUtils.Log.Print(System.String,UnityEngine.RectInt)
  commentId: M:DebugDrawUtils.Log.Print(System.String,UnityEngine.RectInt)
  id: Print(System.String,UnityEngine.RectInt)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Print(string, RectInt)
  nameWithType: Log.Print(string, RectInt)
  fullName: DebugDrawUtils.Log.Print(string, UnityEngine.RectInt)
  type: Method
  source:
    id: Print
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 963
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a message and RectInt to the Unity Console.</p>
  example: []
  syntax:
    content: public static void Print(string message, RectInt val)
    parameters:
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.RectInt
      description: RectInt for display.
    content.vb: Public Shared Sub Print(message As String, val As RectInt)
  overload: DebugDrawUtils.Log.Print*
  nameWithType.vb: Log.Print(String, RectInt)
  fullName.vb: DebugDrawUtils.Log.Print(String, UnityEngine.RectInt)
  name.vb: Print(String, RectInt)
- uid: DebugDrawUtils.Log.Time(System.String)
  commentId: M:DebugDrawUtils.Log.Time(System.String)
  id: Time(System.String)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Time(string)
  nameWithType: Log.Time(string)
  fullName: DebugDrawUtils.Log.Time(string)
  type: Method
  source:
    id: Time
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 987
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: >-
    <p>
    	Basic method to measure the execution time of code.
    	Make sure to call <xref href="DebugDrawUtils.Log.TimeEnd" data-throw-if-not-resolved="false"></xref> or <xref href="DebugDrawUtils.Log.TimeStop" data-throw-if-not-resolved="false"></xref> for each call to <xref href="DebugDrawUtils.Log.Time(System.String)" data-throw-if-not-resolved="false"></xref>
    </p>
  example: []
  syntax:
    content: public static void Time(string message = "")
    parameters:
    - id: message
      type: System.String
      description: An optional message. to display before the measured time.
    content.vb: Public Shared Sub Time(message As String = "")
  overload: DebugDrawUtils.Log.Time*
  nameWithType.vb: Log.Time(String)
  fullName.vb: DebugDrawUtils.Log.Time(String)
  name.vb: Time(String)
- uid: DebugDrawUtils.Log.TimeEnd
  commentId: M:DebugDrawUtils.Log.TimeEnd
  id: TimeEnd
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: TimeEnd()
  nameWithType: Log.TimeEnd()
  fullName: DebugDrawUtils.Log.TimeEnd()
  type: Method
  source:
    id: TimeEnd
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 1002
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Stops the timer and prints the optional message set with <xref href="DebugDrawUtils.Log.Time(System.String)" data-throw-if-not-resolved="false"></xref> and elapsed milliseconds.</p>
  example: []
  syntax:
    content: public static void TimeEnd()
    content.vb: Public Shared Sub TimeEnd()
  overload: DebugDrawUtils.Log.TimeEnd*
- uid: DebugDrawUtils.Log.TimeStop
  commentId: M:DebugDrawUtils.Log.TimeStop
  id: TimeStop
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: TimeStop()
  nameWithType: Log.TimeStop()
  fullName: DebugDrawUtils.Log.TimeStop()
  type: Method
  source:
    id: TimeStop
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 1019
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Stops a timer without printing the message and time.</p>
  example: []
  syntax:
    content: public static double TimeStop()
    return:
      type: System.Double
      description: The elapsed milliseconds.
    content.vb: Public Shared Function TimeStop() As Double
  overload: DebugDrawUtils.Log.TimeStop*
- uid: DebugDrawUtils.Log.Clear
  commentId: M:DebugDrawUtils.Log.Clear
  id: Clear
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: Log.Clear()
  fullName: DebugDrawUtils.Log.Clear()
  type: Method
  source:
    id: Clear
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\Log.cs
    startLine: 1035
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  syntax:
    content: public static void Clear()
    content.vb: Public Shared Sub Clear()
  overload: DebugDrawUtils.Log.Clear*
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String)
  id: Show(System.Int32,System.Single,System.String)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string)
  nameWithType: Log.Show(int, float, string)
  fullName: DebugDrawUtils.Log.Show(int, float, string)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 24
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: String for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String)
  name.vb: Show(Integer, Single, String)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Object)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Object)
  id: Show(System.Int32,System.Single,System.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, object)
  nameWithType: Log.Show(int, float, object)
  fullName: DebugDrawUtils.Log.Show(int, float, object)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 41
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, object message)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.Object
      description: String or object to be converted to string representation for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As Object)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Object)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Object)
  name.vb: Show(Integer, Single, Object)
- uid: DebugDrawUtils.Log.ShowFormat(System.Int32,System.Single,System.String,System.Object[])
  commentId: M:DebugDrawUtils.Log.ShowFormat(System.Int32,System.Single,System.String,System.Object[])
  id: ShowFormat(System.Int32,System.Single,System.String,System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: ShowFormat(int, float, string, params object[])
  nameWithType: Log.ShowFormat(int, float, string, params object[])
  fullName: DebugDrawUtils.Log.ShowFormat(int, float, string, params object[])
  type: Method
  source:
    id: ShowFormat
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 59
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a formatted message on the screen.</p>
  example: []
  syntax:
    content: public static void ShowFormat(int id, float duration, string format, params object[] args)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: format
      type: System.String
      description: A composite format string.
    - id: args
      type: System.Object[]
      description: Format arguments.
    content.vb: Public Shared Sub ShowFormat(id As Integer, duration As Single, format As String, ParamArray args As Object())
  overload: DebugDrawUtils.Log.ShowFormat*
  nameWithType.vb: Log.ShowFormat(Integer, Single, String, ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.ShowFormat(Integer, Single, String, ParamArray Object())
  name.vb: ShowFormat(Integer, Single, String, ParamArray Object())
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Object)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Object)
  id: Show(System.Int32,System.Single,UnityEngine.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Object)
  nameWithType: Log.Show(int, float, Object)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Object)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 76
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints an Object on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Object val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Object
      description: Object for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As [Object])
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Object)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Object)
  name.vb: Show(Integer, Single, Object)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Transform)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Transform)
  id: Show(System.Int32,System.Single,UnityEngine.Transform)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Transform)
  nameWithType: Log.Show(int, float, Transform)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Transform)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 93
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a Transform on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Transform val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Transform
      description: Transform for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Transform)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Transform)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Transform)
  name.vb: Show(Integer, Single, Transform)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Boolean)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Boolean)
  id: Show(System.Int32,System.Single,System.Boolean)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, bool)
  nameWithType: Log.Show(int, float, bool)
  fullName: DebugDrawUtils.Log.Show(int, float, bool)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 110
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a bool on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, bool val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Boolean
      description: bool for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Boolean)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Boolean)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Boolean)
  name.vb: Show(Integer, Single, Boolean)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Char)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Char)
  id: Show(System.Int32,System.Single,System.Char)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, char)
  nameWithType: Log.Show(int, float, char)
  fullName: DebugDrawUtils.Log.Show(int, float, char)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 127
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a char on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, char val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Char
      description: char for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Char)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Char)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Char)
  name.vb: Show(Integer, Single, Char)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.SByte)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.SByte)
  id: Show(System.Int32,System.Single,System.SByte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, sbyte)
  nameWithType: Log.Show(int, float, sbyte)
  fullName: DebugDrawUtils.Log.Show(int, float, sbyte)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 144
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a sbyte on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, sbyte val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.SByte
      description: sbyte for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As SByte)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, SByte)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, SByte)
  name.vb: Show(Integer, Single, SByte)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Int16)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Int16)
  id: Show(System.Int32,System.Single,System.Int16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, short)
  nameWithType: Log.Show(int, float, short)
  fullName: DebugDrawUtils.Log.Show(int, float, short)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 161
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a short on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, short val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Int16
      description: short for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Short)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Short)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Short)
  name.vb: Show(Integer, Single, Short)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Int32)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Int32)
  id: Show(System.Int32,System.Single,System.Int32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, int)
  nameWithType: Log.Show(int, float, int)
  fullName: DebugDrawUtils.Log.Show(int, float, int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 178
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints an int on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Int32
      description: int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Integer)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Integer)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Integer)
  name.vb: Show(Integer, Single, Integer)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Int64)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Int64)
  id: Show(System.Int32,System.Single,System.Int64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, long)
  nameWithType: Log.Show(int, float, long)
  fullName: DebugDrawUtils.Log.Show(int, float, long)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 195
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a long on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, long val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Int64
      description: long for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Long)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Long)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Long)
  name.vb: Show(Integer, Single, Long)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Byte)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Byte)
  id: Show(System.Int32,System.Single,System.Byte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, byte)
  nameWithType: Log.Show(int, float, byte)
  fullName: DebugDrawUtils.Log.Show(int, float, byte)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 212
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a byte on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, byte val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Byte
      description: byte for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Byte)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Byte)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Byte)
  name.vb: Show(Integer, Single, Byte)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.UInt16)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.UInt16)
  id: Show(System.Int32,System.Single,System.UInt16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, ushort)
  nameWithType: Log.Show(int, float, ushort)
  fullName: DebugDrawUtils.Log.Show(int, float, ushort)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 229
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a ushort on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, ushort val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.UInt16
      description: ushort for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As UShort)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, UShort)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UShort)
  name.vb: Show(Integer, Single, UShort)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.UInt32)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.UInt32)
  id: Show(System.Int32,System.Single,System.UInt32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, uint)
  nameWithType: Log.Show(int, float, uint)
  fullName: DebugDrawUtils.Log.Show(int, float, uint)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 246
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a uint on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, uint val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.UInt32
      description: uint for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As UInteger)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, UInteger)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UInteger)
  name.vb: Show(Integer, Single, UInteger)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.UInt64)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.UInt64)
  id: Show(System.Int32,System.Single,System.UInt64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, ulong)
  nameWithType: Log.Show(int, float, ulong)
  fullName: DebugDrawUtils.Log.Show(int, float, ulong)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 263
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a ulong on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, ulong val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.UInt64
      description: ulong for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As ULong)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, ULong)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, ULong)
  name.vb: Show(Integer, Single, ULong)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Single)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Single)
  id: Show(System.Int32,System.Single,System.Single)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, float)
  nameWithType: Log.Show(int, float, float)
  fullName: DebugDrawUtils.Log.Show(int, float, float)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 280
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a float on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, float val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Single
      description: float for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Single)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Single)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Single)
  name.vb: Show(Integer, Single, Single)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Double)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Double)
  id: Show(System.Int32,System.Single,System.Double)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, double)
  nameWithType: Log.Show(int, float, double)
  fullName: DebugDrawUtils.Log.Show(int, float, double)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 297
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a double on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, double val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Double
      description: double for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Double)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Double)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Double)
  name.vb: Show(Integer, Single, Double)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Decimal)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Decimal)
  id: Show(System.Int32,System.Single,System.Decimal)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, decimal)
  nameWithType: Log.Show(int, float, decimal)
  fullName: DebugDrawUtils.Log.Show(int, float, decimal)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 314
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a decimal on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, decimal val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: System.Decimal
      description: decimal for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Decimal)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Decimal)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, Decimal)
  name.vb: Show(Integer, Single, Decimal)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector2)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector2)
  id: Show(System.Int32,System.Single,UnityEngine.Vector2)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Vector2)
  nameWithType: Log.Show(int, float, Vector2)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Vector2)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 331
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a Vector2 on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector2 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector2
      description: Vector2 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector2)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Vector2)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Vector2)
  name.vb: Show(Integer, Single, Vector2)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector3)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector3)
  id: Show(System.Int32,System.Single,UnityEngine.Vector3)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Vector3)
  nameWithType: Log.Show(int, float, Vector3)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Vector3)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 348
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a Vector3 on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector3 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector3
      description: Vector3 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector3)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Vector3)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Vector3)
  name.vb: Show(Integer, Single, Vector3)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector4)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector4)
  id: Show(System.Int32,System.Single,UnityEngine.Vector4)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Vector4)
  nameWithType: Log.Show(int, float, Vector4)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Vector4)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 365
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a Vector4 on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector4 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector4
      description: Vector4 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector4)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Vector4)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Vector4)
  name.vb: Show(Integer, Single, Vector4)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector2Int)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector2Int)
  id: Show(System.Int32,System.Single,UnityEngine.Vector2Int)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Vector2Int)
  nameWithType: Log.Show(int, float, Vector2Int)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Vector2Int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 382
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a Vector2Int on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector2Int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector2Int
      description: Vector2Int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector2Int)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Vector2Int)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Vector2Int)
  name.vb: Show(Integer, Single, Vector2Int)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector3Int)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Vector3Int)
  id: Show(System.Int32,System.Single,UnityEngine.Vector3Int)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Vector3Int)
  nameWithType: Log.Show(int, float, Vector3Int)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Vector3Int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 399
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a Vector3Int on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Vector3Int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Vector3Int
      description: Vector3Int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Vector3Int)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Vector3Int)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Vector3Int)
  name.vb: Show(Integer, Single, Vector3Int)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Matrix4x4)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Matrix4x4)
  id: Show(System.Int32,System.Single,UnityEngine.Matrix4x4)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Matrix4x4)
  nameWithType: Log.Show(int, float, Matrix4x4)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Matrix4x4)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 416
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a Matrix4x4 on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Matrix4x4 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Matrix4x4
      description: Matrix4x4 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Matrix4x4)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Matrix4x4)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Matrix4x4)
  name.vb: Show(Integer, Single, Matrix4x4)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Quaternion)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Quaternion)
  id: Show(System.Int32,System.Single,UnityEngine.Quaternion)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Quaternion)
  nameWithType: Log.Show(int, float, Quaternion)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Quaternion)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 433
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a Quaternion on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Quaternion val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Quaternion
      description: Quaternion for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Quaternion)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Quaternion)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Quaternion)
  name.vb: Show(Integer, Single, Quaternion)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Rect)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Rect)
  id: Show(System.Int32,System.Single,UnityEngine.Rect)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Rect)
  nameWithType: Log.Show(int, float, Rect)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Rect)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 450
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a Rect on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Rect val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.Rect
      description: Rect for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As Rect)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Rect)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Rect)
  name.vb: Show(Integer, Single, Rect)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.RectInt)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.RectInt)
  id: Show(System.Int32,System.Single,UnityEngine.RectInt)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, RectInt)
  nameWithType: Log.Show(int, float, RectInt)
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.RectInt)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 467
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a RectInt on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, RectInt val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: val
      type: UnityEngine.RectInt
      description: RectInt for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, val As RectInt)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, RectInt)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.RectInt)
  name.vb: Show(Integer, Single, RectInt)
- uid: DebugDrawUtils.Log.Show``1(System.Int32,System.Single,System.Collections.Generic.IEnumerable{``0})
  commentId: M:DebugDrawUtils.Log.Show``1(System.Int32,System.Single,System.Collections.Generic.IEnumerable{``0})
  id: Show``1(System.Int32,System.Single,System.Collections.Generic.IEnumerable{``0})
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show<T>(int, float, IEnumerable<T>)
  nameWithType: Log.Show<T>(int, float, IEnumerable<T>)
  fullName: DebugDrawUtils.Log.Show<T>(int, float, System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 484
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Logs a list the Unity Console.</p>
  example: []
  syntax:
    content: public static void Show<T>(int id, float duration, IEnumerable<T> list)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: list
      type: System.Collections.Generic.IEnumerable{{T}}
      description: List for display.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Show(Of T)(id As Integer, duration As Single, list As IEnumerable(Of T))
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Of T)(Integer, Single, IEnumerable(Of T))
  fullName.vb: DebugDrawUtils.Log.Show(Of T)(Integer, Single, System.Collections.Generic.IEnumerable(Of T))
  name.vb: Show(Of T)(Integer, Single, IEnumerable(Of T))
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Object[])
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.Object[])
  id: Show(System.Int32,System.Single,System.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, params object[])
  nameWithType: Log.Show(int, float, params object[])
  fullName: DebugDrawUtils.Log.Show(int, float, params object[])
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 501
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a list of items on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, params object[] args)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: args
      type: System.Object[]
      description: Items for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, ParamArray args As Object())
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, ParamArray Object())
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, ParamArray Object())
  name.vb: Show(Integer, Single, ParamArray Object())
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Object[])
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.Object[])
  id: Show(System.Int32,System.Single,UnityEngine.Object[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, Object[])
  nameWithType: Log.Show(int, float, Object[])
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.Object[])
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 518
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a list of Objects on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, Object[] args)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: args
      type: UnityEngine.Object[]
      description: Items for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, args As [Object]())
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, Object())
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.Object())
  name.vb: Show(Integer, Single, Object())
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.GameObject[])
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,UnityEngine.GameObject[])
  id: Show(System.Int32,System.Single,UnityEngine.GameObject[])
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, GameObject[])
  nameWithType: Log.Show(int, float, GameObject[])
  fullName: DebugDrawUtils.Log.Show(int, float, UnityEngine.GameObject[])
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 535
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a list of GameObject on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, GameObject[] args)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: args
      type: UnityEngine.GameObject[]
      description: Items for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, args As GameObject())
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, GameObject())
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, UnityEngine.GameObject())
  name.vb: Show(Integer, Single, GameObject())
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Object)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Object)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Object)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, Object)
  nameWithType: Log.Show(int, float, string, Object)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.Object)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 553
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and bool on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Object val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Object
      description: bool for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As [Object])
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Object)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.Object)
  name.vb: Show(Integer, Single, String, Object)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Boolean)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Boolean)
  id: Show(System.Int32,System.Single,System.String,System.Boolean)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, bool)
  nameWithType: Log.Show(int, float, string, bool)
  fullName: DebugDrawUtils.Log.Show(int, float, string, bool)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 571
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and bool on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, bool val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Boolean
      description: bool for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Boolean)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Boolean)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, Boolean)
  name.vb: Show(Integer, Single, String, Boolean)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.String)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.String)
  id: Show(System.Int32,System.Single,System.String,System.String)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, string)
  nameWithType: Log.Show(int, float, string, string)
  fullName: DebugDrawUtils.Log.Show(int, float, string, string)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 589
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and string on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, string val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.String
      description: bool for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As String)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, String)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, String)
  name.vb: Show(Integer, Single, String, String)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Char)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Char)
  id: Show(System.Int32,System.Single,System.String,System.Char)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, char)
  nameWithType: Log.Show(int, float, string, char)
  fullName: DebugDrawUtils.Log.Show(int, float, string, char)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 607
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and char on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, char val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Char
      description: char for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Char)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Char)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, Char)
  name.vb: Show(Integer, Single, String, Char)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.SByte)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.SByte)
  id: Show(System.Int32,System.Single,System.String,System.SByte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, sbyte)
  nameWithType: Log.Show(int, float, string, sbyte)
  fullName: DebugDrawUtils.Log.Show(int, float, string, sbyte)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 625
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and sbyte on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, sbyte val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.SByte
      description: sbyte for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As SByte)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, SByte)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, SByte)
  name.vb: Show(Integer, Single, String, SByte)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Int16)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Int16)
  id: Show(System.Int32,System.Single,System.String,System.Int16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, short)
  nameWithType: Log.Show(int, float, string, short)
  fullName: DebugDrawUtils.Log.Show(int, float, string, short)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 643
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and short on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, short val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int16
      description: short for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Short)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Short)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, Short)
  name.vb: Show(Integer, Single, String, Short)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Int32)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Int32)
  id: Show(System.Int32,System.Single,System.String,System.Int32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, int)
  nameWithType: Log.Show(int, float, string, int)
  fullName: DebugDrawUtils.Log.Show(int, float, string, int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 661
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and int on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int32
      description: int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Integer)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Integer)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, Integer)
  name.vb: Show(Integer, Single, String, Integer)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Int64)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Int64)
  id: Show(System.Int32,System.Single,System.String,System.Int64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, long)
  nameWithType: Log.Show(int, float, string, long)
  fullName: DebugDrawUtils.Log.Show(int, float, string, long)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 679
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and long on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, long val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Int64
      description: long for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Long)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Long)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, Long)
  name.vb: Show(Integer, Single, String, Long)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Byte)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Byte)
  id: Show(System.Int32,System.Single,System.String,System.Byte)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, byte)
  nameWithType: Log.Show(int, float, string, byte)
  fullName: DebugDrawUtils.Log.Show(int, float, string, byte)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 697
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and byte on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, byte val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Byte
      description: byte for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Byte)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Byte)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, Byte)
  name.vb: Show(Integer, Single, String, Byte)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.UInt16)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.UInt16)
  id: Show(System.Int32,System.Single,System.String,System.UInt16)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, ushort)
  nameWithType: Log.Show(int, float, string, ushort)
  fullName: DebugDrawUtils.Log.Show(int, float, string, ushort)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 715
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and ushort on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, ushort val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt16
      description: ushort for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As UShort)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, UShort)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UShort)
  name.vb: Show(Integer, Single, String, UShort)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.UInt32)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.UInt32)
  id: Show(System.Int32,System.Single,System.String,System.UInt32)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, uint)
  nameWithType: Log.Show(int, float, string, uint)
  fullName: DebugDrawUtils.Log.Show(int, float, string, uint)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 733
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and uint on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, uint val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt32
      description: uint for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As UInteger)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, UInteger)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UInteger)
  name.vb: Show(Integer, Single, String, UInteger)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.UInt64)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.UInt64)
  id: Show(System.Int32,System.Single,System.String,System.UInt64)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, ulong)
  nameWithType: Log.Show(int, float, string, ulong)
  fullName: DebugDrawUtils.Log.Show(int, float, string, ulong)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 751
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and ulong on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, ulong val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.UInt64
      description: ulong for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As ULong)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, ULong)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, ULong)
  name.vb: Show(Integer, Single, String, ULong)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Single)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Single)
  id: Show(System.Int32,System.Single,System.String,System.Single)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, float)
  nameWithType: Log.Show(int, float, string, float)
  fullName: DebugDrawUtils.Log.Show(int, float, string, float)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 769
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and float on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, float val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Single
      description: float for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Single)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Single)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, Single)
  name.vb: Show(Integer, Single, String, Single)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Double)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Double)
  id: Show(System.Int32,System.Single,System.String,System.Double)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, double)
  nameWithType: Log.Show(int, float, string, double)
  fullName: DebugDrawUtils.Log.Show(int, float, string, double)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 787
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and double on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, double val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Double
      description: double for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Double)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Double)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, Double)
  name.vb: Show(Integer, Single, String, Double)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Decimal)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,System.Decimal)
  id: Show(System.Int32,System.Single,System.String,System.Decimal)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, decimal)
  nameWithType: Log.Show(int, float, string, decimal)
  fullName: DebugDrawUtils.Log.Show(int, float, string, decimal)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 805
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and decimal on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, decimal val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: System.Decimal
      description: decimal for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Decimal)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Decimal)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, Decimal)
  name.vb: Show(Integer, Single, String, Decimal)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector2)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, Vector2)
  nameWithType: Log.Show(int, float, string, Vector2)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.Vector2)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 823
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and Vector2 on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector2 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector2
      description: Vector2 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector2)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Vector2)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.Vector2)
  name.vb: Show(Integer, Single, String, Vector2)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector3)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, Vector3)
  nameWithType: Log.Show(int, float, string, Vector3)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.Vector3)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 841
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and Vector3 on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector3 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector3
      description: Vector3 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector3)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Vector3)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.Vector3)
  name.vb: Show(Integer, Single, String, Vector3)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector4)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector4)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector4)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, Vector4)
  nameWithType: Log.Show(int, float, string, Vector4)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.Vector4)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 859
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and Vector4 on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector4 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector4
      description: Vector4 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector4)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Vector4)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.Vector4)
  name.vb: Show(Integer, Single, String, Vector4)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2Int)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector2Int)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector2Int)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, Vector2Int)
  nameWithType: Log.Show(int, float, string, Vector2Int)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.Vector2Int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 877
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and Vector2Int on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector2Int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector2Int
      description: Vector2Int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector2Int)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Vector2Int)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.Vector2Int)
  name.vb: Show(Integer, Single, String, Vector2Int)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3Int)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Vector3Int)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Vector3Int)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, Vector3Int)
  nameWithType: Log.Show(int, float, string, Vector3Int)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.Vector3Int)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 895
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and Vector3Int on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Vector3Int val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Vector3Int
      description: Vector3Int for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Vector3Int)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Vector3Int)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.Vector3Int)
  name.vb: Show(Integer, Single, String, Vector3Int)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Matrix4x4)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Matrix4x4)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Matrix4x4)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, Matrix4x4)
  nameWithType: Log.Show(int, float, string, Matrix4x4)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.Matrix4x4)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 913
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and Matrix4x4 on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Matrix4x4 val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Matrix4x4
      description: Matrix4x4 for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Matrix4x4)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Matrix4x4)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.Matrix4x4)
  name.vb: Show(Integer, Single, String, Matrix4x4)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Quaternion)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Quaternion)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Quaternion)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, Quaternion)
  nameWithType: Log.Show(int, float, string, Quaternion)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.Quaternion)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 931
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and Quaternion on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Quaternion val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Quaternion
      description: Quaternion for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Quaternion)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Quaternion)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.Quaternion)
  name.vb: Show(Integer, Single, String, Quaternion)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Rect)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.Rect)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.Rect)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, Rect)
  nameWithType: Log.Show(int, float, string, Rect)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.Rect)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 949
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and Rect on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, Rect val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.Rect
      description: Rect for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As Rect)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, Rect)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.Rect)
  name.vb: Show(Integer, Single, String, Rect)
- uid: DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.RectInt)
  commentId: M:DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String,UnityEngine.RectInt)
  id: Show(System.Int32,System.Single,System.String,UnityEngine.RectInt)
  parent: DebugDrawUtils.Log
  langs:
  - csharp
  - vb
  name: Show(int, float, string, RectInt)
  nameWithType: Log.Show(int, float, string, RectInt)
  fullName: DebugDrawUtils.Log.Show(int, float, string, UnityEngine.RectInt)
  type: Method
  source:
    id: Show
    path: D:\Unity\CustomPackages\DebugDraw\Assets\DebugDraw\Runtime\LogShowMethods.cs
    startLine: 967
  assemblies:
  - c.DebugDraw.Runtime
  namespace: DebugDrawUtils
  summary: <p>Prints a message and RectInt on the screen.</p>
  example: []
  syntax:
    content: public static void Show(int id, float duration, string message, RectInt val)
    parameters:
    - id: id
      type: System.Int32
      description: If non-zero, a unique key to prevent the same message from being added multiple times.
    - id: duration
      type: System.Single
      description: How long to display the message, in seconds. Pass 0 to only display for the next frame.
    - id: message
      type: System.String
      description: Message for display.
    - id: val
      type: UnityEngine.RectInt
      description: RectInt for display.
    content.vb: Public Shared Sub Show(id As Integer, duration As Single, message As String, val As RectInt)
  overload: DebugDrawUtils.Log.Show*
  nameWithType.vb: Log.Show(Integer, Single, String, RectInt)
  fullName.vb: DebugDrawUtils.Log.Show(Integer, Single, String, UnityEngine.RectInt)
  name.vb: Show(Integer, Single, String, RectInt)
references:
- uid: DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  commentId: M:DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  isExternal: true
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  name: Print(GameObject[])
  nameWithType: Log.Print(GameObject[])
  fullName: DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  nameWithType.vb: Log.Print(GameObject())
  fullName.vb: DebugDrawUtils.Log.Print(UnityEngine.GameObject())
  name.vb: Print(GameObject())
  spec.csharp:
  - uid: DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
    name: Print
    href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  - name: (
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
    name: Print
    href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Print(UnityEngine.GameObject[])
  - name: (
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: DebugDrawUtils
  commentId: N:DebugDrawUtils
  href: DebugDrawUtils.html
  name: DebugDrawUtils
  nameWithType: DebugDrawUtils
  fullName: DebugDrawUtils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.LogType
  commentId: T:UnityEngine.LogType
  parent: UnityEngine
  isExternal: true
  name: LogType
  nameWithType: LogType
  fullName: UnityEngine.LogType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: UnityEngine.Color?
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UnityEngine.GUIStyle
  commentId: T:UnityEngine.GUIStyle
  parent: UnityEngine
  isExternal: true
  name: GUIStyle
  nameWithType: GUIStyle
  fullName: UnityEngine.GUIStyle
- uid: DebugDrawUtils.Log.Print*
  commentId: Overload:DebugDrawUtils.Log.Print
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Print(System.String)
  name: Print
  nameWithType: Log.Print
  fullName: DebugDrawUtils.Log.Print
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: DebugDrawUtils.Log.PrintFormat*
  commentId: Overload:DebugDrawUtils.Log.PrintFormat
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.PrintFormat(System.String,System.Object[])
  name: PrintFormat
  nameWithType: Log.PrintFormat
  fullName: DebugDrawUtils.Log.PrintFormat
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: UnityEngine.LogOption
  commentId: T:UnityEngine.LogOption
  parent: UnityEngine
  isExternal: true
  name: LogOption
  nameWithType: LogOption
  fullName: UnityEngine.LogOption
- uid: DebugDrawUtils.Log.PrintException*
  commentId: Overload:DebugDrawUtils.Log.PrintException
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.PrintException(System.Exception)
  name: PrintException
  nameWithType: Log.PrintException
  fullName: DebugDrawUtils.Log.PrintException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: DebugDrawUtils.Log.Warn*
  commentId: Overload:DebugDrawUtils.Log.Warn
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Warn(System.String)
  name: Warn
  nameWithType: Log.Warn
  fullName: DebugDrawUtils.Log.Warn
- uid: DebugDrawUtils.Log.WarnFormat*
  commentId: Overload:DebugDrawUtils.Log.WarnFormat
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.WarnFormat(System.String,System.Object[])
  name: WarnFormat
  nameWithType: Log.WarnFormat
  fullName: DebugDrawUtils.Log.WarnFormat
- uid: DebugDrawUtils.Log.Error*
  commentId: Overload:DebugDrawUtils.Log.Error
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Error(System.String)
  name: Error
  nameWithType: Log.Error
  fullName: DebugDrawUtils.Log.Error
- uid: DebugDrawUtils.Log.ErrorFormat*
  commentId: Overload:DebugDrawUtils.Log.ErrorFormat
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.ErrorFormat(System.String,System.Object[])
  name: ErrorFormat
  nameWithType: Log.ErrorFormat
  fullName: DebugDrawUtils.Log.ErrorFormat
- uid: DebugDrawUtils.Log.GetString*
  commentId: Overload:DebugDrawUtils.Log.GetString
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.GetString(System.Object)
  name: GetString
  nameWithType: Log.GetString
  fullName: DebugDrawUtils.Log.GetString
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: DebugDrawUtils.Log.GetDictString*
  commentId: Overload:DebugDrawUtils.Log.GetDictString
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.GetDictString``2(System.Collections.Generic.IDictionary{``0,``1})
  name: GetDictString
  nameWithType: Log.GetDictString
  fullName: DebugDrawUtils.Log.GetDictString
- uid: System.Collections.Generic.IDictionary{{TK},{TV}}
  commentId: T:System.Collections.Generic.IDictionary{``0,``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TK, TV>
  nameWithType: IDictionary<TK, TV>
  fullName: System.Collections.Generic.IDictionary<TK, TV>
  nameWithType.vb: IDictionary(Of TK, TV)
  fullName.vb: System.Collections.Generic.IDictionary(Of TK, TV)
  name.vb: IDictionary(Of TK, TV)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: DebugDrawUtils.Log.GetKeyValuePairsString*
  commentId: Overload:DebugDrawUtils.Log.GetKeyValuePairsString
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.GetKeyValuePairsString(System.Object[])
  name: GetKeyValuePairsString
  nameWithType: Log.GetKeyValuePairsString
  fullName: DebugDrawUtils.Log.GetKeyValuePairsString
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine.Vector4
  commentId: T:UnityEngine.Vector4
  parent: UnityEngine
  isExternal: true
  name: Vector4
  nameWithType: Vector4
  fullName: UnityEngine.Vector4
- uid: DebugDrawUtils.Log.GetArgString*
  commentId: Overload:DebugDrawUtils.Log.GetArgString
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.GetArgString(System.Object[])
  name: GetArgString
  nameWithType: Log.GetArgString
  fullName: DebugDrawUtils.Log.GetArgString
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine.Vector3Int
  commentId: T:UnityEngine.Vector3Int
  parent: UnityEngine
  isExternal: true
  name: Vector3Int
  nameWithType: Vector3Int
  fullName: UnityEngine.Vector3Int
- uid: UnityEngine.Matrix4x4
  commentId: T:UnityEngine.Matrix4x4
  parent: UnityEngine
  isExternal: true
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: UnityEngine.Matrix4x4
- uid: UnityEngine.Quaternion
  commentId: T:UnityEngine.Quaternion
  parent: UnityEngine
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: UnityEngine.Quaternion
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: UnityEngine.RectInt
  commentId: T:UnityEngine.RectInt
  parent: UnityEngine
  isExternal: true
  name: RectInt
  nameWithType: RectInt
  fullName: UnityEngine.RectInt
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: DebugDrawUtils.Log.PrintKeyValue*
  commentId: Overload:DebugDrawUtils.Log.PrintKeyValue
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.PrintKeyValue(System.Object[])
  name: PrintKeyValue
  nameWithType: Log.PrintKeyValue
  fullName: DebugDrawUtils.Log.PrintKeyValue
- uid: UnityEngine.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: UnityEngine.Object[]
  nameWithType.vb: Object()
  fullName.vb: UnityEngine.Object()
  name.vb: Object()
  spec.csharp:
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.GameObject[]
  isExternal: true
  name: GameObject[]
  nameWithType: GameObject[]
  fullName: UnityEngine.GameObject[]
  nameWithType.vb: GameObject()
  fullName.vb: UnityEngine.GameObject()
  name.vb: GameObject()
  spec.csharp:
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: (
  - name: )
- uid: DebugDrawUtils.Log.TimeEnd
  commentId: M:DebugDrawUtils.Log.TimeEnd
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.TimeEnd
  name: TimeEnd()
  nameWithType: Log.TimeEnd()
  fullName: DebugDrawUtils.Log.TimeEnd()
  spec.csharp:
  - uid: DebugDrawUtils.Log.TimeEnd
    name: TimeEnd
    href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.TimeEnd
  - name: (
  - name: )
  spec.vb:
  - uid: DebugDrawUtils.Log.TimeEnd
    name: TimeEnd
    href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.TimeEnd
  - name: (
  - name: )
- uid: DebugDrawUtils.Log.TimeStop
  commentId: M:DebugDrawUtils.Log.TimeStop
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.TimeStop
  name: TimeStop()
  nameWithType: Log.TimeStop()
  fullName: DebugDrawUtils.Log.TimeStop()
  spec.csharp:
  - uid: DebugDrawUtils.Log.TimeStop
    name: TimeStop
    href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.TimeStop
  - name: (
  - name: )
  spec.vb:
  - uid: DebugDrawUtils.Log.TimeStop
    name: TimeStop
    href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.TimeStop
  - name: (
  - name: )
- uid: DebugDrawUtils.Log.Time(System.String)
  commentId: M:DebugDrawUtils.Log.Time(System.String)
  isExternal: true
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Time(System.String)
  name: Time(string)
  nameWithType: Log.Time(string)
  fullName: DebugDrawUtils.Log.Time(string)
  nameWithType.vb: Log.Time(String)
  fullName.vb: DebugDrawUtils.Log.Time(String)
  name.vb: Time(String)
  spec.csharp:
  - uid: DebugDrawUtils.Log.Time(System.String)
    name: Time
    href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Time(System.String)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: DebugDrawUtils.Log.Time(System.String)
    name: Time
    href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Time(System.String)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: DebugDrawUtils.Log.Time*
  commentId: Overload:DebugDrawUtils.Log.Time
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Time(System.String)
  name: Time
  nameWithType: Log.Time
  fullName: DebugDrawUtils.Log.Time
- uid: DebugDrawUtils.Log.TimeEnd*
  commentId: Overload:DebugDrawUtils.Log.TimeEnd
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.TimeEnd
  name: TimeEnd
  nameWithType: Log.TimeEnd
  fullName: DebugDrawUtils.Log.TimeEnd
- uid: DebugDrawUtils.Log.TimeStop*
  commentId: Overload:DebugDrawUtils.Log.TimeStop
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.TimeStop
  name: TimeStop
  nameWithType: Log.TimeStop
  fullName: DebugDrawUtils.Log.TimeStop
- uid: DebugDrawUtils.Log.Clear*
  commentId: Overload:DebugDrawUtils.Log.Clear
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Clear
  name: Clear
  nameWithType: Log.Clear
  fullName: DebugDrawUtils.Log.Clear
- uid: DebugDrawUtils.Log.Show*
  commentId: Overload:DebugDrawUtils.Log.Show
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.Show(System.Int32,System.Single,System.String)
  name: Show
  nameWithType: Log.Show
  fullName: DebugDrawUtils.Log.Show
- uid: DebugDrawUtils.Log.ShowFormat*
  commentId: Overload:DebugDrawUtils.Log.ShowFormat
  href: DebugDrawUtils.Log.html#DebugDrawUtils.Log.ShowFormat(System.Int32,System.Single,System.String,System.Object[])
  name: ShowFormat
  nameWithType: Log.ShowFormat
  fullName: DebugDrawUtils.Log.ShowFormat
